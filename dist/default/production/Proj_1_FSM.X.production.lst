

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Sep 06 14:57:20 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 1.42
    82                           ; Generated 13/04/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F46K80 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116 ;; Function _WM_HANDLER_INIT is unused but had its address taken
   117  0000                     
   118 ;; Function _WM_HANDLER_NONE is unused but had its address taken
   119  0000                     
   120 ;; Function _WM_HANDLER_FAULT_SENSE is unused but had its address taken
   121  0000                     
   122 ;; Function _WM_HANDLER_TIMER_DONE is unused but had its address taken
   123  0000                     
   124 ;; Function _WM_HANDLER_TOGGLE_MODE is unused but had its address taken
   125  0000                     
   126 ;; Function _WM_HANDLER_START_WEIGHING is unused but had its address taken
   127  0000                     
   128 ;; Function _WM_HANDLER_LOAD_SENSE is unused but had its address taken
   129  0000                     
   130 ;; Function _WM_HANDLER_START_RUNNING is unused but had its address taken
   131  0000                     
   132 ;; Function _WM_HANDLER_WATER_LEVEL_SENSE is unused but had its address taken
   133  0000                     
   134                           	psect	idataCOMRAM
   135  000AB4                     __pidataCOMRAM:
   136                           	opt stack 0
   137                           
   138                           ;initializer for _state2
   139  000AB4  01                 	db	1
   140                           
   141                           	psect	mediumconst
   142  00FD82                     __pmediumconst:
   143                           	opt stack 0
   144  00FD82  00                 	db	0
   145  00FD83                     _qsm_lookup_table:
   146                           	opt stack 0
   147  00FD83  00                 	db	0
   148  00FD84  00                 	db	0
   149  00FD85  00                 	db	0
   150  00FD86  00                 	db	0
   151  00FD87  00                 	db	0
   152  00FD88  00                 	db	0
   153  00FD89  00                 	db	0
   154  00FD8A  00                 	db	0
   155  00FD8B  00                 	db	0
   156  00FD8C  00                 	db	0
   157  00FD8D  00                 	db	0
   158  00FD8E  00                 	db	0
   159  00FD8F  00                 	db	0
   160  00FD90  00                 	db	0
   161  00FD91  00                 	db	0
   162  00FD92  00                 	db	0
   163  00FD93  00                 	db	0
   164  00FD94  00                 	db	0
   165  00FD95  00                 	db	0
   166  00FD96  00                 	db	0
   167  00FD97  00                 	db	0
   168  00FD98  00                 	db	0
   169  00FD99  00                 	db	0
   170  00FD9A  01                 	db	1
   171  00FD9B  00                 	db	0
   172  00FD9C  00                 	db	0
   173  00FD9D  00                 	db	0
   174  00FD9E  00                 	db	0
   175  00FD9F  00                 	db	0
   176  00FDA0  00                 	db	0
   177  00FDA1  00                 	db	0
   178  00FDA2  00                 	db	0
   179  00FDA3  00                 	db	0
   180  00FDA4  00                 	db	0
   181  00FDA5  00                 	db	0
   182  00FDA6  00                 	db	0
   183  00FDA7  00                 	db	0
   184  00FDA8  00                 	db	0
   185  00FDA9  00                 	db	0
   186  00FDAA  00                 	db	0
   187  00FDAB  00                 	db	0
   188  00FDAC  00                 	db	0
   189  00FDAD  00                 	db	0
   190  00FDAE  00                 	db	0
   191  00FDAF  00                 	db	0
   192  00FDB0  00                 	db	0
   193  00FDB1  02                 	db	2
   194  00FDB2  00                 	db	0
   195  00FDB3  00                 	db	0
   196  00FDB4  00                 	db	0
   197  00FDB5  00                 	db	0
   198  00FDB6  00                 	db	0
   199  00FDB7  00                 	db	0
   200  00FDB8  00                 	db	0
   201  00FDB9  00                 	db	0
   202  00FDBA  00                 	db	0
   203  00FDBB  00                 	db	0
   204  00FDBC  00                 	db	0
   205  00FDBD  00                 	db	0
   206  00FDBE  00                 	db	0
   207  00FDBF  00                 	db	0
   208  00FDC0  00                 	db	0
   209  00FDC1  00                 	db	0
   210  00FDC2  00                 	db	0
   211  00FDC3  00                 	db	0
   212  00FDC4  00                 	db	0
   213  00FDC5  00                 	db	0
   214  00FDC6  00                 	db	0
   215  00FDC7  00                 	db	0
   216  00FDC8  03                 	db	3
   217  00FDC9  00                 	db	0
   218  00FDCA  00                 	db	0
   219  00FDCB  00                 	db	0
   220  00FDCC  00                 	db	0
   221  00FDCD  00                 	db	0
   222  00FDCE  00                 	db	0
   223  00FDCF  00                 	db	0
   224  00FDD0  00                 	db	0
   225  00FDD1  00                 	db	0
   226  00FDD2  00                 	db	0
   227  00FDD3  00                 	db	0
   228  00FDD4  00                 	db	0
   229  00FDD5  00                 	db	0
   230  00FDD6  00                 	db	0
   231  00FDD7  00                 	db	0
   232  00FDD8  00                 	db	0
   233  00FDD9  00                 	db	0
   234  00FDDA  00                 	db	0
   235  00FDDB  00                 	db	0
   236  00FDDC  00                 	db	0
   237  00FDDD  00                 	db	0
   238  00FDDE  00                 	db	0
   239  00FDDF  04                 	db	4
   240  00FDE0  00                 	db	0
   241  00FDE1  00                 	db	0
   242  00FDE2  00                 	db	0
   243  00FDE3  00                 	db	0
   244  00FDE4  00                 	db	0
   245  00FDE5  00                 	db	0
   246  00FDE6  00                 	db	0
   247  00FDE7  00                 	db	0
   248  00FDE8  00                 	db	0
   249  00FDE9  00                 	db	0
   250  00FDEA  00                 	db	0
   251  00FDEB  00                 	db	0
   252  00FDEC  00                 	db	0
   253  00FDED  00                 	db	0
   254  00FDEE  00                 	db	0
   255  00FDEF  00                 	db	0
   256  00FDF0  00                 	db	0
   257  00FDF1  00                 	db	0
   258  00FDF2  00                 	db	0
   259  00FDF3  00                 	db	0
   260  00FDF4  00                 	db	0
   261  00FDF5  00                 	db	0
   262  00FDF6  05                 	db	5
   263  00FDF7  00                 	db	0
   264  00FDF8  00                 	db	0
   265  00FDF9  00                 	db	0
   266  00FDFA  00                 	db	0
   267  00FDFB  00                 	db	0
   268  00FDFC  00                 	db	0
   269  00FDFD  00                 	db	0
   270  00FDFE  00                 	db	0
   271  00FDFF  00                 	db	0
   272  00FE00  00                 	db	0
   273  00FE01  00                 	db	0
   274  00FE02  00                 	db	0
   275  00FE03  00                 	db	0
   276  00FE04  00                 	db	0
   277  00FE05  00                 	db	0
   278  00FE06  00                 	db	0
   279  00FE07  00                 	db	0
   280  00FE08  00                 	db	0
   281  00FE09  00                 	db	0
   282  00FE0A  00                 	db	0
   283  00FE0B  00                 	db	0
   284  00FE0C  00                 	db	0
   285  00FE0D  06                 	db	6
   286  00FE0E  00                 	db	0
   287  00FE0F  00                 	db	0
   288  00FE10  00                 	db	0
   289  00FE11  00                 	db	0
   290  00FE12  00                 	db	0
   291  00FE13  00                 	db	0
   292  00FE14  00                 	db	0
   293  00FE15  00                 	db	0
   294  00FE16  00                 	db	0
   295  00FE17  00                 	db	0
   296  00FE18  00                 	db	0
   297  00FE19  00                 	db	0
   298  00FE1A  00                 	db	0
   299  00FE1B  00                 	db	0
   300  00FE1C  00                 	db	0
   301  00FE1D  00                 	db	0
   302  00FE1E  00                 	db	0
   303  00FE1F  00                 	db	0
   304  00FE20  00                 	db	0
   305  00FE21  00                 	db	0
   306  00FE22  00                 	db	0
   307  00FE23  00                 	db	0
   308  00FE24                     __end_of_qsm_lookup_table:
   309                           	opt stack 0
   310  00FE24                     _dpowers:
   311                           	opt stack 0
   312  00FE24  0001               	dw	1
   313  00FE26  000A               	dw	10
   314  00FE28  0064               	dw	100
   315  00FE2A  03E8               	dw	1000
   316  00FE2C  2710               	dw	10000
   317  00FE2E                     __end_of_dpowers:
   318                           	opt stack 0
   319  00FE2E  57                 	db	87	;'W'
   320  00FE2F  4D                 	db	77	;'M'
   321  00FE30  5F                 	db	95	;'_'
   322  00FE31  48                 	db	72	;'H'
   323  00FE32  41                 	db	65	;'A'
   324  00FE33  4E                 	db	78	;'N'
   325  00FE34  44                 	db	68	;'D'
   326  00FE35  4C                 	db	76	;'L'
   327  00FE36  45                 	db	69	;'E'
   328  00FE37  52                 	db	82	;'R'
   329  00FE38  5F                 	db	95	;'_'
   330  00FE39  57                 	db	87	;'W'
   331  00FE3A  41                 	db	65	;'A'
   332  00FE3B  54                 	db	84	;'T'
   333  00FE3C  45                 	db	69	;'E'
   334  00FE3D  52                 	db	82	;'R'
   335  00FE3E  5F                 	db	95	;'_'
   336  00FE3F  4C                 	db	76	;'L'
   337  00FE40  45                 	db	69	;'E'
   338  00FE41  56                 	db	86	;'V'
   339  00FE42  45                 	db	69	;'E'
   340  00FE43  4C                 	db	76	;'L'
   341  00FE44  5F                 	db	95	;'_'
   342  00FE45  53                 	db	83	;'S'
   343  00FE46  45                 	db	69	;'E'
   344  00FE47  4E                 	db	78	;'N'
   345  00FE48  53                 	db	83	;'S'
   346  00FE49  45                 	db	69	;'E'
   347  00FE4A  20                 	db	32
   348  00FE4B  0A                 	db	10
   349  00FE4C  0D                 	db	13
   350  00FE4D  00                 	db	0
   351  00FE4E  57                 	db	87	;'W'
   352  00FE4F  4D                 	db	77	;'M'
   353  00FE50  5F                 	db	95	;'_'
   354  00FE51  48                 	db	72	;'H'
   355  00FE52  41                 	db	65	;'A'
   356  00FE53  4E                 	db	78	;'N'
   357  00FE54  44                 	db	68	;'D'
   358  00FE55  4C                 	db	76	;'L'
   359  00FE56  45                 	db	69	;'E'
   360  00FE57  52                 	db	82	;'R'
   361  00FE58  5F                 	db	95	;'_'
   362  00FE59  53                 	db	83	;'S'
   363  00FE5A  54                 	db	84	;'T'
   364  00FE5B  41                 	db	65	;'A'
   365  00FE5C  52                 	db	82	;'R'
   366  00FE5D  54                 	db	84	;'T'
   367  00FE5E  5F                 	db	95	;'_'
   368  00FE5F  57                 	db	87	;'W'
   369  00FE60  45                 	db	69	;'E'
   370  00FE61  49                 	db	73	;'I'
   371  00FE62  47                 	db	71	;'G'
   372  00FE63  48                 	db	72	;'H'
   373  00FE64  49                 	db	73	;'I'
   374  00FE65  4E                 	db	78	;'N'
   375  00FE66  47                 	db	71	;'G'
   376  00FE67  20                 	db	32
   377  00FE68  0A                 	db	10
   378  00FE69  0D                 	db	13
   379  00FE6A  00                 	db	0
   380  00FE6B  57                 	db	87	;'W'
   381  00FE6C  4D                 	db	77	;'M'
   382  00FE6D  5F                 	db	95	;'_'
   383  00FE6E  48                 	db	72	;'H'
   384  00FE6F  41                 	db	65	;'A'
   385  00FE70  4E                 	db	78	;'N'
   386  00FE71  44                 	db	68	;'D'
   387  00FE72  4C                 	db	76	;'L'
   388  00FE73  45                 	db	69	;'E'
   389  00FE74  52                 	db	82	;'R'
   390  00FE75  5F                 	db	95	;'_'
   391  00FE76  53                 	db	83	;'S'
   392  00FE77  54                 	db	84	;'T'
   393  00FE78  41                 	db	65	;'A'
   394  00FE79  52                 	db	82	;'R'
   395  00FE7A  54                 	db	84	;'T'
   396  00FE7B  5F                 	db	95	;'_'
   397  00FE7C  52                 	db	82	;'R'
   398  00FE7D  55                 	db	85	;'U'
   399  00FE7E  4E                 	db	78	;'N'
   400  00FE7F  4E                 	db	78	;'N'
   401  00FE80  49                 	db	73	;'I'
   402  00FE81  4E                 	db	78	;'N'
   403  00FE82  47                 	db	71	;'G'
   404  00FE83  20                 	db	32
   405  00FE84  0A                 	db	10
   406  00FE85  0D                 	db	13
   407  00FE86  00                 	db	0
   408  00FE87  57                 	db	87	;'W'
   409  00FE88  4D                 	db	77	;'M'
   410  00FE89  5F                 	db	95	;'_'
   411  00FE8A  48                 	db	72	;'H'
   412  00FE8B  41                 	db	65	;'A'
   413  00FE8C  4E                 	db	78	;'N'
   414  00FE8D  44                 	db	68	;'D'
   415  00FE8E  4C                 	db	76	;'L'
   416  00FE8F  45                 	db	69	;'E'
   417  00FE90  52                 	db	82	;'R'
   418  00FE91  5F                 	db	95	;'_'
   419  00FE92  54                 	db	84	;'T'
   420  00FE93  4F                 	db	79	;'O'
   421  00FE94  47                 	db	71	;'G'
   422  00FE95  47                 	db	71	;'G'
   423  00FE96  4C                 	db	76	;'L'
   424  00FE97  45                 	db	69	;'E'
   425  00FE98  5F                 	db	95	;'_'
   426  00FE99  4D                 	db	77	;'M'
   427  00FE9A  4F                 	db	79	;'O'
   428  00FE9B  44                 	db	68	;'D'
   429  00FE9C  45                 	db	69	;'E'
   430  00FE9D  20                 	db	32
   431  00FE9E  0A                 	db	10
   432  00FE9F  0D                 	db	13
   433  00FEA0  00                 	db	0
   434  00FEA1  57                 	db	87	;'W'
   435  00FEA2  4D                 	db	77	;'M'
   436  00FEA3  5F                 	db	95	;'_'
   437  00FEA4  48                 	db	72	;'H'
   438  00FEA5  41                 	db	65	;'A'
   439  00FEA6  4E                 	db	78	;'N'
   440  00FEA7  44                 	db	68	;'D'
   441  00FEA8  4C                 	db	76	;'L'
   442  00FEA9  45                 	db	69	;'E'
   443  00FEAA  52                 	db	82	;'R'
   444  00FEAB  5F                 	db	95	;'_'
   445  00FEAC  46                 	db	70	;'F'
   446  00FEAD  41                 	db	65	;'A'
   447  00FEAE  55                 	db	85	;'U'
   448  00FEAF  4C                 	db	76	;'L'
   449  00FEB0  54                 	db	84	;'T'
   450  00FEB1  5F                 	db	95	;'_'
   451  00FEB2  53                 	db	83	;'S'
   452  00FEB3  45                 	db	69	;'E'
   453  00FEB4  4E                 	db	78	;'N'
   454  00FEB5  53                 	db	83	;'S'
   455  00FEB6  45                 	db	69	;'E'
   456  00FEB7  20                 	db	32
   457  00FEB8  0A                 	db	10
   458  00FEB9  0D                 	db	13
   459  00FEBA  00                 	db	0
   460  00FEBB  57                 	db	87	;'W'
   461  00FEBC  4D                 	db	77	;'M'
   462  00FEBD  5F                 	db	95	;'_'
   463  00FEBE  48                 	db	72	;'H'
   464  00FEBF  41                 	db	65	;'A'
   465  00FEC0  4E                 	db	78	;'N'
   466  00FEC1  44                 	db	68	;'D'
   467  00FEC2  4C                 	db	76	;'L'
   468  00FEC3  45                 	db	69	;'E'
   469  00FEC4  52                 	db	82	;'R'
   470  00FEC5  5F                 	db	95	;'_'
   471  00FEC6  54                 	db	84	;'T'
   472  00FEC7  49                 	db	73	;'I'
   473  00FEC8  4D                 	db	77	;'M'
   474  00FEC9  45                 	db	69	;'E'
   475  00FECA  52                 	db	82	;'R'
   476  00FECB  5F                 	db	95	;'_'
   477  00FECC  44                 	db	68	;'D'
   478  00FECD  4F                 	db	79	;'O'
   479  00FECE  4E                 	db	78	;'N'
   480  00FECF  45                 	db	69	;'E'
   481  00FED0  20                 	db	32
   482  00FED1  0A                 	db	10
   483  00FED2  0D                 	db	13
   484  00FED3  00                 	db	0
   485  00FED4  57                 	db	87	;'W'
   486  00FED5  4D                 	db	77	;'M'
   487  00FED6  5F                 	db	95	;'_'
   488  00FED7  48                 	db	72	;'H'
   489  00FED8  41                 	db	65	;'A'
   490  00FED9  4E                 	db	78	;'N'
   491  00FEDA  44                 	db	68	;'D'
   492  00FEDB  4C                 	db	76	;'L'
   493  00FEDC  45                 	db	69	;'E'
   494  00FEDD  52                 	db	82	;'R'
   495  00FEDE  5F                 	db	95	;'_'
   496  00FEDF  4C                 	db	76	;'L'
   497  00FEE0  4F                 	db	79	;'O'
   498  00FEE1  41                 	db	65	;'A'
   499  00FEE2  44                 	db	68	;'D'
   500  00FEE3  5F                 	db	95	;'_'
   501  00FEE4  53                 	db	83	;'S'
   502  00FEE5  45                 	db	69	;'E'
   503  00FEE6  4E                 	db	78	;'N'
   504  00FEE7  53                 	db	83	;'S'
   505  00FEE8  45                 	db	69	;'E'
   506  00FEE9  20                 	db	32
   507  00FEEA  0A                 	db	10
   508  00FEEB  0D                 	db	13
   509  00FEEC  00                 	db	0
   510  00FEED  57                 	db	87	;'W'
   511  00FEEE  4D                 	db	77	;'M'
   512  00FEEF  5F                 	db	95	;'_'
   513  00FEF0  48                 	db	72	;'H'
   514  00FEF1  41                 	db	65	;'A'
   515  00FEF2  4E                 	db	78	;'N'
   516  00FEF3  44                 	db	68	;'D'
   517  00FEF4  4C                 	db	76	;'L'
   518  00FEF5  45                 	db	69	;'E'
   519  00FEF6  52                 	db	82	;'R'
   520  00FEF7  5F                 	db	95	;'_'
   521  00FEF8  4E                 	db	78	;'N'
   522  00FEF9  4F                 	db	79	;'O'
   523  00FEFA  4E                 	db	78	;'N'
   524  00FEFB  45                 	db	69	;'E'
   525  00FEFC  20                 	db	32
   526  00FEFD  0A                 	db	10
   527  00FEFE  0D                 	db	13
   528  00FEFF  00                 	db	0
   529  00FF00  57                 	db	87	;'W'
   530  00FF01  4D                 	db	77	;'M'
   531  00FF02  5F                 	db	95	;'_'
   532  00FF03  48                 	db	72	;'H'
   533  00FF04  41                 	db	65	;'A'
   534  00FF05  4E                 	db	78	;'N'
   535  00FF06  44                 	db	68	;'D'
   536  00FF07  4C                 	db	76	;'L'
   537  00FF08  45                 	db	69	;'E'
   538  00FF09  52                 	db	82	;'R'
   539  00FF0A  5F                 	db	95	;'_'
   540  00FF0B  49                 	db	73	;'I'
   541  00FF0C  4E                 	db	78	;'N'
   542  00FF0D  49                 	db	73	;'I'
   543  00FF0E  54                 	db	84	;'T'
   544  00FF0F  20                 	db	32
   545  00FF10  0A                 	db	10
   546  00FF11  0D                 	db	13
   547  00FF12  00                 	db	0
   548  00FF13  4E                 	db	78	;'N'
   549  00FF14  4F                 	db	79	;'O'
   550  00FF15  52                 	db	82	;'R'
   551  00FF16  4D                 	db	77	;'M'
   552  00FF17  41                 	db	65	;'A'
   553  00FF18  4C                 	db	76	;'L'
   554  00FF19  20                 	db	32
   555  00FF1A  44                 	db	68	;'D'
   556  00FF1B  52                 	db	82	;'R'
   557  00FF1C  41                 	db	65	;'A'
   558  00FF1D  49                 	db	73	;'I'
   559  00FF1E  4E                 	db	78	;'N'
   560  00FF1F  49                 	db	73	;'I'
   561  00FF20  4E                 	db	78	;'N'
   562  00FF21  47                 	db	71	;'G'
   563  00FF22  20                 	db	32
   564  00FF23  0A                 	db	10
   565  00FF24  00                 	db	0
   566  00FF25  4E                 	db	78	;'N'
   567  00FF26  4F                 	db	79	;'O'
   568  00FF27  52                 	db	82	;'R'
   569  00FF28  4D                 	db	77	;'M'
   570  00FF29  41                 	db	65	;'A'
   571  00FF2A  4C                 	db	76	;'L'
   572  00FF2B  20                 	db	32
   573  00FF2C  57                 	db	87	;'W'
   574  00FF2D  41                 	db	65	;'A'
   575  00FF2E  53                 	db	83	;'S'
   576  00FF2F  48                 	db	72	;'H'
   577  00FF30  49                 	db	73	;'I'
   578  00FF31  4E                 	db	78	;'N'
   579  00FF32  47                 	db	71	;'G'
   580  00FF33  20                 	db	32
   581  00FF34  0A                 	db	10
   582  00FF35  00                 	db	0
   583  00FF36  4C                 	db	76	;'L'
   584  00FF37  49                 	db	73	;'I'
   585  00FF38  47                 	db	71	;'G'
   586  00FF39  48                 	db	72	;'H'
   587  00FF3A  54                 	db	84	;'T'
   588  00FF3B  20                 	db	32
   589  00FF3C  44                 	db	68	;'D'
   590  00FF3D  52                 	db	82	;'R'
   591  00FF3E  41                 	db	65	;'A'
   592  00FF3F  49                 	db	73	;'I'
   593  00FF40  4E                 	db	78	;'N'
   594  00FF41  49                 	db	73	;'I'
   595  00FF42  4E                 	db	78	;'N'
   596  00FF43  47                 	db	71	;'G'
   597  00FF44  20                 	db	32
   598  00FF45  0A                 	db	10
   599  00FF46  00                 	db	0
   600  00FF47  48                 	db	72	;'H'
   601  00FF48  45                 	db	69	;'E'
   602  00FF49  41                 	db	65	;'A'
   603  00FF4A  56                 	db	86	;'V'
   604  00FF4B  59                 	db	89	;'Y'
   605  00FF4C  20                 	db	32
   606  00FF4D  44                 	db	68	;'D'
   607  00FF4E  52                 	db	82	;'R'
   608  00FF4F  41                 	db	65	;'A'
   609  00FF50  49                 	db	73	;'I'
   610  00FF51  4E                 	db	78	;'N'
   611  00FF52  49                 	db	73	;'I'
   612  00FF53  4E                 	db	78	;'N'
   613  00FF54  47                 	db	71	;'G'
   614  00FF55  20                 	db	32
   615  00FF56  0A                 	db	10
   616  00FF57  00                 	db	0
   617  00FF58  4E                 	db	78	;'N'
   618  00FF59  4F                 	db	79	;'O'
   619  00FF5A  52                 	db	82	;'R'
   620  00FF5B  4D                 	db	77	;'M'
   621  00FF5C  41                 	db	65	;'A'
   622  00FF5D  4C                 	db	76	;'L'
   623  00FF5E  20                 	db	32
   624  00FF5F  57                 	db	87	;'W'
   625  00FF60  45                 	db	69	;'E'
   626  00FF61  49                 	db	73	;'I'
   627  00FF62  47                 	db	71	;'G'
   628  00FF63  48                 	db	72	;'H'
   629  00FF64  54                 	db	84	;'T'
   630  00FF65  20                 	db	32
   631  00FF66  0A                 	db	10
   632  00FF67  0D                 	db	13
   633  00FF68  00                 	db	0
   634  00FF69                     STR_28:
   635  00FF69  46                 	db	70	;'F'
   636  00FF6A  72                 	db	114	;'r'
   637  00FF6B  65                 	db	101	;'e'
   638  00FF6C  71                 	db	113	;'q'
   639  00FF6D  75                 	db	117	;'u'
   640  00FF6E  65                 	db	101	;'e'
   641  00FF6F  6E                 	db	110	;'n'
   642  00FF70  63                 	db	99	;'c'
   643  00FF71  79                 	db	121	;'y'
   644  00FF72  3A                 	db	58	;':'
   645  00FF73  20                 	db	32
   646  00FF74  25                 	db	37
   647  00FF75  75                 	db	117	;'u'
   648  00FF76  20                 	db	32
   649  00FF77  0A                 	db	10
   650  00FF78  00                 	db	0
   651  00FF79  4C                 	db	76	;'L'
   652  00FF7A  49                 	db	73	;'I'
   653  00FF7B  47                 	db	71	;'G'
   654  00FF7C  48                 	db	72	;'H'
   655  00FF7D  54                 	db	84	;'T'
   656  00FF7E  20                 	db	32
   657  00FF7F  57                 	db	87	;'W'
   658  00FF80  41                 	db	65	;'A'
   659  00FF81  53                 	db	83	;'S'
   660  00FF82  48                 	db	72	;'H'
   661  00FF83  49                 	db	73	;'I'
   662  00FF84  4E                 	db	78	;'N'
   663  00FF85  47                 	db	71	;'G'
   664  00FF86  20                 	db	32
   665  00FF87  0A                 	db	10
   666  00FF88  00                 	db	0
   667  00FF89  48                 	db	72	;'H'
   668  00FF8A  45                 	db	69	;'E'
   669  00FF8B  41                 	db	65	;'A'
   670  00FF8C  56                 	db	86	;'V'
   671  00FF8D  59                 	db	89	;'Y'
   672  00FF8E  20                 	db	32
   673  00FF8F  57                 	db	87	;'W'
   674  00FF90  41                 	db	65	;'A'
   675  00FF91  53                 	db	83	;'S'
   676  00FF92  48                 	db	72	;'H'
   677  00FF93  49                 	db	73	;'I'
   678  00FF94  4E                 	db	78	;'N'
   679  00FF95  47                 	db	71	;'G'
   680  00FF96  20                 	db	32
   681  00FF97  0A                 	db	10
   682  00FF98  00                 	db	0
   683  00FF99  4C                 	db	76	;'L'
   684  00FF9A  49                 	db	73	;'I'
   685  00FF9B  47                 	db	71	;'G'
   686  00FF9C  48                 	db	72	;'H'
   687  00FF9D  54                 	db	84	;'T'
   688  00FF9E  20                 	db	32
   689  00FF9F  57                 	db	87	;'W'
   690  00FFA0  45                 	db	69	;'E'
   691  00FFA1  49                 	db	73	;'I'
   692  00FFA2  47                 	db	71	;'G'
   693  00FFA3  48                 	db	72	;'H'
   694  00FFA4  54                 	db	84	;'T'
   695  00FFA5  20                 	db	32
   696  00FFA6  0A                 	db	10
   697  00FFA7  0D                 	db	13
   698  00FFA8  00                 	db	0
   699  00FFA9  48                 	db	72	;'H'
   700  00FFAA  45                 	db	69	;'E'
   701  00FFAB  41                 	db	65	;'A'
   702  00FFAC  56                 	db	86	;'V'
   703  00FFAD  59                 	db	89	;'Y'
   704  00FFAE  20                 	db	32
   705  00FFAF  57                 	db	87	;'W'
   706  00FFB0  45                 	db	69	;'E'
   707  00FFB1  49                 	db	73	;'I'
   708  00FFB2  47                 	db	71	;'G'
   709  00FFB3  48                 	db	72	;'H'
   710  00FFB4  54                 	db	84	;'T'
   711  00FFB5  20                 	db	32
   712  00FFB6  0A                 	db	10
   713  00FFB7  0D                 	db	13
   714  00FFB8  00                 	db	0
   715  00FFB9                     STR_19:
   716  00FFB9  43                 	db	67	;'C'
   717  00FFBA  6F                 	db	111	;'o'
   718  00FFBB  75                 	db	117	;'u'
   719  00FFBC  6E                 	db	110	;'n'
   720  00FFBD  74                 	db	116	;'t'
   721  00FFBE  20                 	db	32
   722  00FFBF  75                 	db	117	;'u'
   723  00FFC0  70                 	db	112	;'p'
   724  00FFC1  3A                 	db	58	;':'
   725  00FFC2  20                 	db	32
   726  00FFC3  25                 	db	37
   727  00FFC4  64                 	db	100	;'d'
   728  00FFC5  20                 	db	32
   729  00FFC6  0A                 	db	10
   730  00FFC7  00                 	db	0
   731  00FFC8  4D                 	db	77	;'M'
   732  00FFC9  4F                 	db	79	;'O'
   733  00FFCA  44                 	db	68	;'D'
   734  00FFCB  45                 	db	69	;'E'
   735  00FFCC  5F                 	db	95	;'_'
   736  00FFCD  44                 	db	68	;'D'
   737  00FFCE  52                 	db	82	;'R'
   738  00FFCF  41                 	db	65	;'A'
   739  00FFD0  49                 	db	73	;'I'
   740  00FFD1  4E                 	db	78	;'N'
   741  00FFD2  20                 	db	32
   742  00FFD3  0A                 	db	10
   743  00FFD4  0D                 	db	13
   744  00FFD5  00                 	db	0
   745  00FFD6                     STR_7:
   746  00FFD6  4D                 	db	77	;'M'
   747  00FFD7  4F                 	db	79	;'O'
   748  00FFD8  44                 	db	68	;'D'
   749  00FFD9  45                 	db	69	;'E'
   750  00FFDA  5F                 	db	95	;'_'
   751  00FFDB  57                 	db	87	;'W'
   752  00FFDC  41                 	db	65	;'A'
   753  00FFDD  53                 	db	83	;'S'
   754  00FFDE  48                 	db	72	;'H'
   755  00FFDF  20                 	db	32
   756  00FFE0  0A                 	db	10
   757  00FFE1  0D                 	db	13
   758  00FFE2  00                 	db	0
   759  00FFE3  4E                 	db	78	;'N'
   760  00FFE4  4F                 	db	79	;'O'
   761  00FFE5  52                 	db	82	;'R'
   762  00FFE6  4D                 	db	77	;'M'
   763  00FFE7  41                 	db	65	;'A'
   764  00FFE8  4C                 	db	76	;'L'
   765  00FFE9  20                 	db	32
   766  00FFEA  0A                 	db	10
   767  00FFEB  0D                 	db	13
   768  00FFEC  00                 	db	0
   769  00FFED  4C                 	db	76	;'L'
   770  00FFEE  49                 	db	73	;'I'
   771  00FFEF  47                 	db	71	;'G'
   772  00FFF0  48                 	db	72	;'H'
   773  00FFF1  54                 	db	84	;'T'
   774  00FFF2  20                 	db	32
   775  00FFF3  0A                 	db	10
   776  00FFF4  0D                 	db	13
   777  00FFF5  00                 	db	0
   778  00FFF6  48                 	db	72	;'H'
   779  00FFF7  45                 	db	69	;'E'
   780  00FFF8  41                 	db	65	;'A'
   781  00FFF9  56                 	db	86	;'V'
   782  00FFFA  59                 	db	89	;'Y'
   783  00FFFB  20                 	db	32
   784  00FFFC  0A                 	db	10
   785  00FFFD  0D                 	db	13
   786  00FFFE  00                 	db	0
   787  0000                     
   788                           ; #config settings
   789  00FFFF  00                 	db	0	; dummy byte at the end
   790  0000                     
   791                           	psect	nvCOMRAM
   792  000038                     __pnvCOMRAM:
   793                           	opt stack 0
   794  000038                     _timer3ReloadVal:
   795                           	opt stack 0
   796  000038                     	ds	2
   797  00003A                     _TMR0_InterruptHandler:
   798                           	opt stack 0
   799  00003A                     	ds	2
   800  00003C                     _TMR1_InterruptHandler:
   801                           	opt stack 0
   802  00003C                     	ds	2
   803  00003E                     _timer1ReloadVal:
   804                           	opt stack 0
   805  00003E                     	ds	2
   806  000040                     _INT0_InterruptHandler:
   807                           	opt stack 0
   808  000040                     	ds	2
   809  000042                     _INT1_InterruptHandler:
   810                           	opt stack 0
   811  000042                     	ds	2
   812  000044                     _timer0ReloadVal:
   813                           	opt stack 0
   814  000044                     	ds	1
   815                           
   816                           	psect	nvBANK0
   817  000090                     __pnvBANK0:
   818                           	opt stack 0
   819  000090                     _TMR3_InterruptHandler:
   820                           	opt stack 0
   821  000090                     	ds	2
   822  0000                     _CCPR5H	set	3913
   823  0000                     _CCPR5L	set	3912
   824  0000                     _CCP5CON	set	3911
   825  0000                     _WPUB	set	3931
   826  0000                     _ANCON1	set	3932
   827  0000                     _ANCON0	set	3933
   828  0000                     _CCP1CONbits	set	4027
   829  0000                     _T3GCONbits	set	4016
   830  0000                     _T3CONbits	set	4017
   831  0000                     _TMR3L	set	4018
   832  0000                     _TMR3H	set	4019
   833  0000                     _T3GCON	set	4016
   834  0000                     _T3CON	set	4017
   835  0000                     _T0CONbits	set	4053
   836  0000                     _TMR0L	set	4054
   837  0000                     _TMR0H	set	4055
   838  0000                     _T0CON	set	4053
   839  0000                     _TXREG1	set	4013
   840  0000                     _RCREG1	set	4014
   841  0000                     _RCSTA1bits	set	4011
   842  0000                     _SPBRGH1	set	3965
   843  0000                     _SPBRG1	set	4015
   844  0000                     _TXSTA1	set	4012
   845  0000                     _RCSTA1	set	4011
   846  0000                     _BAUDCON1	set	4007
   847  0000                     _T1GCONbits	set	4010
   848  0000                     _T1CONbits	set	4045
   849  0000                     _TMR1L	set	4046
   850  0000                     _TMR1H	set	4047
   851  0000                     _T1GCON	set	4010
   852  0000                     _T1CON	set	4045
   853  0000                     _ADCON0bits	set	4034
   854  0000                     _ADRESL	set	4035
   855  0000                     _ADRESH	set	4036
   856  0000                     _ADCON2	set	4032
   857  0000                     _ADCON1	set	4033
   858  0000                     _ADCON0	set	4034
   859  0000                     _INTCONbits	set	4082
   860  0000                     _PIR2bits	set	4001
   861  0000                     _PIE2bits	set	4000
   862  0000                     _PIE1bits	set	3997
   863  0000                     _PIR4bits	set	4023
   864  0000                     _PIE4bits	set	4022
   865  0000                     _INTCON3bits	set	4080
   866  0000                     _INTCON2bits	set	4081
   867  0000                     _IPR2bits	set	4002
   868  0000                     _IPR1bits	set	3999
   869  0000                     _IPR4bits	set	4024
   870  0000                     _RCONbits	set	4048
   871  0000                     _T2CONbits	set	4042
   872  0000                     _PIR1bits	set	3998
   873  0000                     _TMR2	set	4044
   874  0000                     _PR2	set	4043
   875  0000                     _T2CON	set	4042
   876  0000                     _CCPTMRSbits	set	3993
   877  0000                     _CCPR1H	set	4029
   878  0000                     _CCPR1L	set	4028
   879  0000                     _ECCP1DEL	set	4030
   880  0000                     _PSTR1CON	set	3996
   881  0000                     _ECCP1AS	set	4031
   882  0000                     _CCP1CON	set	4027
   883  0000                     _REFOCON	set	3994
   884  0000                     _OSCTUNE	set	3995
   885  0000                     _OSCCON2	set	4050
   886  0000                     _OSCCON	set	4051
   887  0000                     _TRISD	set	3989
   888  0000                     _TRISC	set	3988
   889  0000                     _TRISB	set	3987
   890  0000                     _TRISA	set	3986
   891  0000                     _TRISE	set	3990
   892  0000                     _LATC	set	3979
   893  0000                     _LATB	set	3978
   894  0000                     _LATA	set	3977
   895  0000                     _LATD	set	3980
   896  0000                     _LATE	set	3981
   897  0000                     _P1M1	set	32223
   898  0000                     _LATE2	set	31850
   899  0000                     _LATE1	set	31849
   900  0000                     _LATE0	set	31848
   901                           
   902                           	psect	cinit
   903  000698                     __pcinit:
   904                           	opt stack 0
   905  000698                     start_initialization:
   906                           	opt stack 0
   907  000698                     __initialization:
   908                           	opt stack 0
   909                           
   910                           ; Initialize objects allocated to COMRAM (1 bytes)
   911                           ; load TBLPTR registers with __pidataCOMRAM
   912  000698  0EB4               	movlw	low __pidataCOMRAM
   913  00069A  6EF6               	movwf	tblptrl,c
   914  00069C  0E0A               	movlw	high __pidataCOMRAM
   915  00069E  6EF7               	movwf	tblptrh,c
   916  0006A0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   917  0006A2  6EF8               	movwf	tblptru,c
   918  0006A4  0009               	tblrd		*+	;fetch initializer
   919  0006A6  CFF5 F045          	movff	tablat,__pdataCOMRAM
   920                           
   921                           ; Clear objects allocated to BANK0 (24 bytes)
   922  0006AA  EE00  F060         	lfsr	0,__pbssBANK0
   923  0006AE  0E18               	movlw	24
   924  0006B0                     clear_0:
   925  0006B0  6AEE               	clrf	postinc0,c
   926  0006B2  06E8               	decf	wreg,f,c
   927  0006B4  E1FD               	bnz	clear_0
   928                           
   929                           ; Clear objects allocated to COMRAM (21 bytes)
   930  0006B6  EE00  F023         	lfsr	0,__pbssCOMRAM
   931  0006BA  0E15               	movlw	21
   932  0006BC                     clear_1:
   933  0006BC  6AEE               	clrf	postinc0,c
   934  0006BE  06E8               	decf	wreg,f,c
   935  0006C0  E1FD               	bnz	clear_1
   936  0006C2                     end_of_initialization:
   937                           	opt stack 0
   938  0006C2                     __end_of__initialization:
   939                           	opt stack 0
   940  0006C2  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   941  0006C4  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   942  0006C6  0100               	movlb	0
   943  0006C8  EFF4  F004         	goto	_main	;jump to C main() function
   944                           tblptru	equ	0xFF8
   945                           tblptrh	equ	0xFF7
   946                           tblptrl	equ	0xFF6
   947                           tablat	equ	0xFF5
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           
   951                           	psect	bssCOMRAM
   952  000023                     __pbssCOMRAM:
   953                           	opt stack 0
   954  000023                     TMR3_ISR@CountCallBack:
   955                           	opt stack 0
   956  000023                     	ds	2
   957  000025                     TMR0_ISR@CountCallBack:
   958                           	opt stack 0
   959  000025                     	ds	2
   960  000027                     TMR1_ISR@CountCallBack:
   961                           	opt stack 0
   962  000027                     	ds	2
   963  000029                     _payload:
   964                           	opt stack 0
   965  000029                     	ds	2
   966  00002B                     _old_capture:
   967                           	opt stack 0
   968  00002B                     	ds	2
   969  00002D                     _frequency:
   970                           	opt stack 0
   971  00002D                     	ds	2
   972  00002F                     _weight_flag:
   973                           	opt stack 0
   974  00002F                     	ds	1
   975  000030                     _mode:
   976                           	opt stack 0
   977  000030                     	ds	1
   978  000031                     _qsm_state:
   979                           	opt stack 0
   980  000031                     	ds	1
   981  000032                     _duration_s:
   982                           	opt stack 0
   983  000032                     	ds	1
   984  000033                     _count_s:
   985                           	opt stack 0
   986  000033                     	ds	1
   987  000034                     _out:
   988                           	opt stack 0
   989  000034                     	ds	1
   990  000035                     _duration_m:
   991                           	opt stack 0
   992  000035                     	ds	1
   993  000036                     _count_m:
   994                           	opt stack 0
   995  000036                     	ds	1
   996  000037                     _state:
   997                           	opt stack 0
   998  000037                     	ds	1
   999                           tblptru	equ	0xFF8
  1000                           tblptrh	equ	0xFF7
  1001                           tblptrl	equ	0xFF6
  1002                           tablat	equ	0xFF5
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           
  1006                           	psect	dataCOMRAM
  1007  000045                     __pdataCOMRAM:
  1008                           	opt stack 0
  1009  000045                     _state2:
  1010                           	opt stack 0
  1011  000045                     	ds	1
  1012                           tblptru	equ	0xFF8
  1013                           tblptrh	equ	0xFF7
  1014                           tblptrl	equ	0xFF6
  1015                           tablat	equ	0xFF5
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           
  1019                           	psect	bssBANK0
  1020  000060                     __pbssBANK0:
  1021                           	opt stack 0
  1022  000060                     _qsm_queue:
  1023                           	opt stack 0
  1024  000060                     	ds	24
  1025                           tblptru	equ	0xFF8
  1026                           tblptrh	equ	0xFF7
  1027                           tblptrl	equ	0xFF6
  1028                           tablat	equ	0xFF5
  1029                           postinc0	equ	0xFEE
  1030                           wreg	equ	0xFE8
  1031                           
  1032                           	psect	cstackBANK0
  1033  000078                     __pcstackBANK0:
  1034                           	opt stack 0
  1035  000078                     ?_get_frequency:
  1036                           	opt stack 0
  1037  000078                     ?___lwdiv:
  1038                           	opt stack 0
  1039  000078                     EUSART1_Write@txData:
  1040                           	opt stack 0
  1041  000078                     INT1_SetInterruptHandler@InterruptHandler:
  1042                           	opt stack 0
  1043  000078                     INT0_SetInterruptHandler@InterruptHandler:
  1044                           	opt stack 0
  1045  000078                     TMR1_SetInterruptHandler@InterruptHandler:
  1046                           	opt stack 0
  1047  000078                     TMR0_SetInterruptHandler@InterruptHandler:
  1048                           	opt stack 0
  1049  000078                     TMR3_SetInterruptHandler@InterruptHandler:
  1050                           	opt stack 0
  1051  000078                     ___lwdiv@dividend:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0x0
  1055  000078                     	ds	1
  1056  000079                     putch@txData:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x1
  1060  000079                     	ds	1
  1061  00007A                     ??_TMR3_Initialize:
  1062  00007A                     ??_TMR1_Initialize:
  1063  00007A                     ___lwdiv@divisor:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x2
  1067  00007A                     	ds	2
  1068  00007C                     ___lwdiv@counter:
  1069                           	opt stack 0
  1070                           
  1071                           ; 1 bytes @ 0x4
  1072  00007C                     	ds	1
  1073  00007D                     ___lwdiv@quotient:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x5
  1077  00007D                     	ds	2
  1078  00007F                     ?___lwmod:
  1079                           	opt stack 0
  1080  00007F                     ___lwmod@dividend:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x7
  1084  00007F                     	ds	2
  1085  000081                     ___lwmod@divisor:
  1086                           	opt stack 0
  1087                           
  1088                           ; 2 bytes @ 0x9
  1089  000081                     	ds	2
  1090  000083                     ___lwmod@counter:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0xB
  1094  000083                     	ds	1
  1095  000084                     ?_printf:
  1096                           	opt stack 0
  1097  000084                     printf@f:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0xC
  1101  000084                     	ds	4
  1102  000088                     ??_printf:
  1103                           
  1104                           ; 1 bytes @ 0x10
  1105  000088                     	ds	1
  1106  000089                     printf@prec:
  1107                           	opt stack 0
  1108                           
  1109                           ; 1 bytes @ 0x11
  1110  000089                     	ds	1
  1111  00008A                     printf@ap:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x12
  1115  00008A                     	ds	2
  1116  00008C                     printf@flag:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0x14
  1120  00008C                     	ds	1
  1121  00008D                     printf@val:
  1122                           	opt stack 0
  1123                           
  1124                           ; 2 bytes @ 0x15
  1125  00008D                     	ds	2
  1126  00008F                     printf@c:
  1127                           	opt stack 0
  1128                           
  1129                           ; 1 bytes @ 0x17
  1130  00008F                     	ds	1
  1131  000090                     tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           
  1138                           ; 1 bytes @ 0x18
  1139                           
  1140                           	psect	cstackCOMRAM
  1141  000001                     __pcstackCOMRAM:
  1142                           	opt stack 0
  1143  000001                     ?_ADC_GetConversionResult:
  1144                           	opt stack 0
  1145  000001                     set_count_m@val:
  1146                           	opt stack 0
  1147  000001                     set_out@val:
  1148                           	opt stack 0
  1149  000001                     ___lbmod@divisor:
  1150                           	opt stack 0
  1151  000001                     qsm_queue_count@b:
  1152                           	opt stack 0
  1153  000001                     CCP5_CallBack@capturedValue:
  1154                           	opt stack 0
  1155                           
  1156                           ; 2 bytes @ 0x0
  1157  000001                     	ds	1
  1158  000002                     ___lbmod@dividend:
  1159                           	opt stack 0
  1160                           
  1161                           ; 1 bytes @ 0x1
  1162  000002                     	ds	1
  1163  000003                     ??_CCP5_CallBack:
  1164  000003                     ??_ADC_GetConversionResult:
  1165  000003                     ??_qsm_queue_count:
  1166  000003                     ___lbmod@counter:
  1167                           	opt stack 0
  1168                           
  1169                           ; 1 bytes @ 0x2
  1170  000003                     	ds	1
  1171  000004                     ___lbmod@rem:
  1172                           	opt stack 0
  1173                           
  1174                           ; 1 bytes @ 0x3
  1175  000004                     	ds	1
  1176  000005                     CCP5_CaptureISR@module:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0x4
  1180  000005                     	ds	1
  1181  000006                     _qsm_queue_count$2016:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x5
  1185  000006                     	ds	2
  1186  000008                     qsm_queue_isfull@b:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0x7
  1190  000008                     	ds	2
  1191  00000A                     ??_qsm_queue_isfull:
  1192                           
  1193                           ; 1 bytes @ 0x9
  1194  00000A                     	ds	2
  1195  00000C                     _qsm_queue_isfull$2025:
  1196                           	opt stack 0
  1197                           
  1198                           ; 2 bytes @ 0xB
  1199  00000C                     	ds	2
  1200  00000E                     qsm_queue_put@b:
  1201                           	opt stack 0
  1202                           
  1203                           ; 2 bytes @ 0xD
  1204  00000E                     	ds	2
  1205  000010                     qsm_queue_put@data_byte:
  1206                           	opt stack 0
  1207                           
  1208                           ; 1 bytes @ 0xF
  1209  000010                     	ds	1
  1210  000011                     ??_qsm_queue_put:
  1211                           
  1212                           ; 1 bytes @ 0x10
  1213  000011                     	ds	2
  1214  000013                     qsm_post_event@event:
  1215                           	opt stack 0
  1216                           
  1217                           ; 1 bytes @ 0x12
  1218  000013                     	ds	1
  1219  000014                     ??_INT0_ISR:
  1220  000014                     ??_INT1_ISR:
  1221  000014                     
  1222                           ; 1 bytes @ 0x13
  1223  000014                     	ds	1
  1224  000015                     ??_INTERRUPT_InterruptManagerHigh:
  1225                           
  1226                           ; 1 bytes @ 0x14
  1227  000015                     	ds	14
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           postinc0	equ	0xFEE
  1233                           wreg	equ	0xFE8
  1234                           
  1235 ;;
  1236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1237 ;;
  1238 ;; *************** function _main *****************
  1239 ;; Defined at:
  1240 ;;		line 57 in file "main.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels required when called:   12
  1260 ;; This function calls:
  1261 ;;		_SYSTEM_Initialize
  1262 ;;		_capture_tb
  1263 ;;		_motor_off
  1264 ;; This function is called by:
  1265 ;;		Startup code after reset
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text0
  1270  0009E8                     __ptext0:
  1271                           	opt stack 0
  1272  0009E8                     _main:
  1273                           	opt stack 19
  1274                           
  1275                           ;main.c: 60: SYSTEM_Initialize();
  1276                           
  1277                           ;incstack = 0
  1278  0009E8  EC66  F003         	call	_SYSTEM_Initialize	;wreg free
  1279                           
  1280                           ;main.c: 61: motor_off();
  1281  0009EC  EC1C  F005         	call	_motor_off	;wreg free
  1282                           
  1283                           ;main.c: 68: (INTCONbits.GIEH = 1);
  1284  0009F0  8EF2               	bsf	intcon,7,c	;volatile
  1285                           
  1286                           ;main.c: 71: (INTCONbits.GIEL = 1);
  1287  0009F2  8CF2               	bsf	intcon,6,c	;volatile
  1288                           
  1289                           ;main.c: 95: capture_tb();
  1290  0009F4  EC31  F004         	call	_capture_tb	;wreg free
  1291  0009F8                     l844:
  1292                           
  1293                           ;main.c: 98: {
  1294  0009F8  D7FF               	goto	l844
  1295  0009FA                     __end_of_main:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           intcon	equ	0xFF2
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           
  1305 ;; *************** function _motor_off *****************
  1306 ;; Defined at:
  1307 ;;		line 12 in file "motordriver.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		None
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    8
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;;		_WM_HANDLER_FAULT_SENSE
  1333 ;;		_WM_HANDLER_TIMER_DONE
  1334 ;;		_motor_forward_duration
  1335 ;;		_motor_reverse_duration
  1336 ;;		_motor_off_duration
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text1
  1341  000A38                     __ptext1:
  1342                           	opt stack 0
  1343  000A38                     _motor_off:
  1344                           	opt stack 22
  1345                           
  1346                           ;motordriver.c: 13: CCP1CONbits.CCP1M = 0B0000;
  1347                           
  1348                           ;incstack = 0
  1349  000A38  90BB               	bcf	4027,0,c	;volatile
  1350  000A3A  92BB               	bcf	4027,1,c	;volatile
  1351  000A3C  94BB               	bcf	4027,2,c	;volatile
  1352  000A3E  96BB               	bcf	4027,3,c	;volatile
  1353  000A40  0012               	return		;funcret
  1354  000A42                     __end_of_motor_off:
  1355                           	opt stack 0
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           intcon	equ	0xFF2
  1361                           postinc0	equ	0xFEE
  1362                           wreg	equ	0xFE8
  1363                           
  1364 ;; *************** function _capture_tb *****************
  1365 ;; Defined at:
  1366 ;;		line 3 in file "capture_tb.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:   11
  1387 ;; This function calls:
  1388 ;;		_get_frequency
  1389 ;;		_printf
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text2
  1396  000862                     __ptext2:
  1397                           	opt stack 0
  1398  000862                     _capture_tb:
  1399                           	opt stack 19
  1400  000862                     
  1401                           ;capture_tb.c: 5: printf("Frequency: %u \n", get_frequency());
  1402  000862  0E69               	movlw	low STR_28
  1403  000864  0100               	movlb	0	; () banked
  1404  000866  6F84               	movwf	printf@f& (0+255),b
  1405  000868  0EFF               	movlw	high STR_28
  1406  00086A  0100               	movlb	0	; () banked
  1407  00086C  6F85               	movwf	(printf@f+1)& (0+255),b
  1408  00086E  EC21  F005         	call	_get_frequency	;wreg free
  1409  000872  C078  F086         	movff	?_get_frequency,?_printf+2
  1410  000876  C079  F087         	movff	?_get_frequency+1,?_printf+3
  1411  00087A  EC6A  F000         	call	_printf	;wreg free
  1412  00087E  D7F1               	goto	l3765
  1413  000880                     __end_of_capture_tb:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           intcon	equ	0xFF2
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           
  1423 ;; *************** function _printf *****************
  1424 ;; Defined at:
  1425 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  1428 ;;		 -> STR_28(16), STR_27(17), STR_26(16), STR_25(18), 
  1429 ;;		 -> STR_24(17), STR_23(17), STR_22(16), STR_21(15), 
  1430 ;;		 -> STR_20(15), STR_19(15), STR_18(32), STR_17(28), 
  1431 ;;		 -> STR_16(9), STR_15(10), STR_14(9), STR_13(25), 
  1432 ;;		 -> STR_12(16), STR_11(17), STR_10(16), STR_9(29), 
  1433 ;;		 -> STR_8(13), STR_7(13), STR_6(14), STR_5(26), 
  1434 ;;		 -> STR_4(25), STR_3(26), STR_2(19), STR_1(19), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  tmpval          4    0        struct .
  1437 ;;  cp              3    0        PTR const unsigned char 
  1438 ;;  val             2   21[BANK0 ] unsigned int 
  1439 ;;  ap              2   18[BANK0 ] PTR void [1]
  1440 ;;		 -> ?_printf(2), 
  1441 ;;  len             2    0        unsigned int 
  1442 ;;  c               1   23[BANK0 ] char 
  1443 ;;  flag            1   20[BANK0 ] unsigned char 
  1444 ;;  prec            1   17[BANK0 ] char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  2   12[BANK0 ] int 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1454 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1458 ;;Total ram usage:       12 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:   10
  1461 ;; This function calls:
  1462 ;;		___lwdiv
  1463 ;;		___lwmod
  1464 ;;		_putch
  1465 ;; This function is called by:
  1466 ;;		_capture_tb
  1467 ;;		_WM_HANDLER_INIT
  1468 ;;		_WM_HANDLER_NONE
  1469 ;;		_WM_HANDLER_FAULT_SENSE
  1470 ;;		_WM_HANDLER_TIMER_DONE
  1471 ;;		_WM_HANDLER_TOGGLE_MODE
  1472 ;;		_WM_HANDLER_START_WEIGHING
  1473 ;;		_WM_HANDLER_LOAD_SENSE
  1474 ;;		_WM_HANDLER_START_RUNNING
  1475 ;;		_WM_HANDLER_WATER_LEVEL_SENSE
  1476 ;;		_motor_forward_duration
  1477 ;;		_motor_reverse_duration
  1478 ;;		_motor_off_duration
  1479 ;;		_motor_run
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text3
  1484  0000D4                     __ptext3:
  1485                           	opt stack 0
  1486  0000D4                     _printf:
  1487                           	opt stack 19
  1488                           
  1489                           ;doprnt.c: 466: va_list ap;
  1490                           ;doprnt.c: 499: signed char c;
  1491                           ;doprnt.c: 506: signed char prec;
  1492                           ;doprnt.c: 508: unsigned char flag;
  1493                           ;doprnt.c: 523: union {
  1494                           ;doprnt.c: 524: unsigned long vd;
  1495                           ;doprnt.c: 525: double integ;
  1496                           ;doprnt.c: 526: } tmpval;
  1497                           ;doprnt.c: 528: unsigned int val;
  1498                           ;doprnt.c: 529: unsigned len;
  1499                           ;doprnt.c: 530: const char * cp;
  1500                           ;doprnt.c: 533: *ap = __va_start();
  1501                           
  1502                           ;incstack = 0
  1503  0000D4  0E86               	movlw	low (?_printf+2)
  1504  0000D6  0100               	movlb	0	; () banked
  1505  0000D8  6F8A               	movwf	printf@ap& (0+255),b
  1506  0000DA  0E00               	movlw	high (?_printf+2)
  1507  0000DC  0100               	movlb	0	; () banked
  1508  0000DE  6F8B               	movwf	(printf@ap+1)& (0+255),b
  1509                           
  1510                           ;doprnt.c: 536: while(c = *f++) {
  1511  0000E0  D0B4               	goto	l3735
  1512  0000E2                     l3683:
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;doprnt.c: 538: if(c != '%')
  1516  0000E2  0E25               	movlw	37
  1517  0000E4  0100               	movlb	0	; () banked
  1518  0000E6  198F               	xorwf	printf@c& (0+255),w,b
  1519  0000E8  B4D8               	btfsc	status,2,c
  1520  0000EA  D005               	goto	l3687
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;doprnt.c: 540: {
  1524                           ;doprnt.c: 541: (putch(c) );
  1525  0000EC  0100               	movlb	0	; () banked
  1526  0000EE  518F               	movf	printf@c& (0+255),w,b
  1527  0000F0  EC0E  F005         	call	_putch
  1528                           
  1529                           ;doprnt.c: 542: continue;
  1530  0000F4  D0AA               	goto	l3735
  1531  0000F6                     l3687:
  1532                           
  1533                           ;doprnt.c: 543: }
  1534                           ;doprnt.c: 548: flag = 0;
  1535  0000F6  0E00               	movlw	0
  1536  0000F8  0100               	movlb	0	; () banked
  1537  0000FA  6F8C               	movwf	printf@flag& (0+255),b
  1538                           
  1539                           ;doprnt.c: 635: switch(c = *f++) {
  1540  0000FC  D003               	goto	l3693
  1541  0000FE                     l3689:
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;doprnt.c: 818: flag |= 0x40;
  1545  0000FE  0100               	movlb	0	; () banked
  1546  000100  8D8C               	bsf	printf@flag& (0+255),6,b
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;doprnt.c: 822: }
  1550                           
  1551                           ;doprnt.c: 819: break;
  1552  000102  D01A               	goto	l1057
  1553  000104                     l3693:
  1554                           
  1555                           ; BSR set to: 0
  1556  000104  C084  FFF6         	movff	printf@f,tblptrl
  1557  000108  C085  FFF7         	movff	printf@f+1,tblptrh
  1558  00010C  0100               	movlb	0	; () banked
  1559  00010E  4B84               	infsnz	printf@f& (0+255),f,b
  1560  000110  2B85               	incf	(printf@f+1)& (0+255),f,b
  1561  000112                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1562  000112  6AF8               	clrf	tblptru,c
  1563  000114                     	endif
  1564  000114                     	if	0	;tblptru may be non-zero
  1565  000114                     	endif
  1566  000114  0008               	tblrd		*
  1567  000116  CFF5 F08F          	movff	tablat,printf@c
  1568  00011A  0100               	movlb	0	; () banked
  1569  00011C  518F               	movf	printf@c& (0+255),w,b
  1570                           
  1571                           ; Switch size 1, requested type "space"
  1572                           ; Number of cases is 4, Range of values is 0 to 117
  1573                           ; switch strategies available:
  1574                           ; Name         Instructions Cycles
  1575                           ; simple_byte           13     7 (average)
  1576                           ;	Chosen strategy is simple_byte
  1577  00011E  0A00               	xorlw	0	; case 0
  1578  000120  B4D8               	btfsc	status,2,c
  1579  000122  0012               	return	
  1580  000124  0A64               	xorlw	100	; case 100
  1581  000126  B4D8               	btfsc	status,2,c
  1582  000128  D007               	goto	l1057
  1583  00012A  0A0D               	xorlw	13	; case 105
  1584  00012C  B4D8               	btfsc	status,2,c
  1585  00012E  D004               	goto	l1057
  1586  000130  0A1C               	xorlw	28	; case 117
  1587  000132  B4D8               	btfsc	status,2,c
  1588  000134  D7E4               	goto	l3689
  1589  000136  D089               	goto	l3735
  1590  000138                     l1057:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  1594  000138  0100               	movlb	0	; () banked
  1595  00013A  BD8C               	btfsc	printf@flag& (0+255),6,b
  1596  00013C  D019               	goto	l3705
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;doprnt.c: 1253: {
  1600                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1601  00013E  C08A  FFD9         	movff	printf@ap,fsr2l
  1602  000142  C08B  FFDA         	movff	printf@ap+1,fsr2h
  1603  000146  CFDE F08D          	movff	postinc2,printf@val
  1604  00014A  CFDD F08E          	movff	postdec2,printf@val+1
  1605                           
  1606                           ; BSR set to: 0
  1607  00014E  0E02               	movlw	2
  1608  000150  0100               	movlb	0	; () banked
  1609  000152  278A               	addwf	printf@ap& (0+255),f,b
  1610  000154  0E00               	movlw	0
  1611  000156  238B               	addwfc	(printf@ap+1)& (0+255),f,b
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;doprnt.c: 1261: if((int)val < 0) {
  1615  000158  0100               	movlb	0	; () banked
  1616  00015A  AF8E               	btfss	(printf@val+1)& (0+255),7,b
  1617  00015C  D016               	goto	l3709
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;doprnt.c: 1262: flag |= 0x03;
  1621  00015E  0E03               	movlw	3
  1622  000160  0100               	movlb	0	; () banked
  1623  000162  138C               	iorwf	printf@flag& (0+255),f,b
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;doprnt.c: 1263: val = -val;
  1627  000164  0100               	movlb	0	; () banked
  1628  000166  6D8D               	negf	printf@val& (0+255),b
  1629  000168  1F8E               	comf	(printf@val+1)& (0+255),f,b
  1630  00016A  B0D8               	btfsc	status,0,c
  1631  00016C  2B8E               	incf	(printf@val+1)& (0+255),f,b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;doprnt.c: 1264: }
  1635                           ;doprnt.c: 1266: }
  1636  00016E  D00D               	goto	l3709
  1637  000170                     l3705:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;doprnt.c: 1268: else
  1641                           ;doprnt.c: 1273: {
  1642                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1643  000170  C08A  FFD9         	movff	printf@ap,fsr2l
  1644  000174  C08B  FFDA         	movff	printf@ap+1,fsr2h
  1645  000178  CFDE F08D          	movff	postinc2,printf@val
  1646  00017C  CFDD F08E          	movff	postdec2,printf@val+1
  1647                           
  1648                           ; BSR set to: 0
  1649  000180  0E02               	movlw	2
  1650  000182  0100               	movlb	0	; () banked
  1651  000184  278A               	addwf	printf@ap& (0+255),f,b
  1652  000186  0E00               	movlw	0
  1653  000188  238B               	addwfc	(printf@ap+1)& (0+255),f,b
  1654  00018A                     l3709:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;doprnt.c: 1287: }
  1658                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1659  00018A  0E01               	movlw	1
  1660  00018C  0100               	movlb	0	; () banked
  1661  00018E  6F8F               	movwf	printf@c& (0+255),b
  1662  000190                     l3711:
  1663                           
  1664                           ; BSR set to: 0
  1665  000190  0E05               	movlw	5
  1666  000192  0100               	movlb	0	; () banked
  1667  000194  198F               	xorwf	printf@c& (0+255),w,b
  1668  000196  B4D8               	btfsc	status,2,c
  1669  000198  D019               	goto	l3723
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;doprnt.c: 1306: if(val < dpowers[c])
  1673                           
  1674                           ; BSR set to: 0
  1675                           
  1676                           ; BSR set to: 0
  1677  00019A  0100               	movlb	0	; () banked
  1678  00019C  518F               	movf	printf@c& (0+255),w,b
  1679  00019E  0D02               	mullw	2
  1680  0001A0  0E24               	movlw	low _dpowers
  1681  0001A2  24F3               	addwf	prodl,w,c
  1682  0001A4  6EF6               	movwf	tblptrl,c
  1683  0001A6  0EFE               	movlw	high _dpowers
  1684  0001A8  20F4               	addwfc	prodh,w,c
  1685  0001AA  6EF7               	movwf	tblptrh,c
  1686  0001AC                     	if	1	;There are 3 active tblptr bytes
  1687  0001AC  6AF8               	clrf	tblptru,c
  1688  0001AE  0E00               	movlw	low (__mediumconst shr (0+16))
  1689  0001B0  22F8               	addwfc	tblptru,f,c
  1690  0001B2                     	endif
  1691  0001B2  0009               	tblrd		*+
  1692  0001B4  50F5               	movf	tablat,w,c
  1693  0001B6  0100               	movlb	0	; () banked
  1694  0001B8  5D8D               	subwf	printf@val& (0+255),w,b
  1695  0001BA  0009               	tblrd		*+
  1696  0001BC  50F5               	movf	tablat,w,c
  1697  0001BE  0100               	movlb	0	; () banked
  1698  0001C0  598E               	subwfb	(printf@val+1)& (0+255),w,b
  1699  0001C2  A0D8               	btfss	status,0,c
  1700  0001C4  D003               	goto	l3723
  1701                           
  1702                           ; BSR set to: 0
  1703                           
  1704                           ; BSR set to: 0
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;doprnt.c: 1307: break;
  1708  0001C6  0100               	movlb	0	; () banked
  1709  0001C8  2B8F               	incf	printf@c& (0+255),f,b
  1710  0001CA  D7E2               	goto	l3711
  1711  0001CC                     l3723:
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;doprnt.c: 1422: {
  1715                           ;doprnt.c: 1438: if(flag & 0x03)
  1716  0001CC  C08C  F088         	movff	printf@flag,??_printf
  1717  0001D0  0E03               	movlw	3
  1718  0001D2  0100               	movlb	0	; () banked
  1719  0001D4  1788               	andwf	??_printf& (0+255),f,b
  1720  0001D6  B4D8               	btfsc	status,2,c
  1721  0001D8  D003               	goto	l3727
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;doprnt.c: 1439: (putch('-') );
  1725  0001DA  0E2D               	movlw	45
  1726  0001DC  EC0E  F005         	call	_putch
  1727  0001E0                     l3727:
  1728                           
  1729                           ;doprnt.c: 1469: }
  1730                           ;doprnt.c: 1472: prec = c;
  1731  0001E0  C08F  F089         	movff	printf@c,printf@prec
  1732                           
  1733                           ;doprnt.c: 1474: while(prec--) {
  1734  0001E4  D02C               	goto	l3733
  1735  0001E6                     l3729:
  1736                           
  1737                           ;doprnt.c: 1478: {
  1738                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1739  0001E6  0100               	movlb	0	; () banked
  1740  0001E8  5189               	movf	printf@prec& (0+255),w,b
  1741  0001EA  0D02               	mullw	2
  1742  0001EC  0E24               	movlw	low _dpowers
  1743  0001EE  24F3               	addwf	prodl,w,c
  1744  0001F0  6EF6               	movwf	tblptrl,c
  1745  0001F2  0EFE               	movlw	high _dpowers
  1746  0001F4  20F4               	addwfc	prodh,w,c
  1747  0001F6  6EF7               	movwf	tblptrh,c
  1748  0001F8                     	if	1	;There are 3 active tblptr bytes
  1749  0001F8  6AF8               	clrf	tblptru,c
  1750  0001FA  0E00               	movlw	low (__mediumconst shr (0+16))
  1751  0001FC  22F8               	addwfc	tblptru,f,c
  1752  0001FE                     	endif
  1753  0001FE  0009               	tblrd		*+
  1754  000200  CFF5 F07A          	movff	tablat,___lwdiv@divisor
  1755  000204  000A               	tblrd		*-
  1756  000206  CFF5 F07B          	movff	tablat,___lwdiv@divisor+1
  1757  00020A  C08D  F078         	movff	printf@val,___lwdiv@dividend
  1758  00020E  C08E  F079         	movff	printf@val+1,___lwdiv@dividend+1
  1759  000212  EC36  F002         	call	___lwdiv	;wreg free
  1760  000216  C078  F07F         	movff	?___lwdiv,___lwmod@dividend
  1761  00021A  C079  F080         	movff	?___lwdiv+1,___lwmod@dividend+1
  1762  00021E  0E00               	movlw	0
  1763  000220  0100               	movlb	0	; () banked
  1764  000222  6F82               	movwf	(___lwmod@divisor+1)& (0+255),b
  1765  000224  0E0A               	movlw	10
  1766  000226  6F81               	movwf	___lwmod@divisor& (0+255),b
  1767  000228  EC72  F002         	call	___lwmod	;wreg free
  1768  00022C  0100               	movlb	0	; () banked
  1769  00022E  517F               	movf	?___lwmod& (0+255),w,b
  1770  000230  0F30               	addlw	48
  1771  000232  0100               	movlb	0	; () banked
  1772  000234  6F8F               	movwf	printf@c& (0+255),b
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;doprnt.c: 1523: }
  1776                           ;doprnt.c: 1524: (putch(c) );
  1777  000236  0100               	movlb	0	; () banked
  1778  000238  518F               	movf	printf@c& (0+255),w,b
  1779  00023A  EC0E  F005         	call	_putch
  1780  00023E                     l3733:
  1781  00023E  0100               	movlb	0	; () banked
  1782  000240  0789               	decf	printf@prec& (0+255),f,b
  1783  000242  0100               	movlb	0	; () banked
  1784  000244  2989               	incf	printf@prec& (0+255),w,b
  1785  000246  A4D8               	btfss	status,2,c
  1786  000248  D7CE               	goto	l3729
  1787  00024A                     l3735:
  1788  00024A  C084  FFF6         	movff	printf@f,tblptrl
  1789  00024E  C085  FFF7         	movff	printf@f+1,tblptrh
  1790  000252  0100               	movlb	0	; () banked
  1791  000254  4B84               	infsnz	printf@f& (0+255),f,b
  1792  000256  2B85               	incf	(printf@f+1)& (0+255),f,b
  1793  000258                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1794  000258  6AF8               	clrf	tblptru,c
  1795  00025A                     	endif
  1796  00025A                     	if	0	;tblptru may be non-zero
  1797  00025A                     	endif
  1798  00025A  0008               	tblrd		*
  1799  00025C  CFF5 F08F          	movff	tablat,printf@c
  1800  000260  0100               	movlb	0	; () banked
  1801  000262  518F               	movf	printf@c& (0+255),w,b
  1802  000264  B4D8               	btfsc	status,2,c
  1803  000266  0012               	return	
  1804  000268  D73C               	goto	l3683
  1805  00026A                     __end_of_printf:
  1806                           	opt stack 0
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           prodh	equ	0xFF4
  1812                           prodl	equ	0xFF3
  1813                           intcon	equ	0xFF2
  1814                           postinc0	equ	0xFEE
  1815                           wreg	equ	0xFE8
  1816                           postinc2	equ	0xFDE
  1817                           postdec2	equ	0xFDD
  1818                           fsr2h	equ	0xFDA
  1819                           fsr2l	equ	0xFD9
  1820                           status	equ	0xFD8
  1821                           
  1822 ;; *************** function _putch *****************
  1823 ;; Defined at:
  1824 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  txData          1    wreg     unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  txData          1    1[BANK0 ] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;Total ram usage:        1 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    9
  1845 ;; This function calls:
  1846 ;;		_EUSART1_Write
  1847 ;; This function is called by:
  1848 ;;		_printf
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text4
  1853  000A1C                     __ptext4:
  1854                           	opt stack 0
  1855  000A1C                     _putch:
  1856                           	opt stack 19
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;incstack = 0
  1860                           ;putch@txData stored from wreg
  1861  000A1C  0100               	movlb	0	; () banked
  1862  000A1E  6F79               	movwf	putch@txData& (0+255),b
  1863                           
  1864                           ;eusart1.c: 113: EUSART1_Write(txData);
  1865  000A20  0100               	movlb	0	; () banked
  1866  000A22  5179               	movf	putch@txData& (0+255),w,b
  1867  000A24  EC15  F005         	call	_EUSART1_Write
  1868  000A28  0012               	return		;funcret
  1869  000A2A                     __end_of_putch:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           tblptrh	equ	0xFF7
  1873                           tblptrl	equ	0xFF6
  1874                           tablat	equ	0xFF5
  1875                           prodh	equ	0xFF4
  1876                           prodl	equ	0xFF3
  1877                           intcon	equ	0xFF2
  1878                           postinc0	equ	0xFEE
  1879                           wreg	equ	0xFE8
  1880                           postinc2	equ	0xFDE
  1881                           postdec2	equ	0xFDD
  1882                           fsr2h	equ	0xFDA
  1883                           fsr2l	equ	0xFD9
  1884                           status	equ	0xFD8
  1885                           
  1886 ;; *************** function _EUSART1_Write *****************
  1887 ;; Defined at:
  1888 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  txData          1    wreg     unsigned char 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  txData          1    0[BANK0 ] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1905 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1906 ;;Total ram usage:        1 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    8
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_putch
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text5
  1917  000A2A                     __ptext5:
  1918                           	opt stack 0
  1919  000A2A                     _EUSART1_Write:
  1920                           	opt stack 19
  1921                           
  1922                           ;incstack = 0
  1923                           ;EUSART1_Write@txData stored from wreg
  1924  000A2A  0100               	movlb	0	; () banked
  1925  000A2C  6F78               	movwf	EUSART1_Write@txData& (0+255),b
  1926  000A2E                     l441:
  1927  000A2E  A89E               	btfss	3998,4,c	;volatile
  1928  000A30  D7FE               	goto	l441
  1929                           
  1930                           ;eusart1.c: 101: }
  1931                           ;eusart1.c: 103: TXREG1 = txData;
  1932  000A32  C078  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1933  000A36  0012               	return		;funcret
  1934  000A38                     __end_of_EUSART1_Write:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           prodh	equ	0xFF4
  1941                           prodl	equ	0xFF3
  1942                           intcon	equ	0xFF2
  1943                           postinc0	equ	0xFEE
  1944                           wreg	equ	0xFE8
  1945                           postinc2	equ	0xFDE
  1946                           postdec2	equ	0xFDD
  1947                           fsr2h	equ	0xFDA
  1948                           fsr2l	equ	0xFD9
  1949                           status	equ	0xFD8
  1950                           
  1951 ;; *************** function ___lwmod *****************
  1952 ;; Defined at:
  1953 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  dividend        2    7[BANK0 ] unsigned int 
  1956 ;;  divisor         2    9[BANK0 ] unsigned int 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  counter         1   11[BANK0 ] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  2    7[BANK0 ] unsigned int 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1968 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1971 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;Total ram usage:        5 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    8
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_printf
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text6
  1983  0004E4                     __ptext6:
  1984                           	opt stack 0
  1985  0004E4                     ___lwmod:
  1986                           	opt stack 20
  1987                           
  1988                           ;incstack = 0
  1989  0004E4  0100               	movlb	0	; () banked
  1990  0004E6  5181               	movf	___lwmod@divisor& (0+255),w,b
  1991  0004E8  0100               	movlb	0	; () banked
  1992  0004EA  1182               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1993  0004EC  B4D8               	btfsc	status,2,c
  1994  0004EE  D026               	goto	l1484
  1995                           
  1996                           ; BSR set to: 0
  1997  0004F0  0E01               	movlw	1
  1998  0004F2  0100               	movlb	0	; () banked
  1999  0004F4  6F83               	movwf	___lwmod@counter& (0+255),b
  2000  0004F6  D006               	goto	l3591
  2001  0004F8                     l3589:
  2002                           
  2003                           ; BSR set to: 0
  2004  0004F8  0100               	movlb	0	; () banked
  2005  0004FA  90D8               	bcf	status,0,c
  2006  0004FC  3781               	rlcf	___lwmod@divisor& (0+255),f,b
  2007  0004FE  3782               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2008  000500  0100               	movlb	0	; () banked
  2009  000502  2B83               	incf	___lwmod@counter& (0+255),f,b
  2010  000504                     l3591:
  2011                           
  2012                           ; BSR set to: 0
  2013  000504  0100               	movlb	0	; () banked
  2014  000506  AF82               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2015  000508  D7F7               	goto	l3589
  2016  00050A                     l3593:
  2017                           
  2018                           ; BSR set to: 0
  2019  00050A  0100               	movlb	0	; () banked
  2020  00050C  5181               	movf	___lwmod@divisor& (0+255),w,b
  2021  00050E  0100               	movlb	0	; () banked
  2022  000510  5D7F               	subwf	___lwmod@dividend& (0+255),w,b
  2023  000512  0100               	movlb	0	; () banked
  2024  000514  5182               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2025  000516  0100               	movlb	0	; () banked
  2026  000518  5980               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2027  00051A  A0D8               	btfss	status,0,c
  2028  00051C  D008               	goto	l3597
  2029                           
  2030                           ; BSR set to: 0
  2031  00051E  0100               	movlb	0	; () banked
  2032  000520  5181               	movf	___lwmod@divisor& (0+255),w,b
  2033  000522  0100               	movlb	0	; () banked
  2034  000524  5F7F               	subwf	___lwmod@dividend& (0+255),f,b
  2035  000526  0100               	movlb	0	; () banked
  2036  000528  5182               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2037  00052A  0100               	movlb	0	; () banked
  2038  00052C  5B80               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2039  00052E                     l3597:
  2040                           
  2041                           ; BSR set to: 0
  2042  00052E  0100               	movlb	0	; () banked
  2043  000530  90D8               	bcf	status,0,c
  2044  000532  3382               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2045  000534  3381               	rrcf	___lwmod@divisor& (0+255),f,b
  2046                           
  2047                           ; BSR set to: 0
  2048  000536  0100               	movlb	0	; () banked
  2049  000538  2F83               	decfsz	___lwmod@counter& (0+255),f,b
  2050  00053A  D7E7               	goto	l3593
  2051  00053C                     l1484:
  2052                           
  2053                           ; BSR set to: 0
  2054  00053C  C07F  F07F         	movff	___lwmod@dividend,?___lwmod
  2055  000540  C080  F080         	movff	___lwmod@dividend+1,?___lwmod+1
  2056                           
  2057                           ; BSR set to: 0
  2058  000544  0012               	return		;funcret
  2059  000546                     __end_of___lwmod:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           prodh	equ	0xFF4
  2066                           prodl	equ	0xFF3
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           postinc2	equ	0xFDE
  2071                           postdec2	equ	0xFDD
  2072                           fsr2h	equ	0xFDA
  2073                           fsr2l	equ	0xFD9
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function ___lwdiv *****************
  2077 ;; Defined at:
  2078 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  dividend        2    0[BANK0 ] unsigned int 
  2081 ;;  divisor         2    2[BANK0 ] unsigned int 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  quotient        2    5[BANK0 ] unsigned int 
  2084 ;;  counter         1    4[BANK0 ] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2    0[BANK0 ] unsigned int 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;Total ram usage:        7 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    8
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_printf
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text7
  2109  00046C                     __ptext7:
  2110                           	opt stack 0
  2111  00046C                     ___lwdiv:
  2112                           	opt stack 20
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;incstack = 0
  2116  00046C  0E00               	movlw	0
  2117  00046E  0100               	movlb	0	; () banked
  2118  000470  6F7E               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2119  000472  0E00               	movlw	0
  2120  000474  6F7D               	movwf	___lwdiv@quotient& (0+255),b
  2121                           
  2122                           ; BSR set to: 0
  2123  000476  0100               	movlb	0	; () banked
  2124  000478  517A               	movf	___lwdiv@divisor& (0+255),w,b
  2125  00047A  0100               	movlb	0	; () banked
  2126  00047C  117B               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2127  00047E  B4D8               	btfsc	status,2,c
  2128  000480  D02C               	goto	l1474
  2129                           
  2130                           ; BSR set to: 0
  2131  000482  0E01               	movlw	1
  2132  000484  0100               	movlb	0	; () banked
  2133  000486  6F7C               	movwf	___lwdiv@counter& (0+255),b
  2134  000488  D006               	goto	l3571
  2135  00048A                     l3569:
  2136                           
  2137                           ; BSR set to: 0
  2138  00048A  0100               	movlb	0	; () banked
  2139  00048C  90D8               	bcf	status,0,c
  2140  00048E  377A               	rlcf	___lwdiv@divisor& (0+255),f,b
  2141  000490  377B               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2142  000492  0100               	movlb	0	; () banked
  2143  000494  2B7C               	incf	___lwdiv@counter& (0+255),f,b
  2144  000496                     l3571:
  2145                           
  2146                           ; BSR set to: 0
  2147  000496  0100               	movlb	0	; () banked
  2148  000498  AF7B               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2149  00049A  D7F7               	goto	l3569
  2150  00049C                     l3573:
  2151                           
  2152                           ; BSR set to: 0
  2153  00049C  0100               	movlb	0	; () banked
  2154  00049E  90D8               	bcf	status,0,c
  2155  0004A0  377D               	rlcf	___lwdiv@quotient& (0+255),f,b
  2156  0004A2  377E               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2157                           
  2158                           ; BSR set to: 0
  2159  0004A4  0100               	movlb	0	; () banked
  2160  0004A6  517A               	movf	___lwdiv@divisor& (0+255),w,b
  2161  0004A8  0100               	movlb	0	; () banked
  2162  0004AA  5D78               	subwf	___lwdiv@dividend& (0+255),w,b
  2163  0004AC  0100               	movlb	0	; () banked
  2164  0004AE  517B               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2165  0004B0  0100               	movlb	0	; () banked
  2166  0004B2  5979               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2167  0004B4  A0D8               	btfss	status,0,c
  2168  0004B6  D00A               	goto	l3581
  2169                           
  2170                           ; BSR set to: 0
  2171  0004B8  0100               	movlb	0	; () banked
  2172  0004BA  517A               	movf	___lwdiv@divisor& (0+255),w,b
  2173  0004BC  0100               	movlb	0	; () banked
  2174  0004BE  5F78               	subwf	___lwdiv@dividend& (0+255),f,b
  2175  0004C0  0100               	movlb	0	; () banked
  2176  0004C2  517B               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2177  0004C4  0100               	movlb	0	; () banked
  2178  0004C6  5B79               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2179                           
  2180                           ; BSR set to: 0
  2181  0004C8  0100               	movlb	0	; () banked
  2182  0004CA  817D               	bsf	___lwdiv@quotient& (0+255),0,b
  2183  0004CC                     l3581:
  2184                           
  2185                           ; BSR set to: 0
  2186  0004CC  0100               	movlb	0	; () banked
  2187  0004CE  90D8               	bcf	status,0,c
  2188  0004D0  337B               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2189  0004D2  337A               	rrcf	___lwdiv@divisor& (0+255),f,b
  2190                           
  2191                           ; BSR set to: 0
  2192  0004D4  0100               	movlb	0	; () banked
  2193  0004D6  2F7C               	decfsz	___lwdiv@counter& (0+255),f,b
  2194  0004D8  D7E1               	goto	l3573
  2195  0004DA                     l1474:
  2196                           
  2197                           ; BSR set to: 0
  2198  0004DA  C07D  F078         	movff	___lwdiv@quotient,?___lwdiv
  2199  0004DE  C07E  F079         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2200                           
  2201                           ; BSR set to: 0
  2202  0004E2  0012               	return		;funcret
  2203  0004E4                     __end_of___lwdiv:
  2204                           	opt stack 0
  2205                           tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           tblptrl	equ	0xFF6
  2208                           tablat	equ	0xFF5
  2209                           prodh	equ	0xFF4
  2210                           prodl	equ	0xFF3
  2211                           intcon	equ	0xFF2
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postinc2	equ	0xFDE
  2215                           postdec2	equ	0xFDD
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _get_frequency *****************
  2221 ;; Defined at:
  2222 ;;		line 105 in file "mcc_generated_files/ccp5.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2    0[BANK0 ] unsigned int 
  2229 ;; Registers used:
  2230 ;;		None
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2239 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2240 ;;Total ram usage:        2 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    8
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_capture_tb
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text8
  2251  000A42                     __ptext8:
  2252                           	opt stack 0
  2253  000A42                     _get_frequency:
  2254                           	opt stack 21
  2255                           
  2256                           ;ccp5.c: 106: return frequency;
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;incstack = 0
  2260  000A42  C02D  F078         	movff	_frequency,?_get_frequency	;volatile
  2261  000A46  C02E  F079         	movff	_frequency+1,?_get_frequency+1	;volatile
  2262  000A4A  0012               	return		;funcret
  2263  000A4C                     __end_of_get_frequency:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           postinc2	equ	0xFDE
  2275                           postdec2	equ	0xFDD
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _SYSTEM_Initialize *****************
  2281 ;; Defined at:
  2282 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2, status,0, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:   10
  2303 ;; This function calls:
  2304 ;;		_ADC_Initialize
  2305 ;;		_CCP5_Initialize
  2306 ;;		_EPWM1_Initialize
  2307 ;;		_EUSART1_Initialize
  2308 ;;		_EXT_INT_Initialize
  2309 ;;		_INTERRUPT_Initialize
  2310 ;;		_OSCILLATOR_Initialize
  2311 ;;		_PIN_MANAGER_Initialize
  2312 ;;		_TMR0_Initialize
  2313 ;;		_TMR1_Initialize
  2314 ;;		_TMR2_Initialize
  2315 ;;		_TMR3_Initialize
  2316 ;; This function is called by:
  2317 ;;		_main
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text9
  2322  0006CC                     __ptext9:
  2323                           	opt stack 0
  2324  0006CC                     _SYSTEM_Initialize:
  2325                           	opt stack 20
  2326                           
  2327                           ;mcc.c: 114: INTERRUPT_Initialize();
  2328                           
  2329                           ;incstack = 0
  2330  0006CC  EC06  F005         	call	_INTERRUPT_Initialize	;wreg free
  2331                           
  2332                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2333  0006D0  EC30  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  2334                           
  2335                           ;mcc.c: 116: OSCILLATOR_Initialize();
  2336  0006D4  ECFD  F004         	call	_OSCILLATOR_Initialize	;wreg free
  2337                           
  2338                           ;mcc.c: 117: CCP5_Initialize();
  2339  0006D8  ECA6  F004         	call	_CCP5_Initialize	;wreg free
  2340                           
  2341                           ;mcc.c: 118: ADC_Initialize();
  2342  0006DC  ECB3  F004         	call	_ADC_Initialize	;wreg free
  2343                           
  2344                           ;mcc.c: 119: EPWM1_Initialize();
  2345  0006E0  EC7C  F004         	call	_EPWM1_Initialize	;wreg free
  2346                           
  2347                           ;mcc.c: 120: TMR3_Initialize();
  2348  0006E4  ECA3  F002         	call	_TMR3_Initialize	;wreg free
  2349                           
  2350                           ;mcc.c: 121: TMR2_Initialize();
  2351  0006E8  ECD6  F004         	call	_TMR2_Initialize	;wreg free
  2352                           
  2353                           ;mcc.c: 122: EXT_INT_Initialize();
  2354  0006EC  EC7F  F003         	call	_EXT_INT_Initialize	;wreg free
  2355                           
  2356                           ;mcc.c: 123: TMR1_Initialize();
  2357  0006F0  ECC7  F002         	call	_TMR1_Initialize	;wreg free
  2358                           
  2359                           ;mcc.c: 124: TMR0_Initialize();
  2360  0006F4  EC96  F003         	call	_TMR0_Initialize	;wreg free
  2361                           
  2362                           ;mcc.c: 125: EUSART1_Initialize();
  2363  0006F8  ECCB  F004         	call	_EUSART1_Initialize	;wreg free
  2364  0006FC  0012               	return		;funcret
  2365  0006FE                     __end_of_SYSTEM_Initialize:
  2366                           	opt stack 0
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodh	equ	0xFF4
  2372                           prodl	equ	0xFF3
  2373                           intcon	equ	0xFF2
  2374                           postinc0	equ	0xFEE
  2375                           wreg	equ	0xFE8
  2376                           postinc2	equ	0xFDE
  2377                           postdec2	equ	0xFDD
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _TMR3_Initialize *****************
  2383 ;; Defined at:
  2384 ;;		line 65 in file "mcc_generated_files/tmr3.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2400 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2401 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;Total ram usage:        2 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    9
  2405 ;; This function calls:
  2406 ;;		_TMR3_SetInterruptHandler
  2407 ;;		_TMR3_StopTimer
  2408 ;; This function is called by:
  2409 ;;		_SYSTEM_Initialize
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text10
  2414  000546                     __ptext10:
  2415                           	opt stack 0
  2416  000546                     _TMR3_Initialize:
  2417                           	opt stack 20
  2418                           
  2419                           ;tmr3.c: 70: T3CON = 0x00;
  2420                           
  2421                           ;incstack = 0
  2422  000546  0E00               	movlw	0
  2423  000548  6EB1               	movwf	4017,c	;volatile
  2424                           
  2425                           ;tmr3.c: 73: T3GCON = 0x00;
  2426  00054A  0E00               	movlw	0
  2427  00054C  6EB0               	movwf	4016,c	;volatile
  2428                           
  2429                           ;tmr3.c: 76: TMR3H = 0xF0;
  2430  00054E  0EF0               	movlw	240
  2431  000550  6EB3               	movwf	4019,c	;volatile
  2432                           
  2433                           ;tmr3.c: 79: TMR3L = 0x60;
  2434  000552  0E60               	movlw	96
  2435  000554  6EB2               	movwf	4018,c	;volatile
  2436                           
  2437                           ;tmr3.c: 82: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  2438  000556  50B2               	movf	4018,w,c	;volatile
  2439  000558  CFB3 F07A          	movff	4019,??_TMR3_Initialize	;volatile
  2440  00055C  0100               	movlb	0	; () banked
  2441  00055E  6B7B               	clrf	(??_TMR3_Initialize+1)& (0+255),b
  2442  000560  C07A  F07B         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  2443  000564  0100               	movlb	0	; () banked
  2444  000566  6B7A               	clrf	??_TMR3_Initialize& (0+255),b
  2445  000568  0100               	movlb	0	; () banked
  2446  00056A  117A               	iorwf	??_TMR3_Initialize& (0+255),w,b
  2447  00056C  6E38               	movwf	_timer3ReloadVal,c	;volatile
  2448  00056E  0100               	movlb	0	; () banked
  2449  000570  517B               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
  2450  000572  6E39               	movwf	_timer3ReloadVal+1,c	;volatile
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;tmr3.c: 85: PIR2bits.TMR3IF = 0;
  2454  000574  92A1               	bcf	4001,1,c	;volatile
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;tmr3.c: 88: PIE2bits.TMR3IE = 1;
  2458  000576  82A0               	bsf	4000,1,c	;volatile
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;tmr3.c: 91: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  2462  000578  0EA4               	movlw	low _TMR3_DefaultInterruptHandler
  2463  00057A  0100               	movlb	0	; () banked
  2464  00057C  6F78               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  2465  00057E  0E0A               	movlw	high _TMR3_DefaultInterruptHandler
  2466  000580  0100               	movlb	0	; () banked
  2467  000582  6F79               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2468  000584  EC26  F005         	call	_TMR3_SetInterruptHandler	;wreg free
  2469                           
  2470                           ;tmr3.c: 94: TMR3_StopTimer();
  2471  000588  EC4A  F005         	call	_TMR3_StopTimer	;wreg free
  2472  00058C  0012               	return		;funcret
  2473  00058E                     __end_of_TMR3_Initialize:
  2474                           	opt stack 0
  2475                           tblptru	equ	0xFF8
  2476                           tblptrh	equ	0xFF7
  2477                           tblptrl	equ	0xFF6
  2478                           tablat	equ	0xFF5
  2479                           prodh	equ	0xFF4
  2480                           prodl	equ	0xFF3
  2481                           intcon	equ	0xFF2
  2482                           postinc0	equ	0xFEE
  2483                           wreg	equ	0xFE8
  2484                           postinc2	equ	0xFDE
  2485                           postdec2	equ	0xFDD
  2486                           fsr2h	equ	0xFDA
  2487                           fsr2l	equ	0xFD9
  2488                           status	equ	0xFD8
  2489                           
  2490 ;; *************** function _TMR3_StopTimer *****************
  2491 ;; Defined at:
  2492 ;;		line 103 in file "mcc_generated_files/tmr3.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		None
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    8
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_TMR3_Initialize
  2517 ;;		_WM_HANDLER_INIT
  2518 ;;		_motor_forward_duration
  2519 ;;		_motor_reverse_duration
  2520 ;;		_motor_off_duration
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text11
  2525  000A94                     __ptext11:
  2526                           	opt stack 0
  2527  000A94                     _TMR3_StopTimer:
  2528                           	opt stack 20
  2529                           
  2530                           ;tmr3.c: 106: T3CONbits.TMR3ON = 0;
  2531                           
  2532                           ;incstack = 0
  2533  000A94  90B1               	bcf	4017,0,c	;volatile
  2534  000A96  0012               	return		;funcret
  2535  000A98                     __end_of_TMR3_StopTimer:
  2536                           	opt stack 0
  2537                           tblptru	equ	0xFF8
  2538                           tblptrh	equ	0xFF7
  2539                           tblptrl	equ	0xFF6
  2540                           tablat	equ	0xFF5
  2541                           prodh	equ	0xFF4
  2542                           prodl	equ	0xFF3
  2543                           intcon	equ	0xFF2
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           postinc2	equ	0xFDE
  2547                           postdec2	equ	0xFDD
  2548                           fsr2h	equ	0xFDA
  2549                           fsr2l	equ	0xFD9
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function _TMR3_SetInterruptHandler *****************
  2553 ;; Defined at:
  2554 ;;		line 192 in file "mcc_generated_files/tmr3.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2557 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;Total ram usage:        2 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    8
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_TMR3_Initialize
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text12
  2584  000A4C                     __ptext12:
  2585                           	opt stack 0
  2586  000A4C                     _TMR3_SetInterruptHandler:
  2587                           	opt stack 20
  2588                           
  2589                           ;tmr3.c: 193: TMR3_InterruptHandler = InterruptHandler;
  2590                           
  2591                           ;incstack = 0
  2592  000A4C  C078  F090         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  2593  000A50  C079  F091         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  2594  000A54  0012               	return		;funcret
  2595  000A56                     __end_of_TMR3_SetInterruptHandler:
  2596                           	opt stack 0
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           intcon	equ	0xFF2
  2604                           postinc0	equ	0xFEE
  2605                           wreg	equ	0xFE8
  2606                           postinc2	equ	0xFDE
  2607                           postdec2	equ	0xFDD
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function _TMR2_Initialize *****************
  2613 ;; Defined at:
  2614 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    9
  2635 ;; This function calls:
  2636 ;;		_TMR2_StartTimer
  2637 ;; This function is called by:
  2638 ;;		_SYSTEM_Initialize
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text13
  2643  0009AC                     __ptext13:
  2644                           	opt stack 0
  2645  0009AC                     _TMR2_Initialize:
  2646                           	opt stack 20
  2647                           
  2648                           ;tmr2.c: 66: T2CON = 0x02;
  2649                           
  2650                           ;incstack = 0
  2651  0009AC  0E02               	movlw	2
  2652  0009AE  6ECA               	movwf	4042,c	;volatile
  2653                           
  2654                           ;tmr2.c: 69: PR2 = 0x65;
  2655  0009B0  0E65               	movlw	101
  2656  0009B2  6ECB               	movwf	4043,c	;volatile
  2657                           
  2658                           ;tmr2.c: 72: TMR2 = 0x00;
  2659  0009B4  0E00               	movlw	0
  2660  0009B6  6ECC               	movwf	4044,c	;volatile
  2661                           
  2662                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  2663  0009B8  929E               	bcf	3998,1,c	;volatile
  2664                           
  2665                           ;tmr2.c: 78: TMR2_StartTimer();
  2666  0009BA  EC4C  F005         	call	_TMR2_StartTimer	;wreg free
  2667  0009BE  0012               	return		;funcret
  2668  0009C0                     __end_of_TMR2_Initialize:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           postinc2	equ	0xFDE
  2680                           postdec2	equ	0xFDD
  2681                           fsr2h	equ	0xFDA
  2682                           fsr2l	equ	0xFD9
  2683                           status	equ	0xFD8
  2684                           
  2685 ;; *************** function _TMR2_StartTimer *****************
  2686 ;; Defined at:
  2687 ;;		line 81 in file "mcc_generated_files/tmr2.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		None
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    8
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_TMR2_Initialize
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text14
  2716  000A98                     __ptext14:
  2717                           	opt stack 0
  2718  000A98                     _TMR2_StartTimer:
  2719                           	opt stack 20
  2720                           
  2721                           ;tmr2.c: 84: T2CONbits.TMR2ON = 1;
  2722                           
  2723                           ;incstack = 0
  2724  000A98  84CA               	bsf	4042,2,c	;volatile
  2725  000A9A  0012               	return		;funcret
  2726  000A9C                     __end_of_TMR2_StartTimer:
  2727                           	opt stack 0
  2728                           tblptru	equ	0xFF8
  2729                           tblptrh	equ	0xFF7
  2730                           tblptrl	equ	0xFF6
  2731                           tablat	equ	0xFF5
  2732                           prodh	equ	0xFF4
  2733                           prodl	equ	0xFF3
  2734                           intcon	equ	0xFF2
  2735                           postinc0	equ	0xFEE
  2736                           wreg	equ	0xFE8
  2737                           postinc2	equ	0xFDE
  2738                           postdec2	equ	0xFDD
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function _TMR1_Initialize *****************
  2744 ;; Defined at:
  2745 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    9
  2766 ;; This function calls:
  2767 ;;		_TMR1_SetInterruptHandler
  2768 ;;		_TMR1_StartTimer
  2769 ;; This function is called by:
  2770 ;;		_SYSTEM_Initialize
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text15
  2775  00058E                     __ptext15:
  2776                           	opt stack 0
  2777  00058E                     _TMR1_Initialize:
  2778                           	opt stack 20
  2779                           
  2780                           ;tmr1.c: 68: T1CON = 0x30;
  2781                           
  2782                           ;incstack = 0
  2783  00058E  0E30               	movlw	48
  2784  000590  6ECD               	movwf	4045,c	;volatile
  2785                           
  2786                           ;tmr1.c: 71: T1GCON = 0x00;
  2787  000592  0E00               	movlw	0
  2788  000594  6EAA               	movwf	4010,c	;volatile
  2789                           
  2790                           ;tmr1.c: 74: TMR1H = 0x3C;
  2791  000596  0E3C               	movlw	60
  2792  000598  6ECF               	movwf	4047,c	;volatile
  2793                           
  2794                           ;tmr1.c: 77: TMR1L = 0xB0;
  2795  00059A  0EB0               	movlw	176
  2796  00059C  6ECE               	movwf	4046,c	;volatile
  2797                           
  2798                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2799  00059E  50CE               	movf	4046,w,c	;volatile
  2800  0005A0  CFCF F07A          	movff	4047,??_TMR1_Initialize	;volatile
  2801  0005A4  0100               	movlb	0	; () banked
  2802  0005A6  6B7B               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  2803  0005A8  C07A  F07B         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2804  0005AC  0100               	movlb	0	; () banked
  2805  0005AE  6B7A               	clrf	??_TMR1_Initialize& (0+255),b
  2806  0005B0  0100               	movlb	0	; () banked
  2807  0005B2  117A               	iorwf	??_TMR1_Initialize& (0+255),w,b
  2808  0005B4  6E3E               	movwf	_timer1ReloadVal,c	;volatile
  2809  0005B6  0100               	movlb	0	; () banked
  2810  0005B8  517B               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  2811  0005BA  6E3F               	movwf	_timer1ReloadVal+1,c	;volatile
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  2815  0005BC  909E               	bcf	3998,0,c	;volatile
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  2819  0005BE  809D               	bsf	3997,0,c	;volatile
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2823  0005C0  0E6A               	movlw	low _TMR1_DefaultInterruptHandler
  2824  0005C2  0100               	movlb	0	; () banked
  2825  0005C4  6F78               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2826  0005C6  0E02               	movlw	high _TMR1_DefaultInterruptHandler
  2827  0005C8  0100               	movlb	0	; () banked
  2828  0005CA  6F79               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2829  0005CC  EC2B  F005         	call	_TMR1_SetInterruptHandler	;wreg free
  2830                           
  2831                           ;tmr1.c: 92: TMR1_StartTimer();
  2832  0005D0  EC4E  F005         	call	_TMR1_StartTimer	;wreg free
  2833  0005D4  0012               	return		;funcret
  2834  0005D6                     __end_of_TMR1_Initialize:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           prodh	equ	0xFF4
  2841                           prodl	equ	0xFF3
  2842                           intcon	equ	0xFF2
  2843                           postinc0	equ	0xFEE
  2844                           wreg	equ	0xFE8
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _TMR1_StartTimer *****************
  2852 ;; Defined at:
  2853 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		None
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    8
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_TMR1_Initialize
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text16
  2882  000A9C                     __ptext16:
  2883                           	opt stack 0
  2884  000A9C                     _TMR1_StartTimer:
  2885                           	opt stack 20
  2886                           
  2887                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  2888                           
  2889                           ;incstack = 0
  2890  000A9C  80CD               	bsf	4045,0,c	;volatile
  2891  000A9E  0012               	return		;funcret
  2892  000AA0                     __end_of_TMR1_StartTimer:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           tblptrh	equ	0xFF7
  2896                           tblptrl	equ	0xFF6
  2897                           tablat	equ	0xFF5
  2898                           prodh	equ	0xFF4
  2899                           prodl	equ	0xFF3
  2900                           intcon	equ	0xFF2
  2901                           postinc0	equ	0xFEE
  2902                           wreg	equ	0xFE8
  2903                           postinc2	equ	0xFDE
  2904                           postdec2	equ	0xFDD
  2905                           fsr2h	equ	0xFDA
  2906                           fsr2l	equ	0xFD9
  2907                           status	equ	0xFD8
  2908                           
  2909 ;; *************** function _TMR1_SetInterruptHandler *****************
  2910 ;; Defined at:
  2911 ;;		line 190 in file "mcc_generated_files/tmr1.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2914 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2926 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2930 ;;Total ram usage:        2 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    8
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_TMR1_Initialize
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text17
  2941  000A56                     __ptext17:
  2942                           	opt stack 0
  2943  000A56                     _TMR1_SetInterruptHandler:
  2944                           	opt stack 20
  2945                           
  2946                           ;tmr1.c: 191: TMR1_InterruptHandler = InterruptHandler;
  2947                           
  2948                           ;incstack = 0
  2949  000A56  C078  F03C         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2950  000A5A  C079  F03D         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2951  000A5E  0012               	return		;funcret
  2952  000A60                     __end_of_TMR1_SetInterruptHandler:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           prodh	equ	0xFF4
  2959                           prodl	equ	0xFF3
  2960                           intcon	equ	0xFF2
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postinc2	equ	0xFDE
  2964                           postdec2	equ	0xFDD
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _TMR0_Initialize *****************
  2970 ;; Defined at:
  2971 ;;		line 69 in file "mcc_generated_files/tmr0.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    9
  2992 ;; This function calls:
  2993 ;;		_TMR0_SetInterruptHandler
  2994 ;;		_TMR0_StopTimer
  2995 ;; This function is called by:
  2996 ;;		_SYSTEM_Initialize
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text18
  3001  00072C                     __ptext18:
  3002                           	opt stack 0
  3003  00072C                     _TMR0_Initialize:
  3004                           	opt stack 20
  3005                           
  3006                           ;tmr0.c: 74: T0CON = 0x53;
  3007                           
  3008                           ;incstack = 0
  3009  00072C  0E53               	movlw	83
  3010  00072E  6ED5               	movwf	4053,c	;volatile
  3011                           
  3012                           ;tmr0.c: 77: TMR0H = 0x00;
  3013  000730  0E00               	movlw	0
  3014  000732  6ED7               	movwf	4055,c	;volatile
  3015                           
  3016                           ;tmr0.c: 80: TMR0L = 0x06;
  3017  000734  0E06               	movlw	6
  3018  000736  6ED6               	movwf	4054,c	;volatile
  3019                           
  3020                           ;tmr0.c: 83: timer0ReloadVal = 6;
  3021  000738  0E06               	movlw	6
  3022  00073A  6E44               	movwf	_timer0ReloadVal,c	;volatile
  3023                           
  3024                           ;tmr0.c: 86: INTCONbits.TMR0IF = 0;
  3025  00073C  94F2               	bcf	intcon,2,c	;volatile
  3026                           
  3027                           ;tmr0.c: 89: INTCONbits.TMR0IE = 1;
  3028  00073E  8AF2               	bsf	intcon,5,c	;volatile
  3029                           
  3030                           ;tmr0.c: 92: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  3031  000740  0E3E               	movlw	low _TMR0_DefaultInterruptHandler
  3032  000742  0100               	movlb	0	; () banked
  3033  000744  6F78               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  3034  000746  0E08               	movlw	high _TMR0_DefaultInterruptHandler
  3035  000748  0100               	movlb	0	; () banked
  3036  00074A  6F79               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3037  00074C  EC30  F005         	call	_TMR0_SetInterruptHandler	;wreg free
  3038                           
  3039                           ;tmr0.c: 95: TMR0_StopTimer();
  3040  000750  EC50  F005         	call	_TMR0_StopTimer	;wreg free
  3041  000754  0012               	return		;funcret
  3042  000756                     __end_of_TMR0_Initialize:
  3043                           	opt stack 0
  3044                           tblptru	equ	0xFF8
  3045                           tblptrh	equ	0xFF7
  3046                           tblptrl	equ	0xFF6
  3047                           tablat	equ	0xFF5
  3048                           prodh	equ	0xFF4
  3049                           prodl	equ	0xFF3
  3050                           intcon	equ	0xFF2
  3051                           postinc0	equ	0xFEE
  3052                           wreg	equ	0xFE8
  3053                           postinc2	equ	0xFDE
  3054                           postdec2	equ	0xFDD
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _TMR0_StopTimer *****************
  3060 ;; Defined at:
  3061 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		None
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3079 ;;Total ram usage:        0 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    8
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_TMR0_Initialize
  3086 ;;		_WM_HANDLER_INIT
  3087 ;;		_WM_HANDLER_FAULT_SENSE
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text19
  3092  000AA0                     __ptext19:
  3093                           	opt stack 0
  3094  000AA0                     _TMR0_StopTimer:
  3095                           	opt stack 20
  3096                           
  3097                           ;tmr0.c: 107: T0CONbits.TMR0ON = 0;
  3098                           
  3099                           ;incstack = 0
  3100  000AA0  9ED5               	bcf	4053,7,c	;volatile
  3101  000AA2  0012               	return		;funcret
  3102  000AA4                     __end_of_TMR0_StopTimer:
  3103                           	opt stack 0
  3104                           tblptru	equ	0xFF8
  3105                           tblptrh	equ	0xFF7
  3106                           tblptrl	equ	0xFF6
  3107                           tablat	equ	0xFF5
  3108                           prodh	equ	0xFF4
  3109                           prodl	equ	0xFF3
  3110                           intcon	equ	0xFF2
  3111                           postinc0	equ	0xFEE
  3112                           wreg	equ	0xFE8
  3113                           postinc2	equ	0xFDE
  3114                           postdec2	equ	0xFDD
  3115                           fsr2h	equ	0xFDA
  3116                           fsr2l	equ	0xFD9
  3117                           status	equ	0xFD8
  3118                           
  3119 ;; *************** function _TMR0_SetInterruptHandler *****************
  3120 ;; Defined at:
  3121 ;;		line 166 in file "mcc_generated_files/tmr0.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3124 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;Total ram usage:        2 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    8
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_TMR0_Initialize
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text20
  3151  000A60                     __ptext20:
  3152                           	opt stack 0
  3153  000A60                     _TMR0_SetInterruptHandler:
  3154                           	opt stack 20
  3155                           
  3156                           ;tmr0.c: 167: TMR0_InterruptHandler = InterruptHandler;
  3157                           
  3158                           ;incstack = 0
  3159  000A60  C078  F03A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3160  000A64  C079  F03B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3161  000A68  0012               	return		;funcret
  3162  000A6A                     __end_of_TMR0_SetInterruptHandler:
  3163                           	opt stack 0
  3164                           tblptru	equ	0xFF8
  3165                           tblptrh	equ	0xFF7
  3166                           tblptrl	equ	0xFF6
  3167                           tablat	equ	0xFF5
  3168                           prodh	equ	0xFF4
  3169                           prodl	equ	0xFF3
  3170                           intcon	equ	0xFF2
  3171                           postinc0	equ	0xFEE
  3172                           wreg	equ	0xFE8
  3173                           postinc2	equ	0xFDE
  3174                           postdec2	equ	0xFDD
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8
  3178                           
  3179 ;; *************** function _PIN_MANAGER_Initialize *****************
  3180 ;; Defined at:
  3181 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;Total ram usage:        0 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    8
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_SYSTEM_Initialize
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text21
  3210  000660                     __ptext21:
  3211                           	opt stack 0
  3212  000660                     _PIN_MANAGER_Initialize:
  3213                           	opt stack 21
  3214                           
  3215                           ;pin_manager.c: 57: LATE = 0x00;
  3216                           
  3217                           ;incstack = 0
  3218  000660  0E00               	movlw	0
  3219  000662  6E8D               	movwf	3981,c	;volatile
  3220                           
  3221                           ;pin_manager.c: 58: LATD = 0x00;
  3222  000664  0E00               	movlw	0
  3223  000666  6E8C               	movwf	3980,c	;volatile
  3224                           
  3225                           ;pin_manager.c: 59: LATA = 0x20;
  3226  000668  0E20               	movlw	32
  3227  00066A  6E89               	movwf	3977,c	;volatile
  3228                           
  3229                           ;pin_manager.c: 60: LATB = 0x00;
  3230  00066C  0E00               	movlw	0
  3231  00066E  6E8A               	movwf	3978,c	;volatile
  3232                           
  3233                           ;pin_manager.c: 61: LATC = 0x00;
  3234  000670  0E00               	movlw	0
  3235  000672  6E8B               	movwf	3979,c	;volatile
  3236                           
  3237                           ;pin_manager.c: 66: TRISE = 0x00;
  3238  000674  0E00               	movlw	0
  3239  000676  6E96               	movwf	3990,c	;volatile
  3240                           
  3241                           ;pin_manager.c: 67: TRISA = 0xAF;
  3242  000678  0EAF               	movlw	175
  3243  00067A  6E92               	movwf	3986,c	;volatile
  3244                           
  3245                           ;pin_manager.c: 68: TRISB = 0xFF;
  3246  00067C  6893               	setf	3987,c	;volatile
  3247                           
  3248                           ;pin_manager.c: 69: TRISC = 0xBF;
  3249  00067E  0EBF               	movlw	191
  3250  000680  6E94               	movwf	3988,c	;volatile
  3251                           
  3252                           ;pin_manager.c: 70: TRISD = 0x0F;
  3253  000682  0E0F               	movlw	15
  3254  000684  6E95               	movwf	3989,c	;volatile
  3255                           
  3256                           ;pin_manager.c: 75: ANCON0 = 0x1F;
  3257  000686  0E1F               	movlw	31
  3258  000688  010F               	movlb	15	; () banked
  3259  00068A  6F5D               	movwf	93,b	;volatile
  3260                           
  3261                           ;pin_manager.c: 76: ANCON1 = 0x7A;
  3262  00068C  0E7A               	movlw	122
  3263  00068E  010F               	movlb	15	; () banked
  3264  000690  6F5C               	movwf	92,b	;volatile
  3265                           
  3266                           ; BSR set to: 15
  3267                           ;pin_manager.c: 81: WPUB = 0xFF;
  3268  000692  010F               	movlb	15	; () banked
  3269  000694  695B               	setf	91,b	;volatile
  3270                           
  3271                           ; BSR set to: 15
  3272  000696  0012               	return		;funcret
  3273  000698                     __end_of_PIN_MANAGER_Initialize:
  3274                           	opt stack 0
  3275                           tblptru	equ	0xFF8
  3276                           tblptrh	equ	0xFF7
  3277                           tblptrl	equ	0xFF6
  3278                           tablat	equ	0xFF5
  3279                           prodh	equ	0xFF4
  3280                           prodl	equ	0xFF3
  3281                           intcon	equ	0xFF2
  3282                           postinc0	equ	0xFEE
  3283                           wreg	equ	0xFE8
  3284                           postinc2	equ	0xFDE
  3285                           postdec2	equ	0xFDD
  3286                           fsr2h	equ	0xFDA
  3287                           fsr2l	equ	0xFD9
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function _OSCILLATOR_Initialize *****************
  3291 ;; Defined at:
  3292 ;;		line 128 in file "mcc_generated_files/mcc.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    8
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_SYSTEM_Initialize
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text22
  3321  0009FA                     __ptext22:
  3322                           	opt stack 0
  3323  0009FA                     _OSCILLATOR_Initialize:
  3324                           	opt stack 21
  3325                           
  3326                           ;mcc.c: 131: OSCCON = 0x72;
  3327                           
  3328                           ; BSR set to: 15
  3329                           ;incstack = 0
  3330  0009FA  0E72               	movlw	114
  3331  0009FC  6ED3               	movwf	4051,c	;volatile
  3332                           
  3333                           ;mcc.c: 133: OSCCON2 = 0x00;
  3334  0009FE  0E00               	movlw	0
  3335  000A00  6ED2               	movwf	4050,c	;volatile
  3336                           
  3337                           ;mcc.c: 135: OSCTUNE = 0x00;
  3338  000A02  0E00               	movlw	0
  3339  000A04  6E9B               	movwf	3995,c	;volatile
  3340                           
  3341                           ;mcc.c: 137: REFOCON = 0x00;
  3342  000A06  0E00               	movlw	0
  3343  000A08  6E9A               	movwf	3994,c	;volatile
  3344  000A0A  0012               	return		;funcret
  3345  000A0C                     __end_of_OSCILLATOR_Initialize:
  3346                           	opt stack 0
  3347                           tblptru	equ	0xFF8
  3348                           tblptrh	equ	0xFF7
  3349                           tblptrl	equ	0xFF6
  3350                           tablat	equ	0xFF5
  3351                           prodh	equ	0xFF4
  3352                           prodl	equ	0xFF3
  3353                           intcon	equ	0xFF2
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           postinc2	equ	0xFDE
  3357                           postdec2	equ	0xFDD
  3358                           fsr2h	equ	0xFDA
  3359                           fsr2l	equ	0xFD9
  3360                           status	equ	0xFD8
  3361                           
  3362 ;; *************** function _INTERRUPT_Initialize *****************
  3363 ;; Defined at:
  3364 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		None
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    8
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_SYSTEM_Initialize
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text23
  3393  000A0C                     __ptext23:
  3394                           	opt stack 0
  3395  000A0C                     _INTERRUPT_Initialize:
  3396                           	opt stack 21
  3397                           
  3398                           ;interrupt_manager.c: 54: RCONbits.IPEN = 1;
  3399                           
  3400                           ;incstack = 0
  3401  000A0C  8ED0               	bsf	4048,7,c	;volatile
  3402                           
  3403                           ;interrupt_manager.c: 59: IPR4bits.CCP5IP = 1;
  3404  000A0E  84B8               	bsf	4024,2,c	;volatile
  3405                           
  3406                           ;interrupt_manager.c: 62: IPR1bits.ADIP = 1;
  3407  000A10  8C9F               	bsf	3999,6,c	;volatile
  3408                           
  3409                           ;interrupt_manager.c: 65: IPR2bits.TMR3IP = 1;
  3410  000A12  82A2               	bsf	4002,1,c	;volatile
  3411                           
  3412                           ;interrupt_manager.c: 68: INTCON2bits.TMR0IP = 1;
  3413  000A14  84F1               	bsf	intcon2,2,c	;volatile
  3414                           
  3415                           ;interrupt_manager.c: 73: IPR1bits.TMR1IP = 1;
  3416  000A16  809F               	bsf	3999,0,c	;volatile
  3417                           
  3418                           ;interrupt_manager.c: 76: INTCON3bits.INT1IP = 1;
  3419  000A18  8CF0               	bsf	intcon3,6,c	;volatile
  3420  000A1A  0012               	return		;funcret
  3421  000A1C                     __end_of_INTERRUPT_Initialize:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           prodh	equ	0xFF4
  3428                           prodl	equ	0xFF3
  3429                           intcon	equ	0xFF2
  3430                           intcon2	equ	0xFF1
  3431                           intcon3	equ	0xFF0
  3432                           postinc0	equ	0xFEE
  3433                           wreg	equ	0xFE8
  3434                           postinc2	equ	0xFDE
  3435                           postdec2	equ	0xFDD
  3436                           fsr2h	equ	0xFDA
  3437                           fsr2l	equ	0xFD9
  3438                           status	equ	0xFD8
  3439                           
  3440 ;; *************** function _EXT_INT_Initialize *****************
  3441 ;; Defined at:
  3442 ;;		line 139 in file "mcc_generated_files/ext_int.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    9
  3463 ;; This function calls:
  3464 ;;		_INT0_SetInterruptHandler
  3465 ;;		_INT1_SetInterruptHandler
  3466 ;; This function is called by:
  3467 ;;		_SYSTEM_Initialize
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text24
  3472  0006FE                     __ptext24:
  3473                           	opt stack 0
  3474  0006FE                     _EXT_INT_Initialize:
  3475                           	opt stack 20
  3476                           
  3477                           ;ext_int.c: 148: (INTCON3bits.INT1IF = 0);
  3478                           
  3479                           ;incstack = 0
  3480  0006FE  90F0               	bcf	intcon3,0,c	;volatile
  3481                           
  3482                           ;ext_int.c: 149: (INTCON2bits.INTEDG1 = 1);
  3483  000700  8AF1               	bsf	intcon2,5,c	;volatile
  3484                           
  3485                           ;ext_int.c: 151: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3486  000702  0EB0               	movlw	low _INT1_DefaultInterruptHandler
  3487  000704  0100               	movlb	0	; () banked
  3488  000706  6F78               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3489  000708  0E0A               	movlw	high _INT1_DefaultInterruptHandler
  3490  00070A  0100               	movlb	0	; () banked
  3491  00070C  6F79               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3492  00070E  EC35  F005         	call	_INT1_SetInterruptHandler	;wreg free
  3493                           
  3494                           ;ext_int.c: 152: (INTCON3bits.INT1IE = 1);
  3495  000712  86F0               	bsf	intcon3,3,c	;volatile
  3496                           
  3497                           ;ext_int.c: 161: (INTCONbits.INT0IF = 0);
  3498  000714  92F2               	bcf	intcon,1,c	;volatile
  3499                           
  3500                           ;ext_int.c: 162: (INTCON2bits.INTEDG0 = 1);
  3501  000716  8CF1               	bsf	intcon2,6,c	;volatile
  3502                           
  3503                           ;ext_int.c: 164: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  3504  000718  0EB2               	movlw	low _INT0_DefaultInterruptHandler
  3505  00071A  0100               	movlb	0	; () banked
  3506  00071C  6F78               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  3507  00071E  0E0A               	movlw	high _INT0_DefaultInterruptHandler
  3508  000720  0100               	movlb	0	; () banked
  3509  000722  6F79               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3510  000724  EC3A  F005         	call	_INT0_SetInterruptHandler	;wreg free
  3511                           
  3512                           ;ext_int.c: 165: (INTCONbits.INT0IE = 1);
  3513  000728  88F2               	bsf	intcon,4,c	;volatile
  3514  00072A  0012               	return		;funcret
  3515  00072C                     __end_of_EXT_INT_Initialize:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           prodh	equ	0xFF4
  3522                           prodl	equ	0xFF3
  3523                           intcon	equ	0xFF2
  3524                           intcon2	equ	0xFF1
  3525                           intcon3	equ	0xFF0
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           postinc2	equ	0xFDE
  3529                           postdec2	equ	0xFDD
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _INT1_SetInterruptHandler *****************
  3535 ;; Defined at:
  3536 ;;		line 76 in file "mcc_generated_files/ext_int.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3539 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    8
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_EXT_INT_Initialize
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text25
  3566  000A6A                     __ptext25:
  3567                           	opt stack 0
  3568  000A6A                     _INT1_SetInterruptHandler:
  3569                           	opt stack 20
  3570                           
  3571                           ;ext_int.c: 77: INT1_InterruptHandler = InterruptHandler;
  3572                           
  3573                           ;incstack = 0
  3574  000A6A  C078  F042         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3575  000A6E  C079  F043         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3576  000A72  0012               	return		;funcret
  3577  000A74                     __end_of_INT1_SetInterruptHandler:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           prodh	equ	0xFF4
  3584                           prodl	equ	0xFF3
  3585                           intcon	equ	0xFF2
  3586                           intcon2	equ	0xFF1
  3587                           intcon3	equ	0xFF0
  3588                           postinc0	equ	0xFEE
  3589                           wreg	equ	0xFE8
  3590                           postinc2	equ	0xFDE
  3591                           postdec2	equ	0xFDD
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function _INT0_SetInterruptHandler *****************
  3597 ;; Defined at:
  3598 ;;		line 118 in file "mcc_generated_files/ext_int.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3601 ;;		 -> INT0_DefaultInterruptHandler(1), 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3617 ;;Total ram usage:        2 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    8
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_EXT_INT_Initialize
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text26
  3628  000A74                     __ptext26:
  3629                           	opt stack 0
  3630  000A74                     _INT0_SetInterruptHandler:
  3631                           	opt stack 20
  3632                           
  3633                           ;ext_int.c: 119: INT0_InterruptHandler = InterruptHandler;
  3634                           
  3635                           ;incstack = 0
  3636  000A74  C078  F040         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3637  000A78  C079  F041         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3638  000A7C  0012               	return		;funcret
  3639  000A7E                     __end_of_INT0_SetInterruptHandler:
  3640                           	opt stack 0
  3641                           tblptru	equ	0xFF8
  3642                           tblptrh	equ	0xFF7
  3643                           tblptrl	equ	0xFF6
  3644                           tablat	equ	0xFF5
  3645                           prodh	equ	0xFF4
  3646                           prodl	equ	0xFF3
  3647                           intcon	equ	0xFF2
  3648                           intcon2	equ	0xFF1
  3649                           intcon3	equ	0xFF0
  3650                           postinc0	equ	0xFEE
  3651                           wreg	equ	0xFE8
  3652                           postinc2	equ	0xFDE
  3653                           postdec2	equ	0xFDD
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658 ;; *************** function _EUSART1_Initialize *****************
  3659 ;; Defined at:
  3660 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;		None
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;Total ram usage:        0 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    8
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_SYSTEM_Initialize
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text27
  3689  000996                     __ptext27:
  3690                           	opt stack 0
  3691  000996                     _EUSART1_Initialize:
  3692                           	opt stack 21
  3693                           
  3694                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  3695                           
  3696                           ;incstack = 0
  3697  000996  0E08               	movlw	8
  3698  000998  6EA7               	movwf	4007,c	;volatile
  3699                           
  3700                           ;eusart1.c: 63: RCSTA1 = 0x80;
  3701  00099A  0E80               	movlw	128
  3702  00099C  6EAB               	movwf	4011,c	;volatile
  3703                           
  3704                           ;eusart1.c: 66: TXSTA1 = 0x24;
  3705  00099E  0E24               	movlw	36
  3706  0009A0  6EAC               	movwf	4012,c	;volatile
  3707                           
  3708                           ;eusart1.c: 69: SPBRG1 = 0x22;
  3709  0009A2  0E22               	movlw	34
  3710  0009A4  6EAF               	movwf	4015,c	;volatile
  3711                           
  3712                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  3713  0009A6  0E00               	movlw	0
  3714  0009A8  6E7D               	movwf	3965,c	;volatile
  3715  0009AA  0012               	return		;funcret
  3716  0009AC                     __end_of_EUSART1_Initialize:
  3717                           	opt stack 0
  3718                           tblptru	equ	0xFF8
  3719                           tblptrh	equ	0xFF7
  3720                           tblptrl	equ	0xFF6
  3721                           tablat	equ	0xFF5
  3722                           prodh	equ	0xFF4
  3723                           prodl	equ	0xFF3
  3724                           intcon	equ	0xFF2
  3725                           intcon2	equ	0xFF1
  3726                           intcon3	equ	0xFF0
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           postinc2	equ	0xFDE
  3730                           postdec2	equ	0xFDD
  3731                           fsr2h	equ	0xFDA
  3732                           fsr2l	equ	0xFD9
  3733                           status	equ	0xFD8
  3734                           
  3735 ;; *************** function _EPWM1_Initialize *****************
  3736 ;; Defined at:
  3737 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      void 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;Total ram usage:        0 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    8
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_SYSTEM_Initialize
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text28
  3766  0008F8                     __ptext28:
  3767                           	opt stack 0
  3768  0008F8                     _EPWM1_Initialize:
  3769                           	opt stack 21
  3770                           
  3771                           ;epwm1.c: 68: CCP1CON = 0x7C;
  3772                           
  3773                           ;incstack = 0
  3774  0008F8  0E7C               	movlw	124
  3775  0008FA  6EBB               	movwf	4027,c	;volatile
  3776                           
  3777                           ;epwm1.c: 71: ECCP1AS = 0x00;
  3778  0008FC  0E00               	movlw	0
  3779  0008FE  6EBF               	movwf	4031,c	;volatile
  3780                           
  3781                           ;epwm1.c: 74: PSTR1CON = 0x0F;
  3782  000900  0E0F               	movlw	15
  3783  000902  6E9C               	movwf	3996,c	;volatile
  3784                           
  3785                           ;epwm1.c: 77: ECCP1DEL = 0x80;
  3786  000904  0E80               	movlw	128
  3787  000906  6EBE               	movwf	4030,c	;volatile
  3788                           
  3789                           ;epwm1.c: 80: CCPR1L = 0x65;
  3790  000908  0E65               	movlw	101
  3791  00090A  6EBC               	movwf	4028,c	;volatile
  3792                           
  3793                           ;epwm1.c: 83: CCPR1H = 0x00;
  3794  00090C  0E00               	movlw	0
  3795  00090E  6EBD               	movwf	4029,c	;volatile
  3796                           
  3797                           ;epwm1.c: 87: CCPTMRSbits.C1TSEL = 0x0;
  3798  000910  9099               	bcf	3993,0,c	;volatile
  3799  000912  0012               	return		;funcret
  3800  000914                     __end_of_EPWM1_Initialize:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           prodh	equ	0xFF4
  3807                           prodl	equ	0xFF3
  3808                           intcon	equ	0xFF2
  3809                           intcon2	equ	0xFF1
  3810                           intcon3	equ	0xFF0
  3811                           postinc0	equ	0xFEE
  3812                           wreg	equ	0xFE8
  3813                           postinc2	equ	0xFDE
  3814                           postdec2	equ	0xFDD
  3815                           fsr2h	equ	0xFDA
  3816                           fsr2l	equ	0xFD9
  3817                           status	equ	0xFD8
  3818                           
  3819 ;; *************** function _CCP5_Initialize *****************
  3820 ;; Defined at:
  3821 ;;		line 59 in file "mcc_generated_files/ccp5.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    8
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_SYSTEM_Initialize
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text29
  3850  00094C                     __ptext29:
  3851                           	opt stack 0
  3852  00094C                     _CCP5_Initialize:
  3853                           	opt stack 21
  3854                           
  3855                           ;ccp5.c: 64: CCP5CON = 0x05;
  3856                           
  3857                           ;incstack = 0
  3858  00094C  0E05               	movlw	5
  3859  00094E  010F               	movlb	15	; () banked
  3860  000950  6F47               	movwf	71,b	;volatile
  3861                           
  3862                           ;ccp5.c: 67: CCPR5L = 0x00;
  3863  000952  0E00               	movlw	0
  3864  000954  010F               	movlb	15	; () banked
  3865  000956  6F48               	movwf	72,b	;volatile
  3866                           
  3867                           ;ccp5.c: 70: CCPR5H = 0x00;
  3868  000958  0E00               	movlw	0
  3869  00095A  010F               	movlb	15	; () banked
  3870  00095C  6F49               	movwf	73,b	;volatile
  3871                           
  3872                           ; BSR set to: 15
  3873                           ;ccp5.c: 73: CCPTMRSbits.C5TSEL = 0x1;
  3874  00095E  8899               	bsf	3993,4,c	;volatile
  3875                           
  3876                           ; BSR set to: 15
  3877                           ;ccp5.c: 76: PIR4bits.CCP5IF = 0;
  3878  000960  94B7               	bcf	4023,2,c	;volatile
  3879                           
  3880                           ; BSR set to: 15
  3881                           ;ccp5.c: 79: PIE4bits.CCP5IE = 1;
  3882  000962  84B6               	bsf	4022,2,c	;volatile
  3883                           
  3884                           ; BSR set to: 15
  3885  000964  0012               	return		;funcret
  3886  000966                     __end_of_CCP5_Initialize:
  3887                           	opt stack 0
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           prodh	equ	0xFF4
  3893                           prodl	equ	0xFF3
  3894                           intcon	equ	0xFF2
  3895                           intcon2	equ	0xFF1
  3896                           intcon3	equ	0xFF0
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           postinc2	equ	0xFDE
  3900                           postdec2	equ	0xFDD
  3901                           fsr2h	equ	0xFDA
  3902                           fsr2l	equ	0xFD9
  3903                           status	equ	0xFD8
  3904                           
  3905 ;; *************** function _ADC_Initialize *****************
  3906 ;; Defined at:
  3907 ;;		line 58 in file "mcc_generated_files/adc.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    8
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_SYSTEM_Initialize
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text30
  3936  000966                     __ptext30:
  3937                           	opt stack 0
  3938  000966                     _ADC_Initialize:
  3939                           	opt stack 21
  3940                           
  3941                           ;adc.c: 63: ADCON0 = 0x01;
  3942                           
  3943                           ; BSR set to: 15
  3944                           ;incstack = 0
  3945  000966  0E01               	movlw	1
  3946  000968  6EC2               	movwf	4034,c	;volatile
  3947                           
  3948                           ;adc.c: 66: ADCON1 = 0x80;
  3949  00096A  0E80               	movlw	128
  3950  00096C  6EC1               	movwf	4033,c	;volatile
  3951                           
  3952                           ;adc.c: 69: ADCON2 = 0xB5;
  3953  00096E  0EB5               	movlw	181
  3954  000970  6EC0               	movwf	4032,c	;volatile
  3955                           
  3956                           ;adc.c: 72: ADRESH = 0x00;
  3957  000972  0E00               	movlw	0
  3958  000974  6EC4               	movwf	4036,c	;volatile
  3959                           
  3960                           ;adc.c: 75: ADRESL = 0x00;
  3961  000976  0E00               	movlw	0
  3962  000978  6EC3               	movwf	4035,c	;volatile
  3963                           
  3964                           ;adc.c: 78: PIE1bits.ADIE = 1;
  3965  00097A  8C9D               	bsf	3997,6,c	;volatile
  3966  00097C  0012               	return		;funcret
  3967  00097E                     __end_of_ADC_Initialize:
  3968                           	opt stack 0
  3969                           tblptru	equ	0xFF8
  3970                           tblptrh	equ	0xFF7
  3971                           tblptrl	equ	0xFF6
  3972                           tablat	equ	0xFF5
  3973                           prodh	equ	0xFF4
  3974                           prodl	equ	0xFF3
  3975                           intcon	equ	0xFF2
  3976                           intcon2	equ	0xFF1
  3977                           intcon3	equ	0xFF0
  3978                           postinc0	equ	0xFEE
  3979                           wreg	equ	0xFE8
  3980                           postinc2	equ	0xFDE
  3981                           postdec2	equ	0xFDD
  3982                           fsr2h	equ	0xFDA
  3983                           fsr2l	equ	0xFD9
  3984                           status	equ	0xFD8
  3985                           
  3986 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  3987 ;; Defined at:
  3988 ;;		line 81 in file "mcc_generated_files/interrupt_manager.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4004 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4005 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4006 ;;Total ram usage:       14 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    7
  4009 ;; This function calls:
  4010 ;;		_ADC_ISR
  4011 ;;		_CCP5_CaptureISR
  4012 ;;		_INT0_ISR
  4013 ;;		_INT1_ISR
  4014 ;;		_TMR0_ISR
  4015 ;;		_TMR1_ISR
  4016 ;;		_TMR3_ISR
  4017 ;; This function is called by:
  4018 ;;		Interrupt level 2
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	intcode
  4023  000008                     __pintcode:
  4024                           	opt stack 0
  4025  000008                     _INTERRUPT_InterruptManagerHigh:
  4026                           	opt stack 19
  4027                           
  4028                           ;incstack = 0
  4029  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4030  00000A  CFFA F015          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  4031  00000E  CFFB F016          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  4032  000012  CFE9 F017          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  4033  000016  CFEA F018          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  4034  00001A  CFE1 F019          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  4035  00001E  CFE2 F01A          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  4036  000022  CFD9 F01B          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  4037  000026  CFDA F01C          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  4038  00002A  CFF3 F01D          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  4039  00002E  CFF4 F01E          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  4040  000032  CFF6 F01F          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  4041  000036  CFF7 F020          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  4042  00003A  CFF8 F021          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  4043  00003E  CFF5 F022          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  4044                           
  4045                           ;interrupt_manager.c: 84: if(PIE4bits.CCP5IE == 1 && PIR4bits.CCP5IF == 1)
  4046  000042  B4B6               	btfsc	4022,2,c	;volatile
  4047  000044  A4B7               	btfss	4023,2,c	;volatile
  4048  000046  D003               	goto	i2l180
  4049                           
  4050                           ;interrupt_manager.c: 85: {
  4051                           ;interrupt_manager.c: 86: CCP5_CaptureISR();
  4052  000048  ECBF  F004         	call	_CCP5_CaptureISR	;wreg free
  4053                           
  4054                           ;interrupt_manager.c: 87: }
  4055  00004C  D023               	goto	i2l194
  4056  00004E                     i2l180:
  4057                           
  4058                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4059  00004E  BC9D               	btfsc	3997,6,c	;volatile
  4060  000050  AC9E               	btfss	3998,6,c	;volatile
  4061  000052  D003               	goto	i2l182
  4062                           
  4063                           ;interrupt_manager.c: 89: {
  4064                           ;interrupt_manager.c: 90: ADC_ISR();
  4065  000054  EC98  F001         	call	_ADC_ISR	;wreg free
  4066                           
  4067                           ;interrupt_manager.c: 91: }
  4068  000058  D01D               	goto	i2l194
  4069  00005A                     i2l182:
  4070                           
  4071                           ;interrupt_manager.c: 92: else if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
  4072  00005A  B2A0               	btfsc	4000,1,c	;volatile
  4073  00005C  A2A1               	btfss	4001,1,c	;volatile
  4074  00005E  D003               	goto	i2l184
  4075                           
  4076                           ;interrupt_manager.c: 93: {
  4077                           ;interrupt_manager.c: 94: TMR3_ISR();
  4078  000060  ECC0  F003         	call	_TMR3_ISR	;wreg free
  4079                           
  4080                           ;interrupt_manager.c: 95: }
  4081  000064  D017               	goto	i2l194
  4082  000066                     i2l184:
  4083                           
  4084                           ;interrupt_manager.c: 96: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  4085  000066  BAF2               	btfsc	intcon,5,c	;volatile
  4086  000068  A4F2               	btfss	intcon,2,c	;volatile
  4087  00006A  D003               	goto	i2l186
  4088                           
  4089                           ;interrupt_manager.c: 97: {
  4090                           ;interrupt_manager.c: 98: TMR0_ISR();
  4091  00006C  EC0D  F004         	call	_TMR0_ISR	;wreg free
  4092                           
  4093                           ;interrupt_manager.c: 99: }
  4094  000070  D011               	goto	i2l194
  4095  000072                     i2l186:
  4096                           
  4097                           ;interrupt_manager.c: 100: else if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  4098  000072  B8F2               	btfsc	intcon,4,c	;volatile
  4099  000074  A2F2               	btfss	intcon,1,c	;volatile
  4100  000076  D003               	goto	i2l188
  4101                           
  4102                           ;interrupt_manager.c: 101: {
  4103                           ;interrupt_manager.c: 102: INT0_ISR();
  4104  000078  EC98  F004         	call	_INT0_ISR	;wreg free
  4105                           
  4106                           ;interrupt_manager.c: 103: }
  4107  00007C  D00B               	goto	i2l194
  4108  00007E                     i2l188:
  4109                           
  4110                           ;interrupt_manager.c: 104: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4111  00007E  B09D               	btfsc	3997,0,c	;volatile
  4112  000080  A09E               	btfss	3998,0,c	;volatile
  4113  000082  D003               	goto	i2l190
  4114                           
  4115                           ;interrupt_manager.c: 105: {
  4116                           ;interrupt_manager.c: 106: TMR1_ISR();
  4117  000084  ECD4  F003         	call	_TMR1_ISR	;wreg free
  4118                           
  4119                           ;interrupt_manager.c: 107: }
  4120  000088  D005               	goto	i2l194
  4121  00008A                     i2l190:
  4122                           
  4123                           ;interrupt_manager.c: 108: else if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  4124  00008A  B6F0               	btfsc	intcon3,3,c	;volatile
  4125  00008C  A0F0               	btfss	intcon3,0,c	;volatile
  4126  00008E  D002               	goto	i2l194
  4127                           
  4128                           ;interrupt_manager.c: 109: {
  4129                           ;interrupt_manager.c: 110: INT1_ISR();
  4130  000090  EC8A  F004         	call	_INT1_ISR	;wreg free
  4131  000094                     i2l194:
  4132  000094  C022  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  4133  000098  C021  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  4134  00009C  C020  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  4135  0000A0  C01F  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  4136  0000A4  C01E  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  4137  0000A8  C01D  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  4138  0000AC  C01C  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  4139  0000B0  C01B  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  4140  0000B4  C01A  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  4141  0000B8  C019  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  4142  0000BC  C018  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  4143  0000C0  C017  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  4144  0000C4  C016  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  4145  0000C8  C015  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  4146  0000CC  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4147  0000CE  0011               	retfie		f
  4148  0000D0                     __end_of_INTERRUPT_InterruptManagerHigh:
  4149                           	opt stack 0
  4150                           pclatu	equ	0xFFB
  4151                           pclath	equ	0xFFA
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           intcon	equ	0xFF2
  4159                           intcon2	equ	0xFF1
  4160                           intcon3	equ	0xFF0
  4161                           postinc0	equ	0xFEE
  4162                           fsr0h	equ	0xFEA
  4163                           fsr0l	equ	0xFE9
  4164                           wreg	equ	0xFE8
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           postinc2	equ	0xFDE
  4168                           postdec2	equ	0xFDD
  4169                           fsr2h	equ	0xFDA
  4170                           fsr2l	equ	0xFD9
  4171                           status	equ	0xFD8
  4172                           
  4173 ;; *************** function _TMR3_ISR *****************
  4174 ;; Defined at:
  4175 ;;		line 162 in file "mcc_generated_files/tmr3.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;		None
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4193 ;;Total ram usage:        0 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    2
  4196 ;; This function calls:
  4197 ;;		_TMR3_CallBack
  4198 ;; This function is called by:
  4199 ;;		_INTERRUPT_InterruptManagerHigh
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text32
  4204  000780                     __ptext32:
  4205                           	opt stack 0
  4206  000780                     _TMR3_ISR:
  4207                           	opt stack 23
  4208                           
  4209                           ;tmr3.c: 164: static volatile unsigned int CountCallBack = 0;
  4210                           ;tmr3.c: 167: PIR2bits.TMR3IF = 0;
  4211                           
  4212                           ;incstack = 0
  4213  000780  92A1               	bcf	4001,1,c	;volatile
  4214                           
  4215                           ;tmr3.c: 169: TMR3H = (timer3ReloadVal >> 8);
  4216  000782  5039               	movf	_timer3ReloadVal+1,w,c	;volatile
  4217  000784  6EB3               	movwf	4019,c	;volatile
  4218                           
  4219                           ;tmr3.c: 170: TMR3L = timer3ReloadVal;
  4220  000786  C038  FFB2         	movff	_timer3ReloadVal,4018	;volatile
  4221                           
  4222                           ;tmr3.c: 173: if (++CountCallBack >= 1000)
  4223  00078A  4A23               	infsnz	TMR3_ISR@CountCallBack,f,c	;volatile
  4224  00078C  2A24               	incf	TMR3_ISR@CountCallBack+1,f,c	;volatile
  4225  00078E  0EE8               	movlw	232
  4226  000790  5C23               	subwf	TMR3_ISR@CountCallBack,w,c	;volatile
  4227  000792  0E03               	movlw	3
  4228  000794  5824               	subwfb	TMR3_ISR@CountCallBack+1,w,c	;volatile
  4229  000796  A0D8               	btfss	status,0,c
  4230  000798  0012               	return	
  4231                           
  4232                           ;tmr3.c: 174: {
  4233                           ;tmr3.c: 176: TMR3_CallBack();
  4234  00079A  ECFB  F003         	call	_TMR3_CallBack	;wreg free
  4235                           
  4236                           ;tmr3.c: 179: CountCallBack = 0;
  4237  00079E  0E00               	movlw	0
  4238  0007A0  6E24               	movwf	TMR3_ISR@CountCallBack+1,c	;volatile
  4239  0007A2  0E00               	movlw	0
  4240  0007A4  6E23               	movwf	TMR3_ISR@CountCallBack,c	;volatile
  4241  0007A6  0012               	return	
  4242  0007A8                     __end_of_TMR3_ISR:
  4243                           	opt stack 0
  4244                           pclatu	equ	0xFFB
  4245                           pclath	equ	0xFFA
  4246                           tblptru	equ	0xFF8
  4247                           tblptrh	equ	0xFF7
  4248                           tblptrl	equ	0xFF6
  4249                           tablat	equ	0xFF5
  4250                           prodh	equ	0xFF4
  4251                           prodl	equ	0xFF3
  4252                           intcon	equ	0xFF2
  4253                           intcon2	equ	0xFF1
  4254                           intcon3	equ	0xFF0
  4255                           postinc0	equ	0xFEE
  4256                           fsr0h	equ	0xFEA
  4257                           fsr0l	equ	0xFE9
  4258                           wreg	equ	0xFE8
  4259                           fsr1h	equ	0xFE2
  4260                           fsr1l	equ	0xFE1
  4261                           postinc2	equ	0xFDE
  4262                           postdec2	equ	0xFDD
  4263                           fsr2h	equ	0xFDA
  4264                           fsr2l	equ	0xFD9
  4265                           status	equ	0xFD8
  4266                           
  4267 ;; *************** function _TMR3_CallBack *****************
  4268 ;; Defined at:
  4269 ;;		line 183 in file "mcc_generated_files/tmr3.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    1
  4290 ;; This function calls:
  4291 ;;		Absolute function
  4292 ;;		_TMR3_DefaultInterruptHandler
  4293 ;; This function is called by:
  4294 ;;		_TMR3_ISR
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text33
  4299  0007F6                     __ptext33:
  4300                           	opt stack 0
  4301  0007F6                     _TMR3_CallBack:
  4302                           	opt stack 23
  4303                           
  4304                           ;tmr3.c: 186: if(TMR3_InterruptHandler)
  4305                           
  4306                           ;incstack = 0
  4307  0007F6  0100               	movlb	0	; () banked
  4308  0007F8  5190               	movf	_TMR3_InterruptHandler& (0+255),w,b
  4309  0007FA  0100               	movlb	0	; () banked
  4310  0007FC  1191               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  4311  0007FE  B4D8               	btfsc	status,2,c
  4312  000800  0012               	return	
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;tmr3.c: 187: {
  4316                           ;tmr3.c: 188: TMR3_InterruptHandler();
  4317  000802  D801               	call	i2u128_48
  4318  000804  0012               	return	
  4319  000806                     i2u128_48:
  4320  000806  0005               	push	
  4321  000808  6EFA               	movwf	pclath,c
  4322  00080A  0100               	movlb	0	; () banked
  4323  00080C  5190               	movf	_TMR3_InterruptHandler& (0+255),w,b
  4324  00080E  6EFD               	movwf	tosl,c
  4325  000810  5191               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  4326  000812  6EFE               	movwf	tosh,c
  4327  000814  6AFF               	clrf	tosu,c
  4328  000816  50FA               	movf	pclath,w,c
  4329  000818  0012               	return		;indir
  4330  00081A                     __end_of_TMR3_CallBack:
  4331                           	opt stack 0
  4332                           tosu	equ	0xFFF
  4333                           tosh	equ	0xFFE
  4334                           tosl	equ	0xFFD
  4335                           pclatu	equ	0xFFB
  4336                           pclath	equ	0xFFA
  4337                           tblptru	equ	0xFF8
  4338                           tblptrh	equ	0xFF7
  4339                           tblptrl	equ	0xFF6
  4340                           tablat	equ	0xFF5
  4341                           prodh	equ	0xFF4
  4342                           prodl	equ	0xFF3
  4343                           intcon	equ	0xFF2
  4344                           intcon2	equ	0xFF1
  4345                           intcon3	equ	0xFF0
  4346                           postinc0	equ	0xFEE
  4347                           fsr0h	equ	0xFEA
  4348                           fsr0l	equ	0xFE9
  4349                           wreg	equ	0xFE8
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           postinc2	equ	0xFDE
  4353                           postdec2	equ	0xFDD
  4354                           fsr2h	equ	0xFDA
  4355                           fsr2l	equ	0xFD9
  4356                           status	equ	0xFD8
  4357                           
  4358 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  4359 ;; Defined at:
  4360 ;;		line 196 in file "mcc_generated_files/tmr3.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      void 
  4367 ;; Registers used:
  4368 ;;		status,2, status,0
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4378 ;;Total ram usage:        0 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_TMR3_Initialize
  4384 ;;		_TMR3_CallBack
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text34
  4389  000AA4                     __ptext34:
  4390                           	opt stack 0
  4391  000AA4                     _TMR3_DefaultInterruptHandler:
  4392                           	opt stack 23
  4393                           
  4394                           ;tmr3.c: 197: count_s++;
  4395                           
  4396                           ;incstack = 0
  4397  000AA4  2A33               	incf	_count_s,f,c	;volatile
  4398  000AA6  0012               	return		;funcret
  4399  000AA8                     __end_of_TMR3_DefaultInterruptHandler:
  4400                           	opt stack 0
  4401                           tosu	equ	0xFFF
  4402                           tosh	equ	0xFFE
  4403                           tosl	equ	0xFFD
  4404                           pclatu	equ	0xFFB
  4405                           pclath	equ	0xFFA
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           intcon	equ	0xFF2
  4413                           intcon2	equ	0xFF1
  4414                           intcon3	equ	0xFF0
  4415                           postinc0	equ	0xFEE
  4416                           fsr0h	equ	0xFEA
  4417                           fsr0l	equ	0xFE9
  4418                           wreg	equ	0xFE8
  4419                           fsr1h	equ	0xFE2
  4420                           fsr1l	equ	0xFE1
  4421                           postinc2	equ	0xFDE
  4422                           postdec2	equ	0xFDD
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _TMR1_ISR *****************
  4428 ;; Defined at:
  4429 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    3
  4450 ;; This function calls:
  4451 ;;		_TMR1_CallBack
  4452 ;; This function is called by:
  4453 ;;		_INTERRUPT_InterruptManagerHigh
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text35
  4458  0007A8                     __ptext35:
  4459                           	opt stack 0
  4460  0007A8                     _TMR1_ISR:
  4461                           	opt stack 22
  4462                           
  4463                           ;tmr1.c: 162: static volatile unsigned int CountCallBack = 0;
  4464                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  4465                           
  4466                           ;incstack = 0
  4467  0007A8  909E               	bcf	3998,0,c	;volatile
  4468                           
  4469                           ;tmr1.c: 167: TMR1H = (timer1ReloadVal >> 8);
  4470  0007AA  503F               	movf	_timer1ReloadVal+1,w,c	;volatile
  4471  0007AC  6ECF               	movwf	4047,c	;volatile
  4472                           
  4473                           ;tmr1.c: 168: TMR1L = timer1ReloadVal;
  4474  0007AE  C03E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4475                           
  4476                           ;tmr1.c: 171: if (++CountCallBack >= 5)
  4477  0007B2  4A27               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  4478  0007B4  2A28               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  4479  0007B6  5028               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4480  0007B8  E104               	bnz	i2u143_40
  4481  0007BA  0E05               	movlw	5
  4482  0007BC  5C27               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
  4483  0007BE  A0D8               	btfss	status,0,c
  4484  0007C0  0012               	return	
  4485  0007C2                     i2u143_40:
  4486                           
  4487                           ;tmr1.c: 172: {
  4488                           ;tmr1.c: 174: TMR1_CallBack();
  4489  0007C2  EC40  F004         	call	_TMR1_CallBack	;wreg free
  4490                           
  4491                           ;tmr1.c: 177: CountCallBack = 0;
  4492  0007C6  0E00               	movlw	0
  4493  0007C8  6E28               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  4494  0007CA  0E00               	movlw	0
  4495  0007CC  6E27               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  4496  0007CE  0012               	return	
  4497  0007D0                     __end_of_TMR1_ISR:
  4498                           	opt stack 0
  4499                           tosu	equ	0xFFF
  4500                           tosh	equ	0xFFE
  4501                           tosl	equ	0xFFD
  4502                           pclatu	equ	0xFFB
  4503                           pclath	equ	0xFFA
  4504                           tblptru	equ	0xFF8
  4505                           tblptrh	equ	0xFF7
  4506                           tblptrl	equ	0xFF6
  4507                           tablat	equ	0xFF5
  4508                           prodh	equ	0xFF4
  4509                           prodl	equ	0xFF3
  4510                           intcon	equ	0xFF2
  4511                           intcon2	equ	0xFF1
  4512                           intcon3	equ	0xFF0
  4513                           postinc0	equ	0xFEE
  4514                           fsr0h	equ	0xFEA
  4515                           fsr0l	equ	0xFE9
  4516                           wreg	equ	0xFE8
  4517                           fsr1h	equ	0xFE2
  4518                           fsr1l	equ	0xFE1
  4519                           postinc2	equ	0xFDE
  4520                           postdec2	equ	0xFDD
  4521                           fsr2h	equ	0xFDA
  4522                           fsr2l	equ	0xFD9
  4523                           status	equ	0xFD8
  4524                           
  4525 ;; *************** function _TMR1_CallBack *****************
  4526 ;; Defined at:
  4527 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;Total ram usage:        0 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    2
  4548 ;; This function calls:
  4549 ;;		Absolute function
  4550 ;;		_TMR1_DefaultInterruptHandler
  4551 ;; This function is called by:
  4552 ;;		_TMR1_ISR
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text36
  4557  000880                     __ptext36:
  4558                           	opt stack 0
  4559  000880                     _TMR1_CallBack:
  4560                           	opt stack 22
  4561                           
  4562                           ;tmr1.c: 184: if(TMR1_InterruptHandler)
  4563                           
  4564                           ;incstack = 0
  4565  000880  503C               	movf	_TMR1_InterruptHandler,w,c
  4566  000882  103D               	iorwf	_TMR1_InterruptHandler+1,w,c
  4567  000884  B4D8               	btfsc	status,2,c
  4568  000886  0012               	return	
  4569                           
  4570                           ;tmr1.c: 185: {
  4571                           ;tmr1.c: 186: TMR1_InterruptHandler();
  4572  000888  D801               	call	i2u124_48
  4573  00088A  0012               	return	
  4574  00088C                     i2u124_48:
  4575  00088C  0005               	push	
  4576  00088E  6EFA               	movwf	pclath,c
  4577  000890  503C               	movf	_TMR1_InterruptHandler,w,c
  4578  000892  6EFD               	movwf	tosl,c
  4579  000894  503D               	movf	_TMR1_InterruptHandler+1,w,c
  4580  000896  6EFE               	movwf	tosh,c
  4581  000898  6AFF               	clrf	tosu,c
  4582  00089A  50FA               	movf	pclath,w,c
  4583  00089C  0012               	return		;indir
  4584  00089E                     __end_of_TMR1_CallBack:
  4585                           	opt stack 0
  4586                           tosu	equ	0xFFF
  4587                           tosh	equ	0xFFE
  4588                           tosl	equ	0xFFD
  4589                           pclatu	equ	0xFFB
  4590                           pclath	equ	0xFFA
  4591                           tblptru	equ	0xFF8
  4592                           tblptrh	equ	0xFF7
  4593                           tblptrl	equ	0xFF6
  4594                           tablat	equ	0xFF5
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           intcon	equ	0xFF2
  4598                           intcon2	equ	0xFF1
  4599                           intcon3	equ	0xFF0
  4600                           postinc0	equ	0xFEE
  4601                           fsr0h	equ	0xFEA
  4602                           fsr0l	equ	0xFE9
  4603                           wreg	equ	0xFE8
  4604                           fsr1h	equ	0xFE2
  4605                           fsr1l	equ	0xFE1
  4606                           postinc2	equ	0xFDE
  4607                           postdec2	equ	0xFDD
  4608                           fsr2h	equ	0xFDA
  4609                           fsr2l	equ	0xFD9
  4610                           status	equ	0xFD8
  4611                           
  4612 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4613 ;; Defined at:
  4614 ;;		line 194 in file "mcc_generated_files/tmr1.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    1
  4635 ;; This function calls:
  4636 ;;		_qsm_get_state
  4637 ;; This function is called by:
  4638 ;;		_TMR1_Initialize
  4639 ;;		_TMR1_CallBack
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text37
  4644  00026A                     __ptext37:
  4645                           	opt stack 0
  4646  00026A                     _TMR1_DefaultInterruptHandler:
  4647                           	opt stack 22
  4648                           
  4649                           ;tmr1.c: 195: switch(qsm_get_state()){
  4650                           
  4651                           ;incstack = 0
  4652  00026A  D044               	goto	i2l2807
  4653  00026C                     i2l2773:
  4654  00026C  0E07               	movlw	7
  4655  00026E  6E8D               	movwf	3981,c	;volatile
  4656                           
  4657                           ;tmr1.c: 197: break;
  4658  000270  0012               	return	
  4659  000272                     i2l394:
  4660  000272  B08D               	btfsc	3981,0,c	;volatile
  4661  000274  D002               	goto	i2u106_40
  4662  000276  808D               	bsf	3981,0,c	;volatile
  4663  000278  D001               	goto	i2u107_45
  4664  00027A                     i2u106_40:
  4665  00027A  908D               	bcf	3981,0,c	;volatile
  4666  00027C                     i2u107_45:
  4667                           
  4668                           ;tmr1.c: 200: LATE1 = ~LATE1;
  4669  00027C  B28D               	btfsc	3981,1,c	;volatile
  4670  00027E  D002               	goto	i2u108_40
  4671  000280  828D               	bsf	3981,1,c	;volatile
  4672  000282  D001               	goto	i2u109_45
  4673  000284                     i2u108_40:
  4674  000284  928D               	bcf	3981,1,c	;volatile
  4675  000286                     i2u109_45:
  4676                           
  4677                           ;tmr1.c: 201: LATE2 = ~LATE2;
  4678  000286  B48D               	btfsc	3981,2,c	;volatile
  4679  000288  D002               	goto	i2u110_40
  4680  00028A  848D               	bsf	3981,2,c	;volatile
  4681  00028C  0012               	return	
  4682  00028E                     i2u110_40:
  4683  00028E  948D               	bcf	3981,2,c	;volatile
  4684                           
  4685                           ;tmr1.c: 202: break;
  4686  000290  0012               	return	
  4687  000292                     i2l2775:
  4688  000292  0E01               	movlw	1
  4689  000294  6E8D               	movwf	3981,c	;volatile
  4690                           
  4691                           ;tmr1.c: 205: break;
  4692  000296  0012               	return	
  4693  000298                     i2l2777:
  4694  000298  0E02               	movlw	2
  4695  00029A  6E8D               	movwf	3981,c	;volatile
  4696                           
  4697                           ;tmr1.c: 208: break;
  4698  00029C  0012               	return	
  4699  00029E                     i2l2779:
  4700  00029E  0E01               	movlw	1
  4701  0002A0  6E8D               	movwf	3981,c	;volatile
  4702                           
  4703                           ;tmr1.c: 211: break;
  4704  0002A2  0012               	return	
  4705  0002A4                     i2l2781:
  4706  0002A4  0E03               	movlw	3
  4707  0002A6  6E8D               	movwf	3981,c	;volatile
  4708                           
  4709                           ;tmr1.c: 214: break;
  4710  0002A8  0012               	return	
  4711  0002AA                     i2l2783:
  4712  0002AA  0E07               	movlw	7
  4713  0002AC  6E8D               	movwf	3981,c	;volatile
  4714                           
  4715                           ;tmr1.c: 217: break;
  4716  0002AE  0012               	return	
  4717  0002B0                     i2l2785:
  4718  0002B0  0E04               	movlw	4
  4719  0002B2  188D               	xorwf	3981,w,c	;volatile
  4720  0002B4  A4D8               	btfss	status,2,c
  4721  0002B6  D003               	goto	i2l2789
  4722                           
  4723                           ;tmr1.c: 220: LATE = 0x02;
  4724  0002B8  0E02               	movlw	2
  4725  0002BA  6E8D               	movwf	3981,c	;volatile
  4726                           
  4727                           ;tmr1.c: 221: }
  4728  0002BC  0012               	return	
  4729  0002BE                     i2l2789:
  4730                           
  4731                           ;tmr1.c: 222: else if (LATE == 0x02){
  4732  0002BE  0E02               	movlw	2
  4733  0002C0  188D               	xorwf	3981,w,c	;volatile
  4734  0002C2  A4D8               	btfss	status,2,c
  4735  0002C4  D003               	goto	i2l2793
  4736                           
  4737                           ;tmr1.c: 223: LATE = 0x01;
  4738  0002C6  0E01               	movlw	1
  4739  0002C8  6E8D               	movwf	3981,c	;volatile
  4740                           
  4741                           ;tmr1.c: 224: }
  4742  0002CA  0012               	return	
  4743  0002CC                     i2l2793:
  4744                           
  4745                           ;tmr1.c: 225: else {
  4746                           ;tmr1.c: 226: LATE = 0x04;
  4747  0002CC  0E04               	movlw	4
  4748  0002CE  6E8D               	movwf	3981,c	;volatile
  4749                           
  4750                           ;tmr1.c: 227: }
  4751                           ;tmr1.c: 228: break;
  4752  0002D0  0012               	return	
  4753  0002D2                     i2l2795:
  4754  0002D2  0E04               	movlw	4
  4755  0002D4  188D               	xorwf	3981,w,c	;volatile
  4756  0002D6  A4D8               	btfss	status,2,c
  4757  0002D8  D003               	goto	i2l2799
  4758                           
  4759                           ;tmr1.c: 231: LATE = 0x02;
  4760  0002DA  0E02               	movlw	2
  4761  0002DC  6E8D               	movwf	3981,c	;volatile
  4762                           
  4763                           ;tmr1.c: 232: }
  4764  0002DE  0012               	return	
  4765  0002E0                     i2l2799:
  4766                           
  4767                           ;tmr1.c: 233: else if (LATE == 0x02){
  4768  0002E0  0E02               	movlw	2
  4769  0002E2  188D               	xorwf	3981,w,c	;volatile
  4770  0002E4  A4D8               	btfss	status,2,c
  4771  0002E6  D003               	goto	i2l2803
  4772                           
  4773                           ;tmr1.c: 234: LATE = 0x01;
  4774  0002E8  0E01               	movlw	1
  4775  0002EA  6E8D               	movwf	3981,c	;volatile
  4776                           
  4777                           ;tmr1.c: 235: }
  4778  0002EC  0012               	return	
  4779  0002EE                     i2l2803:
  4780                           
  4781                           ;tmr1.c: 236: else {
  4782                           ;tmr1.c: 237: LATE = 0x04;
  4783  0002EE  0E04               	movlw	4
  4784  0002F0  6E8D               	movwf	3981,c	;volatile
  4785                           
  4786                           ;tmr1.c: 241: }
  4787                           
  4788                           ;tmr1.c: 238: }
  4789                           ;tmr1.c: 239: break;
  4790  0002F2  0012               	return	
  4791  0002F4                     i2l2807:
  4792  0002F4  EC56  F005         	call	_qsm_get_state	;wreg free
  4793                           
  4794                           ; Switch size 1, requested type "space"
  4795                           ; Number of cases is 9, Range of values is 0 to 9
  4796                           ; switch strategies available:
  4797                           ; Name         Instructions Cycles
  4798                           ; simple_byte           28    15 (average)
  4799                           ;	Chosen strategy is simple_byte
  4800  0002F8  0A00               	xorlw	0	; case 0
  4801  0002FA  B4D8               	btfsc	status,2,c
  4802  0002FC  D7B7               	goto	i2l2773
  4803  0002FE  0A01               	xorlw	1	; case 1
  4804  000300  B4D8               	btfsc	status,2,c
  4805  000302  D7C7               	goto	i2l2775
  4806  000304  0A03               	xorlw	3	; case 2
  4807  000306  B4D8               	btfsc	status,2,c
  4808  000308  D7C7               	goto	i2l2777
  4809  00030A  0A06               	xorlw	6	; case 4
  4810  00030C  B4D8               	btfsc	status,2,c
  4811  00030E  D7C7               	goto	i2l2779
  4812  000310  0A01               	xorlw	1	; case 5
  4813  000312  B4D8               	btfsc	status,2,c
  4814  000314  D7C7               	goto	i2l2781
  4815  000316  0A03               	xorlw	3	; case 6
  4816  000318  B4D8               	btfsc	status,2,c
  4817  00031A  D7C7               	goto	i2l2783
  4818  00031C  0A01               	xorlw	1	; case 7
  4819  00031E  B4D8               	btfsc	status,2,c
  4820  000320  D7C7               	goto	i2l2785
  4821  000322  0A0F               	xorlw	15	; case 8
  4822  000324  B4D8               	btfsc	status,2,c
  4823  000326  D7D5               	goto	i2l2795
  4824  000328  0A01               	xorlw	1	; case 9
  4825  00032A  A4D8               	btfss	status,2,c
  4826  00032C  0012               	return	
  4827  00032E  D7A1               	goto	i2l394
  4828  000330                     __end_of_TMR1_DefaultInterruptHandler:
  4829                           	opt stack 0
  4830                           tosu	equ	0xFFF
  4831                           tosh	equ	0xFFE
  4832                           tosl	equ	0xFFD
  4833                           pclatu	equ	0xFFB
  4834                           pclath	equ	0xFFA
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           prodh	equ	0xFF4
  4840                           prodl	equ	0xFF3
  4841                           intcon	equ	0xFF2
  4842                           intcon2	equ	0xFF1
  4843                           intcon3	equ	0xFF0
  4844                           postinc0	equ	0xFEE
  4845                           fsr0h	equ	0xFEA
  4846                           fsr0l	equ	0xFE9
  4847                           wreg	equ	0xFE8
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           postinc2	equ	0xFDE
  4851                           postdec2	equ	0xFDD
  4852                           fsr2h	equ	0xFDA
  4853                           fsr2l	equ	0xFD9
  4854                           status	equ	0xFD8
  4855                           
  4856 ;; *************** function _TMR0_ISR *****************
  4857 ;; Defined at:
  4858 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;Total ram usage:        0 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    6
  4879 ;; This function calls:
  4880 ;;		_TMR0_CallBack
  4881 ;; This function is called by:
  4882 ;;		_INTERRUPT_InterruptManagerHigh
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text38
  4887  00081A                     __ptext38:
  4888                           	opt stack 0
  4889  00081A                     _TMR0_ISR:
  4890                           	opt stack 19
  4891                           
  4892                           ;tmr0.c: 135: static volatile uint16_t CountCallBack = 0;
  4893                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  4894                           
  4895                           ;incstack = 0
  4896  00081A  94F2               	bcf	intcon,2,c	;volatile
  4897                           
  4898                           ;tmr0.c: 141: TMR0L = timer0ReloadVal;
  4899  00081C  C044  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4900                           
  4901                           ;tmr0.c: 144: if (++CountCallBack >= 60000)
  4902  000820  4A25               	infsnz	TMR0_ISR@CountCallBack,f,c	;volatile
  4903  000822  2A26               	incf	TMR0_ISR@CountCallBack+1,f,c	;volatile
  4904  000824  0E60               	movlw	96
  4905  000826  5C25               	subwf	TMR0_ISR@CountCallBack,w,c	;volatile
  4906  000828  0EEA               	movlw	234
  4907  00082A  5826               	subwfb	TMR0_ISR@CountCallBack+1,w,c	;volatile
  4908  00082C  A0D8               	btfss	status,0,c
  4909  00082E  0012               	return	
  4910                           
  4911                           ;tmr0.c: 145: {
  4912                           ;tmr0.c: 147: TMR0_CallBack();
  4913  000830  EC4F  F004         	call	_TMR0_CallBack	;wreg free
  4914                           
  4915                           ;tmr0.c: 150: CountCallBack = 0;
  4916  000834  0E00               	movlw	0
  4917  000836  6E26               	movwf	TMR0_ISR@CountCallBack+1,c	;volatile
  4918  000838  0E00               	movlw	0
  4919  00083A  6E25               	movwf	TMR0_ISR@CountCallBack,c	;volatile
  4920  00083C  0012               	return	
  4921  00083E                     __end_of_TMR0_ISR:
  4922                           	opt stack 0
  4923                           tosu	equ	0xFFF
  4924                           tosh	equ	0xFFE
  4925                           tosl	equ	0xFFD
  4926                           pclatu	equ	0xFFB
  4927                           pclath	equ	0xFFA
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           intcon2	equ	0xFF1
  4936                           intcon3	equ	0xFF0
  4937                           postinc0	equ	0xFEE
  4938                           fsr0h	equ	0xFEA
  4939                           fsr0l	equ	0xFE9
  4940                           wreg	equ	0xFE8
  4941                           fsr1h	equ	0xFE2
  4942                           fsr1l	equ	0xFE1
  4943                           postinc2	equ	0xFDE
  4944                           postdec2	equ	0xFDD
  4945                           fsr2h	equ	0xFDA
  4946                           fsr2l	equ	0xFD9
  4947                           status	equ	0xFD8
  4948                           
  4949 ;; *************** function _TMR0_CallBack *****************
  4950 ;; Defined at:
  4951 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4969 ;;Total ram usage:        0 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    5
  4972 ;; This function calls:
  4973 ;;		Absolute function
  4974 ;;		_TMR0_DefaultInterruptHandler
  4975 ;; This function is called by:
  4976 ;;		_TMR0_ISR
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text39
  4981  00089E                     __ptext39:
  4982                           	opt stack 0
  4983  00089E                     _TMR0_CallBack:
  4984                           	opt stack 19
  4985                           
  4986                           ;tmr0.c: 160: if(TMR0_InterruptHandler)
  4987                           
  4988                           ;incstack = 0
  4989  00089E  503A               	movf	_TMR0_InterruptHandler,w,c
  4990  0008A0  103B               	iorwf	_TMR0_InterruptHandler+1,w,c
  4991  0008A2  B4D8               	btfsc	status,2,c
  4992  0008A4  0012               	return	
  4993                           
  4994                           ;tmr0.c: 161: {
  4995                           ;tmr0.c: 162: TMR0_InterruptHandler();
  4996  0008A6  D801               	call	i2u126_48
  4997  0008A8  0012               	return	
  4998  0008AA                     i2u126_48:
  4999  0008AA  0005               	push	
  5000  0008AC  6EFA               	movwf	pclath,c
  5001  0008AE  503A               	movf	_TMR0_InterruptHandler,w,c
  5002  0008B0  6EFD               	movwf	tosl,c
  5003  0008B2  503B               	movf	_TMR0_InterruptHandler+1,w,c
  5004  0008B4  6EFE               	movwf	tosh,c
  5005  0008B6  6AFF               	clrf	tosu,c
  5006  0008B8  50FA               	movf	pclath,w,c
  5007  0008BA  0012               	return		;indir
  5008  0008BC                     __end_of_TMR0_CallBack:
  5009                           	opt stack 0
  5010                           tosu	equ	0xFFF
  5011                           tosh	equ	0xFFE
  5012                           tosl	equ	0xFFD
  5013                           pclatu	equ	0xFFB
  5014                           pclath	equ	0xFFA
  5015                           tblptru	equ	0xFF8
  5016                           tblptrh	equ	0xFF7
  5017                           tblptrl	equ	0xFF6
  5018                           tablat	equ	0xFF5
  5019                           prodh	equ	0xFF4
  5020                           prodl	equ	0xFF3
  5021                           intcon	equ	0xFF2
  5022                           intcon2	equ	0xFF1
  5023                           intcon3	equ	0xFF0
  5024                           postinc0	equ	0xFEE
  5025                           fsr0h	equ	0xFEA
  5026                           fsr0l	equ	0xFE9
  5027                           wreg	equ	0xFE8
  5028                           fsr1h	equ	0xFE2
  5029                           fsr1l	equ	0xFE1
  5030                           postinc2	equ	0xFDE
  5031                           postdec2	equ	0xFDD
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5037 ;; Defined at:
  5038 ;;		line 170 in file "mcc_generated_files/tmr0.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    4
  5059 ;; This function calls:
  5060 ;;		_TMR0_Reload
  5061 ;;		_qsm_post_event
  5062 ;;		_set_count_m
  5063 ;;		i2_TMR0_StopTimer
  5064 ;; This function is called by:
  5065 ;;		_TMR0_Initialize
  5066 ;;		_TMR0_CallBack
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text40
  5071  00083E                     __ptext40:
  5072                           	opt stack 0
  5073  00083E                     _TMR0_DefaultInterruptHandler:
  5074                           	opt stack 19
  5075                           
  5076                           ;tmr0.c: 171: if(++count_m >= duration_m){
  5077                           
  5078                           ;incstack = 0
  5079  00083E  2A36               	incf	_count_m,f,c	;volatile
  5080  000840  5035               	movf	_duration_m,w,c	;volatile
  5081  000842  5C36               	subwf	_count_m,w,c	;volatile
  5082  000844  A0D8               	btfss	status,0,c
  5083  000846  0012               	return	
  5084                           
  5085                           ;tmr0.c: 172: TMR0_StopTimer();
  5086  000848  EC54  F005         	call	i2_TMR0_StopTimer	;wreg free
  5087                           
  5088                           ;tmr0.c: 173: TMR0_Reload();
  5089  00084C  EC47  F005         	call	_TMR0_Reload	;wreg free
  5090                           
  5091                           ;tmr0.c: 174: set_count_m(0);
  5092  000850  0E00               	movlw	0
  5093  000852  EC3F  F005         	call	_set_count_m
  5094                           
  5095                           ;tmr0.c: 175: out = 1;
  5096  000856  0E01               	movlw	1
  5097  000858  6E34               	movwf	_out,c	;volatile
  5098                           
  5099                           ;tmr0.c: 176: qsm_post_event(WM_EVENT_TIMER_DONE);
  5100  00085A  0E06               	movlw	6
  5101  00085C  ECE0  F004         	call	_qsm_post_event
  5102  000860  0012               	return	
  5103  000862                     __end_of_TMR0_DefaultInterruptHandler:
  5104                           	opt stack 0
  5105                           tosu	equ	0xFFF
  5106                           tosh	equ	0xFFE
  5107                           tosl	equ	0xFFD
  5108                           pclatu	equ	0xFFB
  5109                           pclath	equ	0xFFA
  5110                           tblptru	equ	0xFF8
  5111                           tblptrh	equ	0xFF7
  5112                           tblptrl	equ	0xFF6
  5113                           tablat	equ	0xFF5
  5114                           prodh	equ	0xFF4
  5115                           prodl	equ	0xFF3
  5116                           intcon	equ	0xFF2
  5117                           intcon2	equ	0xFF1
  5118                           intcon3	equ	0xFF0
  5119                           postinc0	equ	0xFEE
  5120                           fsr0h	equ	0xFEA
  5121                           fsr0l	equ	0xFE9
  5122                           wreg	equ	0xFE8
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           postinc2	equ	0xFDE
  5126                           postdec2	equ	0xFDD
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function i2_TMR0_StopTimer *****************
  5132 ;; Defined at:
  5133 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		None
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_TMR0_DefaultInterruptHandler
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text41
  5161  000AA8                     __ptext41:
  5162                           	opt stack 0
  5163  000AA8                     i2_TMR0_StopTimer:
  5164                           	opt stack 22
  5165                           
  5166                           ;tmr0.c: 107: T0CONbits.TMR0ON = 0;
  5167                           
  5168                           ;incstack = 0
  5169  000AA8  9ED5               	bcf	4053,7,c	;volatile
  5170  000AAA  0012               	return		;funcret
  5171  000AAC                     __end_ofi2_TMR0_StopTimer:
  5172                           	opt stack 0
  5173                           tosu	equ	0xFFF
  5174                           tosh	equ	0xFFE
  5175                           tosl	equ	0xFFD
  5176                           pclatu	equ	0xFFB
  5177                           pclath	equ	0xFFA
  5178                           tblptru	equ	0xFF8
  5179                           tblptrh	equ	0xFF7
  5180                           tblptrl	equ	0xFF6
  5181                           tablat	equ	0xFF5
  5182                           prodh	equ	0xFF4
  5183                           prodl	equ	0xFF3
  5184                           intcon	equ	0xFF2
  5185                           intcon2	equ	0xFF1
  5186                           intcon3	equ	0xFF0
  5187                           postinc0	equ	0xFEE
  5188                           fsr0h	equ	0xFEA
  5189                           fsr0l	equ	0xFE9
  5190                           wreg	equ	0xFE8
  5191                           fsr1h	equ	0xFE2
  5192                           fsr1l	equ	0xFE1
  5193                           postinc2	equ	0xFDE
  5194                           postdec2	equ	0xFDD
  5195                           fsr2h	equ	0xFDA
  5196                           fsr2l	equ	0xFD9
  5197                           status	equ	0xFD8
  5198                           
  5199 ;; *************** function _set_count_m *****************
  5200 ;; Defined at:
  5201 ;;		line 185 in file "mcc_generated_files/tmr0.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  val             1    wreg     unsigned char 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  val             1    0[COMRAM] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5219 ;;Total ram usage:        1 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_TMR0_DefaultInterruptHandler
  5225 ;;		_WM_HANDLER_INIT
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text42
  5230  000A7E                     __ptext42:
  5231                           	opt stack 0
  5232  000A7E                     _set_count_m:
  5233                           	opt stack 22
  5234                           
  5235                           ;incstack = 0
  5236                           ;set_count_m@val stored from wreg
  5237  000A7E  6E01               	movwf	set_count_m@val,c
  5238                           
  5239                           ;tmr0.c: 186: count_m = val;
  5240  000A80  C001  F036         	movff	set_count_m@val,_count_m	;volatile
  5241  000A84  0012               	return		;funcret
  5242  000A86                     __end_of_set_count_m:
  5243                           	opt stack 0
  5244                           tosu	equ	0xFFF
  5245                           tosh	equ	0xFFE
  5246                           tosl	equ	0xFFD
  5247                           pclatu	equ	0xFFB
  5248                           pclath	equ	0xFFA
  5249                           tblptru	equ	0xFF8
  5250                           tblptrh	equ	0xFF7
  5251                           tblptrl	equ	0xFF6
  5252                           tablat	equ	0xFF5
  5253                           prodh	equ	0xFF4
  5254                           prodl	equ	0xFF3
  5255                           intcon	equ	0xFF2
  5256                           intcon2	equ	0xFF1
  5257                           intcon3	equ	0xFF0
  5258                           postinc0	equ	0xFEE
  5259                           fsr0h	equ	0xFEA
  5260                           fsr0l	equ	0xFE9
  5261                           wreg	equ	0xFE8
  5262                           fsr1h	equ	0xFE2
  5263                           fsr1l	equ	0xFE1
  5264                           postinc2	equ	0xFDE
  5265                           postdec2	equ	0xFDD
  5266                           fsr2h	equ	0xFDA
  5267                           fsr2l	equ	0xFD9
  5268                           status	equ	0xFD8
  5269                           
  5270 ;; *************** function _TMR0_Reload *****************
  5271 ;; Defined at:
  5272 ;;		line 126 in file "mcc_generated_files/tmr0.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		None
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5290 ;;Total ram usage:        0 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_TMR0_DefaultInterruptHandler
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text43
  5300  000A8E                     __ptext43:
  5301                           	opt stack 0
  5302  000A8E                     _TMR0_Reload:
  5303                           	opt stack 22
  5304                           
  5305                           ;tmr0.c: 129: TMR0L = timer0ReloadVal;
  5306                           
  5307                           ;incstack = 0
  5308  000A8E  C044  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5309  000A92  0012               	return		;funcret
  5310  000A94                     __end_of_TMR0_Reload:
  5311                           	opt stack 0
  5312                           tosu	equ	0xFFF
  5313                           tosh	equ	0xFFE
  5314                           tosl	equ	0xFFD
  5315                           pclatu	equ	0xFFB
  5316                           pclath	equ	0xFFA
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           intcon	equ	0xFF2
  5324                           intcon2	equ	0xFF1
  5325                           intcon3	equ	0xFF0
  5326                           postinc0	equ	0xFEE
  5327                           fsr0h	equ	0xFEA
  5328                           fsr0l	equ	0xFE9
  5329                           wreg	equ	0xFE8
  5330                           fsr1h	equ	0xFE2
  5331                           fsr1l	equ	0xFE1
  5332                           postinc2	equ	0xFDE
  5333                           postdec2	equ	0xFDD
  5334                           fsr2h	equ	0xFDA
  5335                           fsr2l	equ	0xFD9
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function _INT1_ISR *****************
  5339 ;; Defined at:
  5340 ;;		line 48 in file "mcc_generated_files/ext_int.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;Total ram usage:        1 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    4
  5361 ;; This function calls:
  5362 ;;		_INT1_CallBack
  5363 ;;		_qsm_post_event
  5364 ;; This function is called by:
  5365 ;;		_INTERRUPT_InterruptManagerHigh
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text44
  5370  000914                     __ptext44:
  5371                           	opt stack 0
  5372  000914                     _INT1_ISR:
  5373                           	opt stack 21
  5374                           
  5375                           ;ext_int.c: 51: _delay((unsigned long)((10)*(16000000/4000.0)));
  5376                           
  5377                           ;incstack = 0
  5378  000914  0E34               	movlw	52
  5379  000916  6E14               	movwf	??_INT1_ISR& (0+255),c
  5380  000918  0EF2               	movlw	242
  5381  00091A                     i2u223_47:
  5382  00091A  2EE8               	decfsz	wreg,f,c
  5383  00091C  D7FE               	bra	i2u223_47
  5384  00091E  2E14               	decfsz	??_INT1_ISR& (0+255),f,c
  5385  000920  D7FC               	bra	i2u223_47
  5386                           
  5387                           ;ext_int.c: 52: qsm_post_event(WM_EVENT_BUTTON_UP);
  5388  000922  0E02               	movlw	2
  5389  000924  ECE0  F004         	call	_qsm_post_event
  5390                           
  5391                           ;ext_int.c: 55: (INTCON3bits.INT1IF = 0);
  5392  000928  90F0               	bcf	intcon3,0,c	;volatile
  5393                           
  5394                           ;ext_int.c: 58: INT1_CallBack();
  5395  00092A  EC5E  F004         	call	_INT1_CallBack	;wreg free
  5396  00092E  0012               	return		;funcret
  5397  000930                     __end_of_INT1_ISR:
  5398                           	opt stack 0
  5399                           tosu	equ	0xFFF
  5400                           tosh	equ	0xFFE
  5401                           tosl	equ	0xFFD
  5402                           pclatu	equ	0xFFB
  5403                           pclath	equ	0xFFA
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           intcon2	equ	0xFF1
  5412                           intcon3	equ	0xFF0
  5413                           postinc0	equ	0xFEE
  5414                           fsr0h	equ	0xFEA
  5415                           fsr0l	equ	0xFE9
  5416                           wreg	equ	0xFE8
  5417                           fsr1h	equ	0xFE2
  5418                           fsr1l	equ	0xFE1
  5419                           postinc2	equ	0xFDE
  5420                           postdec2	equ	0xFDD
  5421                           fsr2h	equ	0xFDA
  5422                           fsr2l	equ	0xFD9
  5423                           status	equ	0xFD8
  5424                           
  5425 ;; *************** function _INT1_CallBack *****************
  5426 ;; Defined at:
  5427 ;;		line 64 in file "mcc_generated_files/ext_int.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5445 ;;Total ram usage:        0 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    1
  5448 ;; This function calls:
  5449 ;;		Absolute function
  5450 ;;		_INT1_DefaultInterruptHandler
  5451 ;; This function is called by:
  5452 ;;		_INT1_ISR
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           	psect	text45
  5457  0008BC                     __ptext45:
  5458                           	opt stack 0
  5459  0008BC                     _INT1_CallBack:
  5460                           	opt stack 23
  5461                           
  5462                           ;ext_int.c: 67: if(INT1_InterruptHandler)
  5463                           
  5464                           ;incstack = 0
  5465  0008BC  5042               	movf	_INT1_InterruptHandler,w,c
  5466  0008BE  1043               	iorwf	_INT1_InterruptHandler+1,w,c
  5467  0008C0  B4D8               	btfsc	status,2,c
  5468  0008C2  0012               	return	
  5469                           
  5470                           ;ext_int.c: 68: {
  5471                           ;ext_int.c: 69: INT1_InterruptHandler();
  5472  0008C4  D801               	call	i2u27_48
  5473  0008C6  0012               	return	
  5474  0008C8                     i2u27_48:
  5475  0008C8  0005               	push	
  5476  0008CA  6EFA               	movwf	pclath,c
  5477  0008CC  5042               	movf	_INT1_InterruptHandler,w,c
  5478  0008CE  6EFD               	movwf	tosl,c
  5479  0008D0  5043               	movf	_INT1_InterruptHandler+1,w,c
  5480  0008D2  6EFE               	movwf	tosh,c
  5481  0008D4  6AFF               	clrf	tosu,c
  5482  0008D6  50FA               	movf	pclath,w,c
  5483  0008D8  0012               	return		;indir
  5484  0008DA                     __end_of_INT1_CallBack:
  5485                           	opt stack 0
  5486                           tosu	equ	0xFFF
  5487                           tosh	equ	0xFFE
  5488                           tosl	equ	0xFFD
  5489                           pclatu	equ	0xFFB
  5490                           pclath	equ	0xFFA
  5491                           tblptru	equ	0xFF8
  5492                           tblptrh	equ	0xFF7
  5493                           tblptrl	equ	0xFF6
  5494                           tablat	equ	0xFF5
  5495                           prodh	equ	0xFF4
  5496                           prodl	equ	0xFF3
  5497                           intcon	equ	0xFF2
  5498                           intcon2	equ	0xFF1
  5499                           intcon3	equ	0xFF0
  5500                           postinc0	equ	0xFEE
  5501                           fsr0h	equ	0xFEA
  5502                           fsr0l	equ	0xFE9
  5503                           wreg	equ	0xFE8
  5504                           fsr1h	equ	0xFE2
  5505                           fsr1l	equ	0xFE1
  5506                           postinc2	equ	0xFDE
  5507                           postdec2	equ	0xFDD
  5508                           fsr2h	equ	0xFDA
  5509                           fsr2l	equ	0xFD9
  5510                           status	equ	0xFD8
  5511                           
  5512 ;; *************** function _INT1_DefaultInterruptHandler *****************
  5513 ;; Defined at:
  5514 ;;		line 83 in file "mcc_generated_files/ext_int.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		None
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_EXT_INT_Initialize
  5538 ;;		_INT1_CallBack
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text46
  5543  000AB0                     __ptext46:
  5544                           	opt stack 0
  5545  000AB0                     _INT1_DefaultInterruptHandler:
  5546                           	opt stack 23
  5547                           
  5548                           ;incstack = 0
  5549  000AB0  0012               	return		;funcret
  5550  000AB2                     __end_of_INT1_DefaultInterruptHandler:
  5551                           	opt stack 0
  5552                           tosu	equ	0xFFF
  5553                           tosh	equ	0xFFE
  5554                           tosl	equ	0xFFD
  5555                           pclatu	equ	0xFFB
  5556                           pclath	equ	0xFFA
  5557                           tblptru	equ	0xFF8
  5558                           tblptrh	equ	0xFF7
  5559                           tblptrl	equ	0xFF6
  5560                           tablat	equ	0xFF5
  5561                           prodh	equ	0xFF4
  5562                           prodl	equ	0xFF3
  5563                           intcon	equ	0xFF2
  5564                           intcon2	equ	0xFF1
  5565                           intcon3	equ	0xFF0
  5566                           postinc0	equ	0xFEE
  5567                           fsr0h	equ	0xFEA
  5568                           fsr0l	equ	0xFE9
  5569                           wreg	equ	0xFE8
  5570                           fsr1h	equ	0xFE2
  5571                           fsr1l	equ	0xFE1
  5572                           postinc2	equ	0xFDE
  5573                           postdec2	equ	0xFDD
  5574                           fsr2h	equ	0xFDA
  5575                           fsr2l	equ	0xFD9
  5576                           status	equ	0xFD8
  5577                           
  5578 ;; *************** function _INT0_ISR *****************
  5579 ;; Defined at:
  5580 ;;		line 90 in file "mcc_generated_files/ext_int.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;		None
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;		None
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5598 ;;Total ram usage:        1 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    4
  5601 ;; This function calls:
  5602 ;;		_INT0_CallBack
  5603 ;;		_qsm_post_event
  5604 ;; This function is called by:
  5605 ;;		_INTERRUPT_InterruptManagerHigh
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text47
  5610  000930                     __ptext47:
  5611                           	opt stack 0
  5612  000930                     _INT0_ISR:
  5613                           	opt stack 21
  5614                           
  5615                           ;ext_int.c: 93: _delay((unsigned long)((10)*(16000000/4000.0)));
  5616                           
  5617                           ;incstack = 0
  5618  000930  0E34               	movlw	52
  5619  000932  6E14               	movwf	??_INT0_ISR& (0+255),c
  5620  000934  0EF2               	movlw	242
  5621  000936                     i2u224_47:
  5622  000936  2EE8               	decfsz	wreg,f,c
  5623  000938  D7FE               	bra	i2u224_47
  5624  00093A  2E14               	decfsz	??_INT0_ISR& (0+255),f,c
  5625  00093C  D7FC               	bra	i2u224_47
  5626                           
  5627                           ;ext_int.c: 94: qsm_post_event(WM_EVENT_BUTTON_OK);
  5628  00093E  0E01               	movlw	1
  5629  000940  ECE0  F004         	call	_qsm_post_event
  5630                           
  5631                           ;ext_int.c: 97: (INTCONbits.INT0IF = 0);
  5632  000944  92F2               	bcf	intcon,1,c	;volatile
  5633                           
  5634                           ;ext_int.c: 100: INT0_CallBack();
  5635  000946  EC6D  F004         	call	_INT0_CallBack	;wreg free
  5636  00094A  0012               	return		;funcret
  5637  00094C                     __end_of_INT0_ISR:
  5638                           	opt stack 0
  5639                           tosu	equ	0xFFF
  5640                           tosh	equ	0xFFE
  5641                           tosl	equ	0xFFD
  5642                           pclatu	equ	0xFFB
  5643                           pclath	equ	0xFFA
  5644                           tblptru	equ	0xFF8
  5645                           tblptrh	equ	0xFF7
  5646                           tblptrl	equ	0xFF6
  5647                           tablat	equ	0xFF5
  5648                           prodh	equ	0xFF4
  5649                           prodl	equ	0xFF3
  5650                           intcon	equ	0xFF2
  5651                           intcon2	equ	0xFF1
  5652                           intcon3	equ	0xFF0
  5653                           postinc0	equ	0xFEE
  5654                           fsr0h	equ	0xFEA
  5655                           fsr0l	equ	0xFE9
  5656                           wreg	equ	0xFE8
  5657                           fsr1h	equ	0xFE2
  5658                           fsr1l	equ	0xFE1
  5659                           postinc2	equ	0xFDE
  5660                           postdec2	equ	0xFDD
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           
  5665 ;; *************** function _INT0_CallBack *****************
  5666 ;; Defined at:
  5667 ;;		line 106 in file "mcc_generated_files/ext_int.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;		None
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5685 ;;Total ram usage:        0 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    1
  5688 ;; This function calls:
  5689 ;;		Absolute function
  5690 ;;		_INT0_DefaultInterruptHandler
  5691 ;; This function is called by:
  5692 ;;		_INT0_ISR
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text48
  5697  0008DA                     __ptext48:
  5698                           	opt stack 0
  5699  0008DA                     _INT0_CallBack:
  5700                           	opt stack 23
  5701                           
  5702                           ;ext_int.c: 109: if(INT0_InterruptHandler)
  5703                           
  5704                           ;incstack = 0
  5705  0008DA  5040               	movf	_INT0_InterruptHandler,w,c
  5706  0008DC  1041               	iorwf	_INT0_InterruptHandler+1,w,c
  5707  0008DE  B4D8               	btfsc	status,2,c
  5708  0008E0  0012               	return	
  5709                           
  5710                           ;ext_int.c: 110: {
  5711                           ;ext_int.c: 111: INT0_InterruptHandler();
  5712  0008E2  D801               	call	i2u29_48
  5713  0008E4  0012               	return	
  5714  0008E6                     i2u29_48:
  5715  0008E6  0005               	push	
  5716  0008E8  6EFA               	movwf	pclath,c
  5717  0008EA  5040               	movf	_INT0_InterruptHandler,w,c
  5718  0008EC  6EFD               	movwf	tosl,c
  5719  0008EE  5041               	movf	_INT0_InterruptHandler+1,w,c
  5720  0008F0  6EFE               	movwf	tosh,c
  5721  0008F2  6AFF               	clrf	tosu,c
  5722  0008F4  50FA               	movf	pclath,w,c
  5723  0008F6  0012               	return		;indir
  5724  0008F8                     __end_of_INT0_CallBack:
  5725                           	opt stack 0
  5726                           tosu	equ	0xFFF
  5727                           tosh	equ	0xFFE
  5728                           tosl	equ	0xFFD
  5729                           pclatu	equ	0xFFB
  5730                           pclath	equ	0xFFA
  5731                           tblptru	equ	0xFF8
  5732                           tblptrh	equ	0xFF7
  5733                           tblptrl	equ	0xFF6
  5734                           tablat	equ	0xFF5
  5735                           prodh	equ	0xFF4
  5736                           prodl	equ	0xFF3
  5737                           intcon	equ	0xFF2
  5738                           intcon2	equ	0xFF1
  5739                           intcon3	equ	0xFF0
  5740                           postinc0	equ	0xFEE
  5741                           fsr0h	equ	0xFEA
  5742                           fsr0l	equ	0xFE9
  5743                           wreg	equ	0xFE8
  5744                           fsr1h	equ	0xFE2
  5745                           fsr1l	equ	0xFE1
  5746                           postinc2	equ	0xFDE
  5747                           postdec2	equ	0xFDD
  5748                           fsr2h	equ	0xFDA
  5749                           fsr2l	equ	0xFD9
  5750                           status	equ	0xFD8
  5751                           
  5752 ;; *************** function _INT0_DefaultInterruptHandler *****************
  5753 ;; Defined at:
  5754 ;;		line 125 in file "mcc_generated_files/ext_int.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;		None
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		None
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5772 ;;Total ram usage:        0 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_EXT_INT_Initialize
  5778 ;;		_INT0_CallBack
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text49
  5783  000AB2                     __ptext49:
  5784                           	opt stack 0
  5785  000AB2                     _INT0_DefaultInterruptHandler:
  5786                           	opt stack 23
  5787                           
  5788                           ;incstack = 0
  5789  000AB2  0012               	return		;funcret
  5790  000AB4                     __end_of_INT0_DefaultInterruptHandler:
  5791                           	opt stack 0
  5792                           tosu	equ	0xFFF
  5793                           tosh	equ	0xFFE
  5794                           tosl	equ	0xFFD
  5795                           pclatu	equ	0xFFB
  5796                           pclath	equ	0xFFA
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           intcon	equ	0xFF2
  5804                           intcon2	equ	0xFF1
  5805                           intcon3	equ	0xFF0
  5806                           postinc0	equ	0xFEE
  5807                           fsr0h	equ	0xFEA
  5808                           fsr0l	equ	0xFE9
  5809                           wreg	equ	0xFE8
  5810                           fsr1h	equ	0xFE2
  5811                           fsr1l	equ	0xFE1
  5812                           postinc2	equ	0xFDE
  5813                           postdec2	equ	0xFDD
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818 ;; *************** function _CCP5_CaptureISR *****************
  5819 ;; Defined at:
  5820 ;;		line 82 in file "mcc_generated_files/ccp5.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;		None
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  module          2    4[COMRAM] struct CCPR5Reg_tag
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;Total ram usage:        2 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    1
  5841 ;; This function calls:
  5842 ;;		_CCP5_CallBack
  5843 ;; This function is called by:
  5844 ;;		_INTERRUPT_InterruptManagerHigh
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text50
  5849  00097E                     __ptext50:
  5850                           	opt stack 0
  5851  00097E                     _CCP5_CaptureISR:
  5852                           	opt stack 24
  5853                           
  5854                           ;ccp5.c: 84: CCP_PERIOD_REG_T module;
  5855                           ;ccp5.c: 87: PIR4bits.CCP5IF = 0;
  5856                           
  5857                           ;incstack = 0
  5858  00097E  94B7               	bcf	4023,2,c	;volatile
  5859                           
  5860                           ;ccp5.c: 90: module.ccpr5l = CCPR5L;
  5861  000980  CF48 F005          	movff	3912,CCP5_CaptureISR@module	;volatile
  5862                           
  5863                           ;ccp5.c: 91: module.ccpr5h = CCPR5H;
  5864  000984  CF49 F006          	movff	3913,CCP5_CaptureISR@module+1	;volatile
  5865                           
  5866                           ;ccp5.c: 94: CCP5_CallBack(module.ccpr5_16Bit);
  5867  000988  C005  F001         	movff	CCP5_CaptureISR@module,CCP5_CallBack@capturedValue
  5868  00098C  C006  F002         	movff	CCP5_CaptureISR@module+1,CCP5_CallBack@capturedValue+1
  5869  000990  ECE8  F003         	call	_CCP5_CallBack	;wreg free
  5870  000994  0012               	return		;funcret
  5871  000996                     __end_of_CCP5_CaptureISR:
  5872                           	opt stack 0
  5873                           tosu	equ	0xFFF
  5874                           tosh	equ	0xFFE
  5875                           tosl	equ	0xFFD
  5876                           pclatu	equ	0xFFB
  5877                           pclath	equ	0xFFA
  5878                           tblptru	equ	0xFF8
  5879                           tblptrh	equ	0xFF7
  5880                           tblptrl	equ	0xFF6
  5881                           tablat	equ	0xFF5
  5882                           prodh	equ	0xFF4
  5883                           prodl	equ	0xFF3
  5884                           intcon	equ	0xFF2
  5885                           intcon2	equ	0xFF1
  5886                           intcon3	equ	0xFF0
  5887                           postinc0	equ	0xFEE
  5888                           fsr0h	equ	0xFEA
  5889                           fsr0l	equ	0xFE9
  5890                           wreg	equ	0xFE8
  5891                           fsr1h	equ	0xFE2
  5892                           fsr1l	equ	0xFE1
  5893                           postinc2	equ	0xFDE
  5894                           postdec2	equ	0xFDD
  5895                           fsr2h	equ	0xFDA
  5896                           fsr2l	equ	0xFD9
  5897                           status	equ	0xFD8
  5898                           
  5899 ;; *************** function _CCP5_CallBack *****************
  5900 ;; Defined at:
  5901 ;;		line 97 in file "mcc_generated_files/ccp5.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  capturedValu    2    0[COMRAM] unsigned int 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5919 ;;Total ram usage:        4 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_CCP5_CaptureISR
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text51
  5929  0007D0                     __ptext51:
  5930                           	opt stack 0
  5931  0007D0                     _CCP5_CallBack:
  5932                           	opt stack 24
  5933                           
  5934                           ;ccp5.c: 100: frequency = old_capture - capturedValue;
  5935                           
  5936                           ;incstack = 0
  5937  0007D0  C001  F003         	movff	CCP5_CallBack@capturedValue,??_CCP5_CallBack
  5938  0007D4  C002  F004         	movff	CCP5_CallBack@capturedValue+1,??_CCP5_CallBack+1
  5939  0007D8  1E03               	comf	??_CCP5_CallBack,f,c
  5940  0007DA  1E04               	comf	??_CCP5_CallBack+1,f,c
  5941  0007DC  4A03               	infsnz	??_CCP5_CallBack,f,c
  5942  0007DE  2A04               	incf	??_CCP5_CallBack+1,f,c
  5943  0007E0  502B               	movf	_old_capture,w,c	;volatile
  5944  0007E2  2403               	addwf	??_CCP5_CallBack,w,c
  5945  0007E4  6E2D               	movwf	_frequency,c	;volatile
  5946  0007E6  502C               	movf	_old_capture+1,w,c	;volatile
  5947  0007E8  2004               	addwfc	??_CCP5_CallBack+1,w,c
  5948  0007EA  6E2E               	movwf	_frequency+1,c	;volatile
  5949                           
  5950                           ;ccp5.c: 101: old_capture = capturedValue;
  5951  0007EC  C001  F02B         	movff	CCP5_CallBack@capturedValue,_old_capture	;volatile
  5952  0007F0  C002  F02C         	movff	CCP5_CallBack@capturedValue+1,_old_capture+1	;volatile
  5953  0007F4  0012               	return		;funcret
  5954  0007F6                     __end_of_CCP5_CallBack:
  5955                           	opt stack 0
  5956                           tosu	equ	0xFFF
  5957                           tosh	equ	0xFFE
  5958                           tosl	equ	0xFFD
  5959                           pclatu	equ	0xFFB
  5960                           pclath	equ	0xFFA
  5961                           tblptru	equ	0xFF8
  5962                           tblptrh	equ	0xFF7
  5963                           tblptrl	equ	0xFF6
  5964                           tablat	equ	0xFF5
  5965                           prodh	equ	0xFF4
  5966                           prodl	equ	0xFF3
  5967                           intcon	equ	0xFF2
  5968                           intcon2	equ	0xFF1
  5969                           intcon3	equ	0xFF0
  5970                           postinc0	equ	0xFEE
  5971                           fsr0h	equ	0xFEA
  5972                           fsr0l	equ	0xFE9
  5973                           wreg	equ	0xFE8
  5974                           fsr1h	equ	0xFE2
  5975                           fsr1l	equ	0xFE1
  5976                           postinc2	equ	0xFDE
  5977                           postdec2	equ	0xFDD
  5978                           fsr2h	equ	0xFDA
  5979                           fsr2l	equ	0xFD9
  5980                           status	equ	0xFD8
  5981                           
  5982 ;; *************** function _ADC_ISR *****************
  5983 ;; Defined at:
  5984 ;;		line 128 in file "mcc_generated_files/adc.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;		None
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;		None
  5989 ;; Return value:  Size  Location     Type
  5990 ;;                  1    wreg      void 
  5991 ;; Registers used:
  5992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;Total ram usage:        0 bytes
  6003 ;; Hardware stack levels used:    1
  6004 ;; Hardware stack levels required when called:    4
  6005 ;; This function calls:
  6006 ;;		_ADC_GetConversionResult
  6007 ;;		_qsm_get_state
  6008 ;;		_qsm_post_event
  6009 ;;		_set_out
  6010 ;; This function is called by:
  6011 ;;		_INTERRUPT_InterruptManagerHigh
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text52
  6016  000330                     __ptext52:
  6017                           	opt stack 0
  6018  000330                     _ADC_ISR:
  6019                           	opt stack 21
  6020                           
  6021                           ;adc.c: 130: switch(qsm_get_state()){
  6022                           
  6023                           ;incstack = 0
  6024  000330  D03D               	goto	i2l3079
  6025  000332                     i2l3051:
  6026  000332  0E03               	movlw	3
  6027  000334  ECE0  F004         	call	_qsm_post_event
  6028  000338  D050               	goto	i2l300
  6029  00033A                     i2l3053:
  6030  00033A  0E03               	movlw	3
  6031  00033C  ECE0  F004         	call	_qsm_post_event
  6032  000340  D04C               	goto	i2l300
  6033  000342                     i2l3055:
  6034  000342  0E03               	movlw	3
  6035  000344  ECE0  F004         	call	_qsm_post_event
  6036  000348  D048               	goto	i2l300
  6037  00034A                     i2l3057:
  6038  00034A  0E03               	movlw	3
  6039  00034C  ECE0  F004         	call	_qsm_post_event
  6040  000350  D044               	goto	i2l300
  6041  000352                     i2l3059:
  6042                           
  6043                           ;adc.c: 136: if(ADC_GetConversionResult()<100){
  6044  000352  ECEA  F004         	call	_ADC_GetConversionResult	;wreg free
  6045  000356  5002               	movf	?_ADC_GetConversionResult+1,w,c
  6046  000358  E140               	bnz	i2l300
  6047  00035A  0E64               	movlw	100
  6048  00035C  5C01               	subwf	?_ADC_GetConversionResult,w,c
  6049  00035E  B0D8               	btfsc	status,0,c
  6050  000360  D03C               	goto	i2l300
  6051                           
  6052                           ;adc.c: 137: set_out(1);
  6053  000362  0E01               	movlw	1
  6054  000364  EC43  F005         	call	_set_out
  6055                           
  6056                           ;adc.c: 138: qsm_post_event(WM_EVENT_FAULT_SENSE);
  6057  000368  0E05               	movlw	5
  6058  00036A  ECE0  F004         	call	_qsm_post_event
  6059                           
  6060                           ;adc.c: 139: }
  6061                           ;adc.c: 140: break;
  6062  00036E  D035               	goto	i2l300
  6063  000370                     i2l3065:
  6064                           
  6065                           ;adc.c: 142: if(ADC_GetConversionResult()<100){
  6066  000370  ECEA  F004         	call	_ADC_GetConversionResult	;wreg free
  6067  000374  5002               	movf	?_ADC_GetConversionResult+1,w,c
  6068  000376  E131               	bnz	i2l300
  6069  000378  0E64               	movlw	100
  6070  00037A  5C01               	subwf	?_ADC_GetConversionResult,w,c
  6071  00037C  B0D8               	btfsc	status,0,c
  6072  00037E  D02D               	goto	i2l300
  6073                           
  6074                           ;adc.c: 143: set_out(1);
  6075  000380  0E01               	movlw	1
  6076  000382  EC43  F005         	call	_set_out
  6077                           
  6078                           ;adc.c: 144: qsm_post_event(WM_EVENT_FAULT_SENSE);
  6079  000386  0E05               	movlw	5
  6080  000388  ECE0  F004         	call	_qsm_post_event
  6081                           
  6082                           ;adc.c: 145: }
  6083                           ;adc.c: 146: break;
  6084  00038C  D026               	goto	i2l300
  6085  00038E                     i2l3071:
  6086                           
  6087                           ;adc.c: 148: if(ADC_GetConversionResult()>=100){
  6088  00038E  ECEA  F004         	call	_ADC_GetConversionResult	;wreg free
  6089  000392  5002               	movf	?_ADC_GetConversionResult+1,w,c
  6090  000394  E104               	bnz	i2u140_40
  6091  000396  0E64               	movlw	100
  6092  000398  5C01               	subwf	?_ADC_GetConversionResult,w,c
  6093  00039A  A0D8               	btfss	status,0,c
  6094  00039C  D01E               	goto	i2l300
  6095  00039E                     i2u140_40:
  6096                           
  6097                           ;adc.c: 149: set_out(0);
  6098  00039E  0E00               	movlw	0
  6099  0003A0  EC43  F005         	call	_set_out
  6100                           
  6101                           ;adc.c: 150: qsm_post_event(WM_EVENT_BUTTON_OK);
  6102  0003A4  0E01               	movlw	1
  6103  0003A6  ECE0  F004         	call	_qsm_post_event
  6104                           
  6105                           ;adc.c: 154: }
  6106                           
  6107                           ;adc.c: 153: default: break;
  6108                           
  6109                           ;adc.c: 151: }
  6110                           ;adc.c: 152: break;
  6111  0003AA  D017               	goto	i2l300
  6112  0003AC                     i2l3079:
  6113  0003AC  EC56  F005         	call	_qsm_get_state	;wreg free
  6114                           
  6115                           ; Switch size 1, requested type "space"
  6116                           ; Number of cases is 7, Range of values is 3 to 9
  6117                           ; switch strategies available:
  6118                           ; Name         Instructions Cycles
  6119                           ; simple_byte           22    12 (average)
  6120                           ;	Chosen strategy is simple_byte
  6121  0003B0  0A03               	xorlw	3	; case 3
  6122  0003B2  B4D8               	btfsc	status,2,c
  6123  0003B4  D7BE               	goto	i2l3051
  6124  0003B6  0A07               	xorlw	7	; case 4
  6125  0003B8  B4D8               	btfsc	status,2,c
  6126  0003BA  D7BF               	goto	i2l3053
  6127  0003BC  0A01               	xorlw	1	; case 5
  6128  0003BE  B4D8               	btfsc	status,2,c
  6129  0003C0  D7C0               	goto	i2l3055
  6130  0003C2  0A03               	xorlw	3	; case 6
  6131  0003C4  B4D8               	btfsc	status,2,c
  6132  0003C6  D7C1               	goto	i2l3057
  6133  0003C8  0A01               	xorlw	1	; case 7
  6134  0003CA  B4D8               	btfsc	status,2,c
  6135  0003CC  D7C2               	goto	i2l3059
  6136  0003CE  0A0F               	xorlw	15	; case 8
  6137  0003D0  B4D8               	btfsc	status,2,c
  6138  0003D2  D7CE               	goto	i2l3065
  6139  0003D4  0A01               	xorlw	1	; case 9
  6140  0003D6  B4D8               	btfsc	status,2,c
  6141  0003D8  D7DA               	goto	i2l3071
  6142  0003DA                     i2l300:
  6143                           
  6144                           ;adc.c: 158: PIR1bits.ADIF = 0;
  6145  0003DA  9C9E               	bcf	3998,6,c	;volatile
  6146  0003DC  0012               	return		;funcret
  6147  0003DE                     __end_of_ADC_ISR:
  6148                           	opt stack 0
  6149                           tosu	equ	0xFFF
  6150                           tosh	equ	0xFFE
  6151                           tosl	equ	0xFFD
  6152                           pclatu	equ	0xFFB
  6153                           pclath	equ	0xFFA
  6154                           tblptru	equ	0xFF8
  6155                           tblptrh	equ	0xFF7
  6156                           tblptrl	equ	0xFF6
  6157                           tablat	equ	0xFF5
  6158                           prodh	equ	0xFF4
  6159                           prodl	equ	0xFF3
  6160                           intcon	equ	0xFF2
  6161                           intcon2	equ	0xFF1
  6162                           intcon3	equ	0xFF0
  6163                           postinc0	equ	0xFEE
  6164                           fsr0h	equ	0xFEA
  6165                           fsr0l	equ	0xFE9
  6166                           wreg	equ	0xFE8
  6167                           fsr1h	equ	0xFE2
  6168                           fsr1l	equ	0xFE1
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function _set_out *****************
  6176 ;; Defined at:
  6177 ;;		line 201 in file "mcc_generated_files/tmr0.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  val             1    wreg     unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  val             1    0[COMRAM] unsigned char 
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      void 
  6184 ;; Registers used:
  6185 ;;		wreg
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;Total ram usage:        1 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_ADC_ISR
  6201 ;;		_WM_HANDLER_TIMER_DONE
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text53
  6206  000A86                     __ptext53:
  6207                           	opt stack 0
  6208  000A86                     _set_out:
  6209                           	opt stack 24
  6210                           
  6211                           ;incstack = 0
  6212                           ;set_out@val stored from wreg
  6213  000A86  6E01               	movwf	set_out@val,c
  6214                           
  6215                           ;tmr0.c: 202: out = val;
  6216  000A88  C001  F034         	movff	set_out@val,_out	;volatile
  6217  000A8C  0012               	return		;funcret
  6218  000A8E                     __end_of_set_out:
  6219                           	opt stack 0
  6220                           tosu	equ	0xFFF
  6221                           tosh	equ	0xFFE
  6222                           tosl	equ	0xFFD
  6223                           pclatu	equ	0xFFB
  6224                           pclath	equ	0xFFA
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           prodh	equ	0xFF4
  6230                           prodl	equ	0xFF3
  6231                           intcon	equ	0xFF2
  6232                           intcon2	equ	0xFF1
  6233                           intcon3	equ	0xFF0
  6234                           postinc0	equ	0xFEE
  6235                           fsr0h	equ	0xFEA
  6236                           fsr0l	equ	0xFE9
  6237                           wreg	equ	0xFE8
  6238                           fsr1h	equ	0xFE2
  6239                           fsr1l	equ	0xFE1
  6240                           postinc2	equ	0xFDE
  6241                           postdec2	equ	0xFDD
  6242                           fsr2h	equ	0xFDA
  6243                           fsr2l	equ	0xFD9
  6244                           status	equ	0xFD8
  6245                           
  6246 ;; *************** function _qsm_post_event *****************
  6247 ;; Defined at:
  6248 ;;		line 98 in file "qsm/qsm.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  event           1    wreg     enum E109
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  event           1   18[COMRAM] enum E109
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      enum E15159
  6255 ;; Registers used:
  6256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;Total ram usage:        1 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    3
  6269 ;; This function calls:
  6270 ;;		_qsm_queue_put
  6271 ;; This function is called by:
  6272 ;;		_INT1_ISR
  6273 ;;		_INT0_ISR
  6274 ;;		_ADC_ISR
  6275 ;;		_TMR0_DefaultInterruptHandler
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text54
  6280  0009C0                     __ptext54:
  6281                           	opt stack 0
  6282  0009C0                     _qsm_post_event:
  6283                           	opt stack 19
  6284                           
  6285                           ;incstack = 0
  6286                           ;qsm_post_event@event stored from wreg
  6287  0009C0  6E13               	movwf	qsm_post_event@event,c
  6288                           
  6289                           ;qsm.c: 100: if( QSM_QUEUE_OK != qsm_queue_put( &qsm_queue, event ) )
  6290  0009C2  0E60               	movlw	low _qsm_queue
  6291  0009C4  6E0E               	movwf	qsm_queue_put@b,c
  6292  0009C6  0E00               	movlw	high _qsm_queue
  6293  0009C8  6E0F               	movwf	qsm_queue_put@b+1,c
  6294  0009CA  C013  F010         	movff	qsm_post_event@event,qsm_queue_put@data_byte
  6295  0009CE  ECEF  F001         	call	_qsm_queue_put	;wreg free
  6296                           
  6297                           ;qsm.c: 101: {
  6298                           ;qsm.c: 102: return QSM_FULL;
  6299                           ;	Return value of _qsm_post_event is never used
  6300  0009D2  0012               	return	
  6301  0009D4                     __end_of_qsm_post_event:
  6302                           	opt stack 0
  6303                           tosu	equ	0xFFF
  6304                           tosh	equ	0xFFE
  6305                           tosl	equ	0xFFD
  6306                           pclatu	equ	0xFFB
  6307                           pclath	equ	0xFFA
  6308                           tblptru	equ	0xFF8
  6309                           tblptrh	equ	0xFF7
  6310                           tblptrl	equ	0xFF6
  6311                           tablat	equ	0xFF5
  6312                           prodh	equ	0xFF4
  6313                           prodl	equ	0xFF3
  6314                           intcon	equ	0xFF2
  6315                           intcon2	equ	0xFF1
  6316                           intcon3	equ	0xFF0
  6317                           postinc0	equ	0xFEE
  6318                           fsr0h	equ	0xFEA
  6319                           fsr0l	equ	0xFE9
  6320                           wreg	equ	0xFE8
  6321                           fsr1h	equ	0xFE2
  6322                           fsr1l	equ	0xFE1
  6323                           postinc2	equ	0xFDE
  6324                           postdec2	equ	0xFDD
  6325                           fsr2h	equ	0xFDA
  6326                           fsr2l	equ	0xFD9
  6327                           status	equ	0xFD8
  6328                           
  6329 ;; *************** function _qsm_queue_put *****************
  6330 ;; Defined at:
  6331 ;;		line 85 in file "qsm/qsm_queue.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  b               2   13[COMRAM] PTR struct qsm_queue_s
  6334 ;;		 -> qsm_queue(24), 
  6335 ;;  data_byte       1   15[COMRAM] unsigned char 
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      enum E119
  6340 ;; Registers used:
  6341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6347 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6351 ;;Total ram usage:        5 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    2
  6354 ;; This function calls:
  6355 ;;		___lbmod
  6356 ;;		_qsm_queue_isfull
  6357 ;; This function is called by:
  6358 ;;		_qsm_post_event
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text55
  6363  0003DE                     __ptext55:
  6364                           	opt stack 0
  6365  0003DE                     _qsm_queue_put:
  6366                           	opt stack 19
  6367                           
  6368                           ;qsm_queue.c: 87: if (b)
  6369                           
  6370                           ;incstack = 0
  6371  0003DE  500E               	movf	qsm_queue_put@b,w,c
  6372  0003E0  100F               	iorwf	qsm_queue_put@b+1,w,c
  6373  0003E2  B4D8               	btfsc	status,2,c
  6374  0003E4  D03B               	goto	i2l807
  6375                           
  6376                           ;qsm_queue.c: 88: {
  6377                           ;qsm_queue.c: 89: if (!qsm_queue_isfull(b))
  6378  0003E6  C00E  F008         	movff	qsm_queue_put@b,qsm_queue_isfull@b
  6379  0003EA  C00F  F009         	movff	qsm_queue_put@b+1,qsm_queue_isfull@b+1
  6380  0003EE  EC0F  F003         	call	_qsm_queue_isfull	;wreg free
  6381  0003F2  0900               	iorlw	0
  6382  0003F4  A4D8               	btfss	status,2,c
  6383  0003F6  D02A               	goto	i2l2747
  6384                           
  6385                           ;qsm_queue.c: 90: {
  6386                           ;qsm_queue.c: 91: b->buffer[b->head % b->buffer_len] = data_byte;
  6387  0003F8  EE20 F016          	lfsr	2,22
  6388  0003FC  500E               	movf	qsm_queue_put@b,w,c
  6389  0003FE  26D9               	addwf	fsr2l,f,c
  6390  000400  500F               	movf	qsm_queue_put@b+1,w,c
  6391  000402  22DA               	addwfc	fsr2h,f,c
  6392  000404  50DF               	movf	indf2,w,c
  6393  000406  6E01               	movwf	___lbmod@divisor,c
  6394  000408  C00E  FFD9         	movff	qsm_queue_put@b,fsr2l
  6395  00040C  C00F  FFDA         	movff	qsm_queue_put@b+1,fsr2h
  6396  000410  50DF               	movf	indf2,w,c
  6397  000412  ECAB  F003         	call	___lbmod
  6398  000416  6E11               	movwf	??_qsm_queue_put& (0+255),c
  6399  000418  6A12               	clrf	(??_qsm_queue_put+1)& (0+255),c
  6400  00041A  0E02               	movlw	2
  6401  00041C  2611               	addwf	??_qsm_queue_put,f,c
  6402  00041E  0E00               	movlw	0
  6403  000420  2212               	addwfc	??_qsm_queue_put+1,f,c
  6404  000422  5011               	movf	??_qsm_queue_put,w,c
  6405  000424  240E               	addwf	qsm_queue_put@b,w,c
  6406  000426  6ED9               	movwf	fsr2l,c
  6407  000428  5012               	movf	??_qsm_queue_put+1,w,c
  6408  00042A  200F               	addwfc	qsm_queue_put@b+1,w,c
  6409  00042C  6EDA               	movwf	fsr2h,c
  6410  00042E  C010  FFDF         	movff	qsm_queue_put@data_byte,indf2
  6411                           
  6412                           ;qsm_queue.c: 92: b->head++;
  6413  000432  C00E  FFD9         	movff	qsm_queue_put@b,fsr2l
  6414  000436  C00F  FFDA         	movff	qsm_queue_put@b+1,fsr2h
  6415  00043A  2ADF               	incf	indf2,f,c
  6416                           
  6417                           ;qsm_queue.c: 93: b->status = QSM_QUEUE_OK;
  6418  00043C  EE20 F017          	lfsr	2,23
  6419  000440  500E               	movf	qsm_queue_put@b,w,c
  6420  000442  26D9               	addwf	fsr2l,f,c
  6421  000444  500F               	movf	qsm_queue_put@b+1,w,c
  6422  000446  22DA               	addwfc	fsr2h,f,c
  6423  000448  0E00               	movlw	0
  6424  00044A  D007               	goto	L1
  6425  00044C                     i2l2747:
  6426                           
  6427                           ;qsm_queue.c: 95: {
  6428                           ;qsm_queue.c: 96: b->status = QSM_QUEUE_FULL;
  6429  00044C  EE20 F017          	lfsr	2,23
  6430  000450  500E               	movf	qsm_queue_put@b,w,c
  6431  000452  26D9               	addwf	fsr2l,f,c
  6432  000454  500F               	movf	qsm_queue_put@b+1,w,c
  6433  000456  22DA               	addwfc	fsr2h,f,c
  6434  000458  0E02               	movlw	2
  6435  00045A                     L1:
  6436  00045A  6EDF               	movwf	indf2,c
  6437  00045C                     i2l807:
  6438                           
  6439                           ;qsm_queue.c: 97: }
  6440                           ;qsm_queue.c: 98: }
  6441                           ;qsm_queue.c: 99: return b->status;
  6442  00045C  EE20 F017          	lfsr	2,23
  6443  000460  500E               	movf	qsm_queue_put@b,w,c
  6444  000462  26D9               	addwf	fsr2l,f,c
  6445  000464  500F               	movf	qsm_queue_put@b+1,w,c
  6446  000466  22DA               	addwfc	fsr2h,f,c
  6447  000468  50DF               	movf	indf2,w,c
  6448  00046A  0012               	return	
  6449  00046C                     __end_of_qsm_queue_put:
  6450                           	opt stack 0
  6451                           tosu	equ	0xFFF
  6452                           tosh	equ	0xFFE
  6453                           tosl	equ	0xFFD
  6454                           pclatu	equ	0xFFB
  6455                           pclath	equ	0xFFA
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           intcon2	equ	0xFF1
  6464                           intcon3	equ	0xFF0
  6465                           postinc0	equ	0xFEE
  6466                           fsr0h	equ	0xFEA
  6467                           fsr0l	equ	0xFE9
  6468                           wreg	equ	0xFE8
  6469                           fsr1h	equ	0xFE2
  6470                           fsr1l	equ	0xFE1
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           postdec2	equ	0xFDD
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478 ;; *************** function _qsm_queue_isfull *****************
  6479 ;; Defined at:
  6480 ;;		line 48 in file "qsm/qsm_queue.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  b               2    7[COMRAM] PTR const struct qsm_que
  6483 ;;		 -> qsm_queue(24), 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;		None
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  1    wreg      unsigned char 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;Total ram usage:        6 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    1
  6502 ;; This function calls:
  6503 ;;		_qsm_queue_count
  6504 ;; This function is called by:
  6505 ;;		_qsm_queue_put
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text56
  6510  00061E                     __ptext56:
  6511                           	opt stack 0
  6512  00061E                     _qsm_queue_isfull:
  6513                           	opt stack 19
  6514                           
  6515                           ;qsm_queue.c: 50: return (b ? (qsm_queue_count(b) == b->buffer_len) : 1);
  6516                           
  6517                           ;incstack = 0
  6518  00061E  5008               	movf	qsm_queue_isfull@b,w,c
  6519  000620  1009               	iorwf	qsm_queue_isfull@b+1,w,c
  6520  000622  A4D8               	btfss	status,2,c
  6521  000624  D005               	goto	i2l2715
  6522  000626  0E00               	movlw	0
  6523  000628  6E0D               	movwf	_qsm_queue_isfull$2025+1,c
  6524  00062A  0E01               	movlw	1
  6525  00062C  6E0C               	movwf	_qsm_queue_isfull$2025,c
  6526  00062E  D016               	goto	i2l2717
  6527  000630                     i2l2715:
  6528  000630  C008  F001         	movff	qsm_queue_isfull@b,qsm_queue_count@b
  6529  000634  C009  F002         	movff	qsm_queue_isfull@b+1,qsm_queue_count@b+1
  6530  000638  ECEB  F002         	call	_qsm_queue_count	;wreg free
  6531  00063C  6E0A               	movwf	??_qsm_queue_isfull& (0+255),c
  6532  00063E  EE20 F016          	lfsr	2,22
  6533  000642  5008               	movf	qsm_queue_isfull@b,w,c
  6534  000644  26D9               	addwf	fsr2l,f,c
  6535  000646  5009               	movf	qsm_queue_isfull@b+1,w,c
  6536  000648  22DA               	addwfc	fsr2h,f,c
  6537  00064A  50DE               	movf	postinc2,w,c
  6538  00064C  180A               	xorwf	??_qsm_queue_isfull,w,c
  6539  00064E  A4D8               	btfss	status,2,c
  6540  000650  D002               	goto	i2u100_40
  6541  000652  0E01               	movlw	1
  6542  000654  D001               	goto	i2u101_40
  6543  000656                     i2u100_40:
  6544  000656  0E00               	movlw	0
  6545  000658                     i2u101_40:
  6546  000658  6E0C               	movwf	_qsm_queue_isfull$2025,c
  6547  00065A  6A0D               	clrf	_qsm_queue_isfull$2025+1,c
  6548  00065C                     i2l2717:
  6549  00065C  500C               	movf	_qsm_queue_isfull$2025,w,c
  6550  00065E  0012               	return	
  6551  000660                     __end_of_qsm_queue_isfull:
  6552                           	opt stack 0
  6553                           tosu	equ	0xFFF
  6554                           tosh	equ	0xFFE
  6555                           tosl	equ	0xFFD
  6556                           pclatu	equ	0xFFB
  6557                           pclath	equ	0xFFA
  6558                           tblptru	equ	0xFF8
  6559                           tblptrh	equ	0xFF7
  6560                           tblptrl	equ	0xFF6
  6561                           tablat	equ	0xFF5
  6562                           prodh	equ	0xFF4
  6563                           prodl	equ	0xFF3
  6564                           intcon	equ	0xFF2
  6565                           intcon2	equ	0xFF1
  6566                           intcon3	equ	0xFF0
  6567                           postinc0	equ	0xFEE
  6568                           fsr0h	equ	0xFEA
  6569                           fsr0l	equ	0xFE9
  6570                           wreg	equ	0xFE8
  6571                           fsr1h	equ	0xFE2
  6572                           fsr1l	equ	0xFE1
  6573                           indf2	equ	0xFDF
  6574                           postinc2	equ	0xFDE
  6575                           postdec2	equ	0xFDD
  6576                           fsr2h	equ	0xFDA
  6577                           fsr2l	equ	0xFD9
  6578                           status	equ	0xFD8
  6579                           
  6580 ;; *************** function _qsm_queue_count *****************
  6581 ;; Defined at:
  6582 ;;		line 39 in file "qsm/qsm_queue.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  b               2    0[COMRAM] PTR const struct qsm_que
  6585 ;;		 -> qsm_queue(24), 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      unsigned char 
  6590 ;; Registers used:
  6591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;Total ram usage:        7 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_qsm_queue_isfull
  6607 ;;		_qsm_queue_isempty
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text57
  6612  0005D6                     __ptext57:
  6613                           	opt stack 0
  6614  0005D6                     _qsm_queue_count:
  6615                           	opt stack 19
  6616                           
  6617                           ;qsm_queue.c: 41: return (b ? (b->head - b->tail) : 0);
  6618                           
  6619                           ;incstack = 0
  6620  0005D6  5001               	movf	qsm_queue_count@b,w,c
  6621  0005D8  1002               	iorwf	qsm_queue_count@b+1,w,c
  6622  0005DA  A4D8               	btfss	status,2,c
  6623  0005DC  D005               	goto	i2l2705
  6624  0005DE  0E00               	movlw	0
  6625  0005E0  6E07               	movwf	_qsm_queue_count$2016+1,c
  6626  0005E2  0E00               	movlw	0
  6627  0005E4  6E06               	movwf	_qsm_queue_count$2016,c
  6628  0005E6  D019               	goto	i2l2707
  6629  0005E8                     i2l2705:
  6630  0005E8  EE20 F001          	lfsr	2,1
  6631  0005EC  5001               	movf	qsm_queue_count@b,w,c
  6632  0005EE  26D9               	addwf	fsr2l,f,c
  6633  0005F0  5002               	movf	qsm_queue_count@b+1,w,c
  6634  0005F2  22DA               	addwfc	fsr2h,f,c
  6635  0005F4  50DF               	movf	indf2,w,c
  6636  0005F6  6E03               	movwf	??_qsm_queue_count& (0+255),c
  6637  0005F8  6A04               	clrf	(??_qsm_queue_count+1)& (0+255),c
  6638  0005FA  1E03               	comf	??_qsm_queue_count,f,c
  6639  0005FC  1E04               	comf	??_qsm_queue_count+1,f,c
  6640  0005FE  4A03               	infsnz	??_qsm_queue_count,f,c
  6641  000600  2A04               	incf	??_qsm_queue_count+1,f,c
  6642  000602  C001  FFD9         	movff	qsm_queue_count@b,fsr2l
  6643  000606  C002  FFDA         	movff	qsm_queue_count@b+1,fsr2h
  6644  00060A  50DF               	movf	indf2,w,c
  6645  00060C  6E05               	movwf	(??_qsm_queue_count+2)& (0+255),c
  6646  00060E  5005               	movf	??_qsm_queue_count+2,w,c
  6647  000610  2403               	addwf	??_qsm_queue_count,w,c
  6648  000612  6E06               	movwf	_qsm_queue_count$2016,c
  6649  000614  0E00               	movlw	0
  6650  000616  2004               	addwfc	??_qsm_queue_count+1,w,c
  6651  000618  6E07               	movwf	_qsm_queue_count$2016+1,c
  6652  00061A                     i2l2707:
  6653  00061A  5006               	movf	_qsm_queue_count$2016,w,c
  6654  00061C  0012               	return	
  6655  00061E                     __end_of_qsm_queue_count:
  6656                           	opt stack 0
  6657                           tosu	equ	0xFFF
  6658                           tosh	equ	0xFFE
  6659                           tosl	equ	0xFFD
  6660                           pclatu	equ	0xFFB
  6661                           pclath	equ	0xFFA
  6662                           tblptru	equ	0xFF8
  6663                           tblptrh	equ	0xFF7
  6664                           tblptrl	equ	0xFF6
  6665                           tablat	equ	0xFF5
  6666                           prodh	equ	0xFF4
  6667                           prodl	equ	0xFF3
  6668                           intcon	equ	0xFF2
  6669                           intcon2	equ	0xFF1
  6670                           intcon3	equ	0xFF0
  6671                           postinc0	equ	0xFEE
  6672                           fsr0h	equ	0xFEA
  6673                           fsr0l	equ	0xFE9
  6674                           wreg	equ	0xFE8
  6675                           fsr1h	equ	0xFE2
  6676                           fsr1l	equ	0xFE1
  6677                           indf2	equ	0xFDF
  6678                           postinc2	equ	0xFDE
  6679                           postdec2	equ	0xFDD
  6680                           fsr2h	equ	0xFDA
  6681                           fsr2l	equ	0xFD9
  6682                           status	equ	0xFD8
  6683                           
  6684 ;; *************** function ___lbmod *****************
  6685 ;; Defined at:
  6686 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbmod.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  dividend        1    wreg     unsigned char 
  6689 ;;  divisor         1    0[COMRAM] unsigned char 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  dividend        1    1[COMRAM] unsigned char 
  6692 ;;  rem             1    3[COMRAM] unsigned char 
  6693 ;;  counter         1    2[COMRAM] unsigned char 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      unsigned char 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6703 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6704 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6707 ;;Total ram usage:        4 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_qsm_queue_put
  6713 ;;		_qsm_queue_get
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text58
  6718  000756                     __ptext58:
  6719                           	opt stack 0
  6720  000756                     ___lbmod:
  6721                           	opt stack 20
  6722                           
  6723                           ;incstack = 0
  6724                           ;___lbmod@dividend stored from wreg
  6725  000756  6E02               	movwf	___lbmod@dividend,c
  6726  000758  0E08               	movlw	8
  6727  00075A  6E03               	movwf	___lbmod@counter,c
  6728  00075C  0E00               	movlw	0
  6729  00075E  6E04               	movwf	___lbmod@rem,c
  6730  000760                     i2l2723:
  6731  000760  90D8               	bcf	status,0,c
  6732  000762  3402               	rlcf	___lbmod@dividend,w,c
  6733  000764  3404               	rlcf	___lbmod@rem,w,c
  6734  000766  6E04               	movwf	___lbmod@rem,c
  6735  000768  90D8               	bcf	status,0,c
  6736  00076A  3602               	rlcf	___lbmod@dividend,f,c
  6737  00076C  5001               	movf	___lbmod@divisor,w,c
  6738  00076E  5C04               	subwf	___lbmod@rem,w,c
  6739  000770  A0D8               	btfss	status,0,c
  6740  000772  D002               	goto	i2l2731
  6741  000774  5001               	movf	___lbmod@divisor,w,c
  6742  000776  5E04               	subwf	___lbmod@rem,f,c
  6743  000778                     i2l2731:
  6744  000778  2E03               	decfsz	___lbmod@counter,f,c
  6745  00077A  D7F2               	goto	i2l2723
  6746  00077C  5004               	movf	___lbmod@rem,w,c
  6747  00077E  0012               	return	
  6748  000780                     __end_of___lbmod:
  6749                           	opt stack 0
  6750                           tosu	equ	0xFFF
  6751                           tosh	equ	0xFFE
  6752                           tosl	equ	0xFFD
  6753                           pclatu	equ	0xFFB
  6754                           pclath	equ	0xFFA
  6755                           tblptru	equ	0xFF8
  6756                           tblptrh	equ	0xFF7
  6757                           tblptrl	equ	0xFF6
  6758                           tablat	equ	0xFF5
  6759                           prodh	equ	0xFF4
  6760                           prodl	equ	0xFF3
  6761                           intcon	equ	0xFF2
  6762                           intcon2	equ	0xFF1
  6763                           intcon3	equ	0xFF0
  6764                           postinc0	equ	0xFEE
  6765                           fsr0h	equ	0xFEA
  6766                           fsr0l	equ	0xFE9
  6767                           wreg	equ	0xFE8
  6768                           fsr1h	equ	0xFE2
  6769                           fsr1l	equ	0xFE1
  6770                           indf2	equ	0xFDF
  6771                           postinc2	equ	0xFDE
  6772                           postdec2	equ	0xFDD
  6773                           fsr2h	equ	0xFDA
  6774                           fsr2l	equ	0xFD9
  6775                           status	equ	0xFD8
  6776                           
  6777 ;; *************** function _qsm_get_state *****************
  6778 ;; Defined at:
  6779 ;;		line 107 in file "qsm/qsm.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;		None
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;		None
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  1    wreg      enum E15098
  6786 ;; Registers used:
  6787 ;;		wreg, status,2
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6797 ;;Total ram usage:        0 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_ADC_ISR
  6803 ;;		_TMR1_DefaultInterruptHandler
  6804 ;;		_WM_HANDLER_TOGGLE_MODE
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text59
  6809  000AAC                     __ptext59:
  6810                           	opt stack 0
  6811  000AAC                     _qsm_get_state:
  6812                           	opt stack 22
  6813                           
  6814                           ;qsm.c: 109: return qsm_state;
  6815                           
  6816                           ;incstack = 0
  6817  000AAC  5031               	movf	_qsm_state,w,c
  6818  000AAE  0012               	return	
  6819  000AB0                     __end_of_qsm_get_state:
  6820                           	opt stack 0
  6821                           tosu	equ	0xFFF
  6822                           tosh	equ	0xFFE
  6823                           tosl	equ	0xFFD
  6824                           pclatu	equ	0xFFB
  6825                           pclath	equ	0xFFA
  6826                           tblptru	equ	0xFF8
  6827                           tblptrh	equ	0xFF7
  6828                           tblptrl	equ	0xFF6
  6829                           tablat	equ	0xFF5
  6830                           prodh	equ	0xFF4
  6831                           prodl	equ	0xFF3
  6832                           intcon	equ	0xFF2
  6833                           intcon2	equ	0xFF1
  6834                           intcon3	equ	0xFF0
  6835                           postinc0	equ	0xFEE
  6836                           fsr0h	equ	0xFEA
  6837                           fsr0l	equ	0xFE9
  6838                           wreg	equ	0xFE8
  6839                           fsr1h	equ	0xFE2
  6840                           fsr1l	equ	0xFE1
  6841                           indf2	equ	0xFDF
  6842                           postinc2	equ	0xFDE
  6843                           postdec2	equ	0xFDD
  6844                           fsr2h	equ	0xFDA
  6845                           fsr2l	equ	0xFD9
  6846                           status	equ	0xFD8
  6847                           
  6848 ;; *************** function _ADC_GetConversionResult *****************
  6849 ;; Defined at:
  6850 ;;		line 100 in file "mcc_generated_files/adc.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;		None
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2    0[COMRAM] unsigned int 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6867 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6868 ;;Total ram usage:        4 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_ADC_ISR
  6874 ;;		_WM_HANDLER_START_WEIGHING
  6875 ;;		_WM_HANDLER_LOAD_SENSE
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           	psect	text60
  6880  0009D4                     __ptext60:
  6881                           	opt stack 0
  6882  0009D4                     _ADC_GetConversionResult:
  6883                           	opt stack 24
  6884                           
  6885                           ;adc.c: 103: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6886                           
  6887                           ;incstack = 0
  6888  0009D4  50C4               	movf	4036,w,c	;volatile
  6889  0009D6  6E04               	movwf	(??_ADC_GetConversionResult+1)& (0+255),c
  6890  0009D8  6A03               	clrf	??_ADC_GetConversionResult& (0+255),c
  6891  0009DA  50C3               	movf	4035,w,c	;volatile
  6892  0009DC  2403               	addwf	??_ADC_GetConversionResult,w,c
  6893  0009DE  6E01               	movwf	?_ADC_GetConversionResult,c
  6894  0009E0  0E00               	movlw	0
  6895  0009E2  2004               	addwfc	??_ADC_GetConversionResult+1,w,c
  6896  0009E4  6E02               	movwf	?_ADC_GetConversionResult+1,c
  6897  0009E6  0012               	return	
  6898  0009E8                     __end_of_ADC_GetConversionResult:
  6899                           	opt stack 0
  6900                           tosu	equ	0xFFF
  6901                           tosh	equ	0xFFE
  6902                           tosl	equ	0xFFD
  6903                           pclatu	equ	0xFFB
  6904                           pclath	equ	0xFFA
  6905                           tblptru	equ	0xFF8
  6906                           tblptrh	equ	0xFF7
  6907                           tblptrl	equ	0xFF6
  6908                           tablat	equ	0xFF5
  6909                           prodh	equ	0xFF4
  6910                           prodl	equ	0xFF3
  6911                           intcon	equ	0xFF2
  6912                           intcon2	equ	0xFF1
  6913                           intcon3	equ	0xFF0
  6914                           postinc0	equ	0xFEE
  6915                           fsr0h	equ	0xFEA
  6916                           fsr0l	equ	0xFE9
  6917                           wreg	equ	0xFE8
  6918                           fsr1h	equ	0xFE2
  6919                           fsr1l	equ	0xFE1
  6920                           indf2	equ	0xFDF
  6921                           postinc2	equ	0xFDE
  6922                           postdec2	equ	0xFDD
  6923                           fsr2h	equ	0xFDA
  6924                           fsr2l	equ	0xFD9
  6925                           status	equ	0xFD8
  6926                           tosu	equ	0xFFF
  6927                           tosh	equ	0xFFE
  6928                           tosl	equ	0xFFD
  6929                           pclatu	equ	0xFFB
  6930                           pclath	equ	0xFFA
  6931                           tblptru	equ	0xFF8
  6932                           tblptrh	equ	0xFF7
  6933                           tblptrl	equ	0xFF6
  6934                           tablat	equ	0xFF5
  6935                           prodh	equ	0xFF4
  6936                           prodl	equ	0xFF3
  6937                           intcon	equ	0xFF2
  6938                           intcon2	equ	0xFF1
  6939                           intcon3	equ	0xFF0
  6940                           postinc0	equ	0xFEE
  6941                           fsr0h	equ	0xFEA
  6942                           fsr0l	equ	0xFE9
  6943                           wreg	equ	0xFE8
  6944                           fsr1h	equ	0xFE2
  6945                           fsr1l	equ	0xFE1
  6946                           indf2	equ	0xFDF
  6947                           postinc2	equ	0xFDE
  6948                           postdec2	equ	0xFDD
  6949                           fsr2h	equ	0xFDA
  6950                           fsr2l	equ	0xFD9
  6951                           status	equ	0xFD8
  6952                           
  6953                           	psect	text61
  6954  000000                     __ptext61:
  6955                           	opt stack 0
  6956                           tosu	equ	0xFFF
  6957                           tosh	equ	0xFFE
  6958                           tosl	equ	0xFFD
  6959                           pclatu	equ	0xFFB
  6960                           pclath	equ	0xFFA
  6961                           tblptru	equ	0xFF8
  6962                           tblptrh	equ	0xFF7
  6963                           tblptrl	equ	0xFF6
  6964                           tablat	equ	0xFF5
  6965                           prodh	equ	0xFF4
  6966                           prodl	equ	0xFF3
  6967                           intcon	equ	0xFF2
  6968                           intcon2	equ	0xFF1
  6969                           intcon3	equ	0xFF0
  6970                           postinc0	equ	0xFEE
  6971                           fsr0h	equ	0xFEA
  6972                           fsr0l	equ	0xFE9
  6973                           wreg	equ	0xFE8
  6974                           fsr1h	equ	0xFE2
  6975                           fsr1l	equ	0xFE1
  6976                           indf2	equ	0xFDF
  6977                           postinc2	equ	0xFDE
  6978                           postdec2	equ	0xFDD
  6979                           fsr2h	equ	0xFDA
  6980                           fsr2l	equ	0xFD9
  6981                           status	equ	0xFD8
  6982                           
  6983                           	psect	rparam
  6984  0000                     tosu	equ	0xFFF
  6985                           tosh	equ	0xFFE
  6986                           tosl	equ	0xFFD
  6987                           pclatu	equ	0xFFB
  6988                           pclath	equ	0xFFA
  6989                           tblptru	equ	0xFF8
  6990                           tblptrh	equ	0xFF7
  6991                           tblptrl	equ	0xFF6
  6992                           tablat	equ	0xFF5
  6993                           prodh	equ	0xFF4
  6994                           prodl	equ	0xFF3
  6995                           intcon	equ	0xFF2
  6996                           intcon2	equ	0xFF1
  6997                           intcon3	equ	0xFF0
  6998                           postinc0	equ	0xFEE
  6999                           fsr0h	equ	0xFEA
  7000                           fsr0l	equ	0xFE9
  7001                           wreg	equ	0xFE8
  7002                           fsr1h	equ	0xFE2
  7003                           fsr1l	equ	0xFE1
  7004                           indf2	equ	0xFDF
  7005                           postinc2	equ	0xFDE
  7006                           postdec2	equ	0xFDD
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011                           	psect	temp
  7012  000046                     btemp:
  7013                           	opt stack 0
  7014  000046                     	ds	1
  7015  0000                     int$flags	set	btemp
  7016                           tosu	equ	0xFFF
  7017                           tosh	equ	0xFFE
  7018                           tosl	equ	0xFFD
  7019                           pclatu	equ	0xFFB
  7020                           pclath	equ	0xFFA
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           prodh	equ	0xFF4
  7026                           prodl	equ	0xFF3
  7027                           intcon	equ	0xFF2
  7028                           intcon2	equ	0xFF1
  7029                           intcon3	equ	0xFF0
  7030                           postinc0	equ	0xFEE
  7031                           fsr0h	equ	0xFEA
  7032                           fsr0l	equ	0xFE9
  7033                           wreg	equ	0xFE8
  7034                           fsr1h	equ	0xFE2
  7035                           fsr1l	equ	0xFE1
  7036                           indf2	equ	0xFDF
  7037                           postinc2	equ	0xFDE
  7038                           postdec2	equ	0xFDD
  7039                           fsr2h	equ	0xFDA
  7040                           fsr2l	equ	0xFD9
  7041                           status	equ	0xFD8


Data Sizes:
    Strings     465
    Constant    171
    Data        1
    BSS         45
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      69
    BANK0           160     24      50
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_28(CODE[16]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[18]), 
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_19(CODE[15]), STR_18(CODE[32]), STR_17(CODE[28]), 
		 -> STR_16(CODE[9]), STR_15(CODE[10]), STR_14(CODE[9]), STR_13(CODE[25]), 
		 -> STR_12(CODE[16]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[29]), 
		 -> STR_8(CODE[13]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[26]), 
		 -> STR_4(CODE[25]), STR_3(CODE[26]), STR_2(CODE[19]), STR_1(CODE[19]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 24
		 -> qsm_queue(BANK0[24]), 

    qsm_queue_put@b	PTR struct qsm_queue_s size(2) Largest target is 24
		 -> qsm_queue(BANK0[24]), 

    qsm_queue_isfull@b	PTR const struct qsm_queue_s size(2) Largest target is 24
		 -> qsm_queue(BANK0[24]), 

    qsm_queue_count@b	PTR const struct qsm_queue_s size(2) Largest target is 24
		 -> qsm_queue(BANK0[24]), 

    S1768qsm_lookup_table_e$event_handler	PTR FTN()void [11] size(2) Largest target is 1
		 -> WM_HANDLER_TIMER_DONE(), WM_HANDLER_FAULT_SENSE(), WM_HANDLER_WATER_LEVEL_SENSE(), WM_HANDLER_LOAD_SENSE(), 
		 -> WM_HANDLER_TOGGLE_MODE(), WM_HANDLER_START_RUNNING(), WM_HANDLER_START_WEIGHING(), WM_HANDLER_NONE(), 
		 -> WM_HANDLER_INIT(), 

    qsm_lookup_table.event_handler	PTR FTN()void [11] size(2) Largest target is 1
		 -> WM_HANDLER_TIMER_DONE(), WM_HANDLER_FAULT_SENSE(), WM_HANDLER_WATER_LEVEL_SENSE(), WM_HANDLER_LOAD_SENSE(), 
		 -> WM_HANDLER_TOGGLE_MODE(), WM_HANDLER_START_RUNNING(), WM_HANDLER_START_WEIGHING(), WM_HANDLER_NONE(), 
		 -> WM_HANDLER_INIT(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_INT0_ISR
    _INTERRUPT_InterruptManagerHigh->_INT1_ISR
    _TMR0_DefaultInterruptHandler->_qsm_post_event
    _INT1_ISR->_qsm_post_event
    _INT0_ISR->_qsm_post_event
    _CCP5_CaptureISR->_CCP5_CallBack
    _ADC_ISR->_qsm_post_event
    _qsm_post_event->_qsm_queue_put
    _qsm_queue_put->_qsm_queue_isfull
    _qsm_queue_isfull->_qsm_queue_count

Critical Paths under _main in BANK0

    _capture_tb->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4654
                  _SYSTEM_Initialize
                         _capture_tb
                          _motor_off
 ---------------------------------------------------------------------------------
 (1) _motor_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _capture_tb                                           0     0      0    4049
                      _get_frequency
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              21    17      4    4049
                                             12 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                      _get_frequency (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _get_frequency                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     121
                                              2 BANK0      2     2      0
           _TMR3_SetInterruptHandler
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                              2 BANK0      2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     242
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManagerHigh                      14    14      0    4447
                                             20 COMRAM    14    14      0
                            _ADC_ISR
                    _CCP5_CaptureISR
                           _INT0_ISR
                           _INT1_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR3_ISR                                             0     0      0       0
                      _TMR3_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
                      _qsm_get_state
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    1081
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0    1081
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0    1081
                        _TMR0_Reload
                     _qsm_post_event
                        _set_count_m
                   i2_TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (9) i2_TMR0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _set_count_m                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             1     1      0    1059
                                             19 COMRAM     1     1      0
                      _INT1_CallBack
                     _qsm_post_event
 ---------------------------------------------------------------------------------
 (7) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             1     1      0    1059
                                             19 COMRAM     1     1      0
                      _INT0_CallBack
                     _qsm_post_event
 ---------------------------------------------------------------------------------
 (7) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP5_CaptureISR                                      2     2      0     167
                                              4 COMRAM     2     2      0
                      _CCP5_CallBack
 ---------------------------------------------------------------------------------
 (7) _CCP5_CallBack                                        4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0    1081
            _ADC_GetConversionResult
                      _qsm_get_state
                     _qsm_post_event
                            _set_out
 ---------------------------------------------------------------------------------
 (7) _set_out                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _qsm_post_event                                       1     1      0    1059
                                             18 COMRAM     1     1      0
                      _qsm_queue_put
 ---------------------------------------------------------------------------------
 (10) _qsm_queue_put                                       5     2      3    1037
                                             13 COMRAM     5     2      3
                            ___lbmod
                   _qsm_queue_isfull
 ---------------------------------------------------------------------------------
 (11) _qsm_queue_isfull                                    6     4      2     408
                                              7 COMRAM     6     4      2
                    _qsm_queue_count
 ---------------------------------------------------------------------------------
 (12) _qsm_queue_count                                     7     5      2     242
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (11) ___lbmod                                             4     3      1     257
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (9) _qsm_get_state                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversionResult                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StopTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StopTimer
   _capture_tb
     _get_frequency
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _get_frequency (ARG)
       _putch (ARG)
         _EUSART1_Write
   _motor_off

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _ADC_ISR
     _ADC_GetConversionResult
     _qsm_get_state
     _qsm_post_event
       _qsm_queue_put
         ___lbmod
         _qsm_queue_isfull
           _qsm_queue_count
     _set_out
   _CCP5_CaptureISR
     _CCP5_CallBack
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
     _qsm_post_event
       _qsm_queue_put
         ___lbmod
         _qsm_queue_isfull
           _qsm_queue_count
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
     _qsm_post_event
       _qsm_queue_put
         ___lbmod
         _qsm_queue_isfull
           _qsm_queue_count
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
         _TMR0_Reload
         _qsm_post_event
           _qsm_queue_put
             ___lbmod
             _qsm_queue_isfull
               _qsm_queue_count
         _set_count_m
         i2_TMR0_StopTimer
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
         _qsm_get_state
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      32       5       31.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      45       1       73.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      77       6        0.0%
DATA                 0      0      77       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Sep 06 14:57:20 2017

                          ?_qsm_get_state 0001                             _qsm_queue_put 03DE  
                          _qsm_post_event 09C0                               __CFG_BORV$3 000000  
                         _timer0ReloadVal 0044                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l441 0A2E  
                                     l844 09F8                              __CFG_CPB$OFF 000000  
                                     _PR2 000FCB                              __CFG_CPD$OFF 000000  
              ??_INT0_SetInterruptHandler 007A                           _timer1ReloadVal 003E  
                         _qsm_queue_count 05D6                           __end_of_ADC_ISR 03DE  
                                     _out 0034                           _TMR2_Initialize 09AC  
                                     tosl 000FFD                                       wreg 000FE8  
                           _INT0_CallBack 08DA                           _CCP5_Initialize 094C  
                           _INT1_CallBack 08BC                                      l1057 0138  
                         _timer3ReloadVal 0038                                      l1474 04DA  
                                    l1484 053C                                      l3711 0190  
                                    l3705 0170                                      l3571 0496  
                                    l3723 01CC                                      l3581 04CC  
                                    l3573 049C                                      l3733 023E  
                                    l3709 018A                                      l3591 0504  
                                    l3727 01E0                                      l3735 024A  
                                    l3569 048A                                      l3593 050A  
                                    l3729 01E6                                      l3683 00E2  
                                    l3597 052E                                      l3589 04F8  
                                    l3693 0104                                      l3765 0862  
                                    l3687 00F6                                      l3689 00FE  
                                    _P1M1 007DDF                                      STR_1 FF00  
                                    STR_2 FEED                                      STR_3 FEA1  
                                    STR_4 FEBB                                      STR_5 FE87  
                                    STR_6 FFC8                                      STR_7 FFD6  
                                    STR_9 FE4E                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _TMR2 000FCC                                      _WPUB 000F5B  
                           _EUSART1_Write 0A2A                                      _main 09E8  
                                    _mode 0030                          _qsm_queue_isfull 061E  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0046  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00D0                             __CFG_IESO$OFF 000000  
                         _TMR3_Initialize 0546                ??_TMR1_SetInterruptHandler 007A  
                  __end_of_qsm_post_event 09D4                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                   __end_of_CCP5_CaptureISR 0996  
                          ?_qsm_queue_put 000E                   __end_of_TMR0_Initialize 0756  
                        __end_of_INT0_ISR 094C                          __end_of_INT1_ISR 0930  
          ??_TMR0_DefaultInterruptHandler 0014            __size_of_OSCILLATOR_Initialize 0012  
           __end_of_OSCILLATOR_Initialize 0A0C                                     ?_main 0001  
                                   STR_10 FF99                                     STR_11 FF58  
                                   STR_12 FFA9                                     STR_13 FED4  
                                   STR_14 FFED                                     STR_22 FF79  
                                   STR_15 FFE3                                     STR_23 FF36  
                                   STR_16 FFF6                                     STR_24 FF25  
                                   STR_25 FF13                                     STR_17 FE6B  
                                   STR_26 FF89                                     STR_18 FE2E  
                                   STR_19 FFB9                                     STR_27 FF47  
                                   STR_28 FF69                           __end_of___lbmod 0780  
                         _TMR1_StartTimer 0A9C                                     _T0CON 000FD5  
                                   _T1CON 000FCD                                     _T2CON 000FCA  
                                   _T3CON 000FB1                                     _LATE0 007C68  
                                   _LATE1 007C69                                     _LATE2 007C6A  
                         __end_of___lwdiv 04E4                           __end_of___lwmod 0546  
                                   i2l300 03DA                                     i2l180 004E  
                                   i2l190 008A                                     i2l182 005A  
                                   i2l184 0066                                     i2l186 0072  
                                   i2l194 0094                                     i2l188 007E  
                                   i2l394 0272                                     i2l807 045C  
                                   _TMR0H 000FD7                                     _TMR1H 000FCF  
                                   _TMR0L 000FD6                                     _TMR1L 000FCE  
                                   _TMR3H 000FB3                                     _TMR3L 000FB2  
                                   _TRISA 000F92                                     _TRISB 000F93  
                          ?_INT0_CallBack 0001                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
        __size_of_ADC_GetConversionResult 0014         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000         __size_of_TMR3_SetInterruptHandler 000A  
               ?_TMR0_SetInterruptHandler 0078                             __CFG_WRT3$OFF 000000  
               ?_TMR3_SetInterruptHandler 0078                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 083E                          __end_of_TMR1_ISR 07D0  
                           __CFG_WRTB$OFF 000000                          __end_of_TMR3_ISR 07A8  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          ?_INT1_CallBack 0001                            __CFG_EBTRB$OFF 000000  
          ??_TMR3_DefaultInterruptHandler 0001                  __end_of_qsm_lookup_table FE24  
                         __end_of_dpowers FE2E            ??_INT1_DefaultInterruptHandler 0001  
                                   _state 0037                                     _putch 0A1C  
                _INT1_SetInterruptHandler 0A6A                            ?_EUSART1_Write 0001  
                 __end_of_TMR1_Initialize 05D6                           ??_get_frequency 007A  
                                   pclath 000FFA                                     tablat 000FF5  
                         __end_of_set_out 0A8E                                     status 000FD8  
                         _TMR2_StartTimer 0A98                    __size_of_CCP5_CallBack 0026  
                         ??_qsm_get_state 0001                           ?_qsm_post_event 0001  
                         __initialization 0698                __end_of_EUSART1_Initialize 09AC  
                            __end_of_main 09FA                   __end_of_qsm_queue_count 061E  
                 __end_of_TMR2_Initialize 09C0                                 ??_ADC_ISR 0014  
                                  ??_main 0090                   __end_of_CCP5_Initialize 0966  
                           __activetblptr 000003                     _TMR3_InterruptHandler 0090  
                          __CFG_RETEN$OFF 000000                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
               __size_ofi2_TMR0_StopTimer 0004                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBD  
                                  _CCPR1L 000FBC                                    _CCPR5H 000F49  
                                  _CCPR5L 000F48                                    _ANCON0 000F5D  
                                  _ANCON1 000F5C                                    ?_putch 0001  
                                  _T1GCON 000FAA                                    _T3GCON 000FB0  
                 __end_of_TMR3_Initialize 058E                           __CFG_BBSIZ$BB2K 000000  
                                  i2l3051 0332                                    i2l3053 033A  
                                  i2l3071 038E                                    i2l3055 0342  
                                  i2l3065 0370                                    i2l3057 034A  
                                  i2l3059 0352                            __CFG_WDTEN$OFF 000000  
                                  i2l3079 03AC                                    i2l2705 05E8  
                                  i2l2731 0778                                    i2l2723 0760  
                                  i2l2707 061A                                    i2l2715 0630  
                                  i2l2803 02EE                                    i2l2717 065C  
                                  i2l2807 02F4                                    i2l2747 044C  
                                  i2l2781 02A4                                    i2l2773 026C  
                                  i2l2783 02AA                                    i2l2775 0292  
                                  i2l2793 02CC                                    i2l2785 02B0  
                                  i2l2777 0298                                    i2l2795 02D2  
                                  i2l2779 029E                                    i2l2789 02BE  
                                  i2l2799 02E0                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                           ??_qsm_queue_put 0011  
                          __CFG_XINST$OFF 000000                              ?_set_count_m 0001  
    __end_of_TMR1_DefaultInterruptHandler 0330     __size_of_TMR1_DefaultInterruptHandler 00C6  
            _TMR1_DefaultInterruptHandler 026A                              ?_TMR0_Reload 0001  
                        ?_CCP5_CaptureISR 0001                   __end_of_TMR1_StartTimer 0AA0  
                          __CFG_STVREN$ON 000000                                 ??___lbmod 0002  
                               ??___lwdiv 007C                                 ??___lwmod 0083  
                        ?_TMR0_Initialize 0001                                    clear_0 06B0  
                                  clear_1 06BC                                    _printf 00D4  
                                  _state2 0045                           ??_INT0_CallBack 0001  
                   _WM_HANDLER_LOAD_SENSE 000000                              __pdataCOMRAM 0045  
                           _CCP5_CallBack 07D0                           ??_INT1_CallBack 0001  
                            __mediumconst FD82                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                               ??_set_out 0001                     __end_of_TMR0_CallBack 08BC  
                         ??_EUSART1_Write 0078                   __end_of_TMR2_StartTimer 0A9C  
TMR3_SetInterruptHandler@InterruptHandler 0078  TMR0_SetInterruptHandler@InterruptHandler 0078  
TMR1_SetInterruptHandler@InterruptHandler 0078  INT0_SetInterruptHandler@InterruptHandler 0078  
INT1_SetInterruptHandler@InterruptHandler 0078             __size_of_INTERRUPT_Initialize 0010  
                   __end_of_TMR1_CallBack 089E                          ?_TMR1_Initialize 0001  
        ??_INTERRUPT_InterruptManagerHigh 0015           ?_INTERRUPT_InterruptManagerHigh 0001  
                       _SYSTEM_Initialize 06CC                           ___lbmod@divisor 0001  
                              __accesstop 0060                   __end_of__initialization 06C2  
                         ___lbmod@counter 0003                                 ?_INT0_ISR 0001  
                               ?_INT1_ISR 0001                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                     __end_of_TMR3_CallBack 081A  
                        qsm_queue_count@b 0001                         ?_EPWM1_Initialize 0001  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 007C  
                               ?_TMR0_ISR 0001                                 ?_TMR1_ISR 0001  
           ?_TMR1_DefaultInterruptHandler 0001                                 ?_TMR3_ISR 0001  
                      ??_EPWM1_Initialize 0078                          ?_qsm_queue_count 0001  
                           __end_of_putch 0A2A                          ?_TMR2_Initialize 0001  
                __end_of_qsm_queue_isfull 0660                          ?_CCP5_Initialize 0001  
                   _WM_HANDLER_TIMER_DONE 000000                            ?_CCP5_CallBack 0001  
                 _ADC_GetConversionResult 09D4               __size_of_EXT_INT_Initialize 002E  
                   TMR0_ISR@CountCallBack 0025                     TMR3_ISR@CountCallBack 0023  
               __end_of_SYSTEM_Initialize 06FE                                   ??_putch 0079  
                              __pbssBANK0 0060                          ?_TMR3_Initialize 0001  
                         __CFG_PLLCFG$OFF 000000                     _INT0_InterruptHandler 0040  
                              ??_INT0_ISR 0014                                ??_INT1_ISR 0014  
                              __pnvCOMRAM 0038                    _WM_HANDLER_FAULT_SENSE 000000  
                              _capture_tb 0862          __end_of_TMR0_SetInterruptHandler 0A6A  
                 __size_of_TMR0_StopTimer 0004          __end_of_TMR3_SetInterruptHandler 0A56  
                        ?_TMR1_StartTimer 0001                                ??_TMR0_ISR 0014  
                              ??_TMR1_ISR 0001                                ??_TMR3_ISR 0001  
                                 _CCP1CON 000FBB                                   _CCP5CON 000F47  
                                 _ECCP1AS 000FBF                                   _ADC_ISR 0330  
                                 ?_printf 0084                   __size_of_ADC_Initialize 0018  
                      __size_of_motor_off 000A                ??_INT1_SetInterruptHandler 007A  
                        __CFG_CANMX$PORTB 000000                                   _REFOCON 000F9A  
            _WM_HANDLER_WATER_LEVEL_SENSE 000000                                   _OSCCON2 000FD2  
                                 i2u27_48 08C8                                   i2u29_48 08E6  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000F7D  
                        i2_TMR0_StopTimer 0AA8                          ?_TMR2_StartTimer 0001  
                        ??_qsm_post_event 0013         __size_of_INT0_SetInterruptHandler 000A  
                 __size_of_TMR3_StopTimer 0004                 ?_INT0_SetInterruptHandler 0078  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                                   ___lbmod 0756  
                    __size_of_set_count_m 0008                                   ___lwdiv 046C  
                                 ___lwmod 04E4                                _duration_m 0035  
                              _duration_s 0032                      __size_of_TMR0_Reload 0006  
               ??_ADC_GetConversionResult 0003                                   __pcinit 0698  
                         ??_CCP5_CallBack 0003                                   __ramtop 0F00  
                                 __ptext0 09E8                                   __ptext1 0A38  
                                 __ptext2 0862                                   __ptext3 00D4  
                                 __ptext4 0A1C                                   __ptext5 0A2A  
                                 __ptext6 04E4                                   __ptext7 046C  
                                 __ptext8 0A42                                   __ptext9 06CC  
                         __size_of_printf 0196                                 _T0CONbits 000FD5  
          ??_TMR1_DefaultInterruptHandler 0001                                 _T1CONbits 000FCD  
                                 _count_m 0036                                   _count_s 0033  
                                 _dpowers FE24                     _OSCILLATOR_Initialize 09FA  
                               _T2CONbits 000FCA                                 _T3CONbits 000FB1  
       __size_of_TMR1_SetInterruptHandler 000A                        _EUSART1_Initialize 0996  
                                 _payload 0029                  ??_PIN_MANAGER_Initialize 0078  
               ?_TMR1_SetInterruptHandler 0078                         __CFG_MSSPMSK$MSK7 000000  
                                 _set_out 0A86                __size_of_SYSTEM_Initialize 0032  
                    end_of_initialization 06C2                       ?_EUSART1_Initialize 0001  
                   __end_of_get_frequency 0A4C                         __end_of_motor_off 0A42  
                          set_count_m@val 0001                               ?_capture_tb 0001  
                                 printf@c 008F                                   printf@f 0084  
                   __end_of_qsm_get_state 0AB0                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                    ??_EUSART1_Initialize 0078                  _TMR0_SetInterruptHandler 0A60  
                   _INT1_InterruptHandler 0042                  _TMR3_SetInterruptHandler 0A4C  
                        __CFG_FOSC$INTIO1 000000                          ___lbmod@dividend 0002  
              CCP5_CallBack@capturedValue 0001                       EUSART1_Write@txData 0078  
                             ___lbmod@rem 0004                               _CCP1CONbits 000FBB  
                       __size_of_INT0_ISR 001C                         __size_of_INT1_ISR 001C  
                          _TMR0_StopTimer 0AA0                    qsm_queue_put@data_byte 0010  
                   __end_of_qsm_queue_put 046C                         qsm_queue_isfull@b 0008  
            __end_of_INTERRUPT_Initialize 0A1C      __end_of_INT0_DefaultInterruptHandler 0AB4  
   __size_of_INT0_DefaultInterruptHandler 0002              _INT0_DefaultInterruptHandler 0AB2  
                           __pidataCOMRAM 0AB4                  _WM_HANDLER_START_RUNNING 000000  
                       __size_of_TMR0_ISR 0024                         __size_of_TMR1_ISR 0028  
                       __size_of_TMR3_ISR 0028                            _ADC_Initialize 0966  
                  ?_OSCILLATOR_Initialize 0001                  __size_of_CCP5_CaptureISR 0018  
                          __end_of_printf 026A                         ?_qsm_queue_isfull 0008  
                   __end_of_INT0_CallBack 08F8                       start_initialization 0698  
               __size_of_EPWM1_Initialize 001C                        ??_qsm_queue_isfull 000A  
                __size_of_TMR0_Initialize 002A           __size_of_PIN_MANAGER_Initialize 0038  
                   __end_of_INT1_CallBack 08DA                            qsm_queue_put@b 000E  
                     __size_of_capture_tb 001E                               putch@txData 0079  
                   __end_of_EUSART1_Write 0A38                            _TMR3_StopTimer 0A94  
                  __end_of_TMR0_StopTimer 0AA4                    _WM_HANDLER_TOGGLE_MODE 000000  
                __size_of_TMR1_Initialize 0048                  __end_ofi2_TMR0_StopTimer 0AAC  
                             _CCPTMRSbits 000F99                    __size_of_TMR0_CallBack 001E  
                  __end_of_ADC_Initialize 097E                                  ?_ADC_ISR 0001  
              __end_of_EXT_INT_Initialize 072C             ?_INT0_DefaultInterruptHandler 0001  
                  __size_of_TMR1_CallBack 001E                                  ??_printf 0088  
                   TMR1_ISR@CountCallBack 0027                               __pbssCOMRAM 0023  
        __end_of_INT0_SetInterruptHandler 0A7E                  __size_of_qsm_queue_count 0048  
                           __pcstackBANK0 0078                  __size_of_TMR2_Initialize 0014  
                  __size_of_TMR3_CallBack 0024                  __size_of_CCP5_Initialize 001A  
                  __end_of_TMR3_StopTimer 0A98                     _TMR0_InterruptHandler 003A  
                               __pnvBANK0 0090                           ?_TMR0_StopTimer 0001  
                        ___lwdiv@dividend 0078                    _PIN_MANAGER_Initialize 0660  
                __size_of_TMR3_Initialize 0048                                 __pintcode 0008  
        __end_of_TMR1_SetInterruptHandler 0A60                             __pmediumconst FD82  
                                ?___lbmod 0001                                  ?___lwdiv 0078  
                                ?___lwmod 007F                           ?_ADC_Initialize 0001  
               _WM_HANDLER_START_WEIGHING 000000                           _WM_HANDLER_INIT 000000  
                                _ECCP1DEL 000FBE                           _WM_HANDLER_NONE 000000  
                                _BAUDCON1 000FA7                  __size_of_TMR1_StartTimer 0004  
                                ?_set_out 0001                                 _frequency 002D  
                        ___lwdiv@quotient 007D                             _TMR0_CallBack 089E  
                       ??_CCP5_CaptureISR 0005                            __size_of_putch 000E  
                    _INTERRUPT_Initialize 0A0C                           ?_TMR3_StopTimer 0001  
                   _qsm_queue_isfull$2025 000C                             _TMR1_CallBack 0880  
                       ??_TMR0_Initialize 007A                                  _INT0_ISR 0930  
                                _INT1_ISR 0914         __size_of_INT1_SetInterruptHandler 000A  
               ?_INT1_SetInterruptHandler 0078                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _IPR4bits 000FB8                                  _PIE2bits 000FA0  
                                _PIE4bits 000FB6                                set_out@val 0001  
                __size_of_TMR2_StartTimer 0004                                  i2u100_40 0656  
                                i2u101_40 0658                                  i2u110_40 028E  
                                i2u106_40 027A                             ??_set_count_m 0001  
                                i2u107_45 027C                                  i2u140_40 039E  
                                i2u108_40 0284                                  i2u124_48 088C  
                                i2u109_45 0286                                  i2u126_48 08AA  
                                i2u143_40 07C2                                  i2u223_47 091A  
                                i2u224_47 0936                                  i2u128_48 0806  
              ??_TMR0_SetInterruptHandler 007A                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR4bits 000FB7  
              ??_TMR3_SetInterruptHandler 007A                             _TMR3_CallBack 07F6  
                            ??_capture_tb 0090                             ??_TMR0_Reload 0001  
                                _RCONbits 000FD0                                 _motor_off 0A38  
                                _TMR0_ISR 081A                                  _TMR1_ISR 07A8  
                                _TMR3_ISR 0780                                  _PSTR1CON 000F9C  
                               _qsm_queue 0060                                 _qsm_state 0031  
                       ??_TMR1_Initialize 007A                          __size_of_ADC_ISR 00AE  
                              _ADCON0bits 000FC2                          __CFG_SOSCSEL$DIG 000000  
                   __end_of_CCP5_CallBack 07F6                                printf@flag 008C  
                     qsm_post_event@event 0013                                printf@prec 0089  
                        _EPWM1_Initialize 08F8            ??_INT0_DefaultInterruptHandler 0001  
                          ?_TMR0_CallBack 0001                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                     ?_INTERRUPT_Initialize 0001  
                      __end_of_capture_tb 0880                  _INT0_SetInterruptHandler 0A74  
                          ?_TMR1_CallBack 0001                         ??_qsm_queue_count 0003  
                       ??_TMR2_Initialize 0078                         ??_CCP5_Initialize 0078  
                          ?_TMR3_CallBack 0001                                  __Hrparam 0000  
                    _qsm_queue_count$2016 0006                                  __Lrparam 0000  
                ?_ADC_GetConversionResult 0001                        __CFG_BOREN$SBORDIS 000000  
                              ?_motor_off 0001                   ??_OSCILLATOR_Initialize 0078  
                 __size_of_qsm_post_event 0014                          __size_of___lbmod 002A  
             __size_of_EUSART1_Initialize 0016                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                       __end_of_set_count_m 0A86  
                       ??_TMR3_Initialize 007A                  _TMR1_SetInterruptHandler 0A56  
                     __end_of_TMR0_Reload 0A94                     _TMR1_InterruptHandler 003C  
                  __size_of_get_frequency 000A                           ___lwdiv@divisor 007A  
                         ___lwdiv@counter 007C                                  __ptext10 0546  
                                __ptext11 0A94                                  __ptext20 0A60  
                                __ptext12 0A4C                                  __ptext21 0660  
                                __ptext13 09AC                                _T1GCONbits 000FAA  
                                __ptext30 0966                                  __ptext22 09FA  
                                __ptext14 0A98                                  __ptext23 0A0C  
                                __ptext15 058E                                  __ptext40 083E  
                                __ptext32 0780                                  __ptext24 06FE  
                                __ptext16 0A9C                                  __ptext41 0AA8  
                                __ptext33 07F6                                  __ptext25 0A6A  
                                __ptext17 0A56                                  __ptext50 097E  
                                __ptext42 0A7E                                  __ptext34 0AA4  
                                __ptext26 0A74                                  __ptext18 072C  
                                __ptext51 07D0                                  __ptext43 0A8E  
                                __ptext35 07A8                                  __ptext27 0996  
                                __ptext19 0AA0                                  __ptext60 09D4  
                                __ptext52 0330                                  __ptext44 0914  
                                __ptext36 0880                                  __ptext28 08F8  
                                __ptext61 0000                                  __ptext53 0A86  
                                __ptext45 08BC                                  __ptext37 026A  
                                __ptext29 094C                                  __ptext54 09C0  
                                __ptext46 0AB0                                  __ptext38 081A  
                                __ptext55 03DE                                  __ptext47 0930  
                                __ptext39 089E                                  __ptext56 061E  
                                __ptext48 08DA                                  __ptext57 05D6  
                                __ptext49 0AB2                                  __ptext58 0756  
                                __ptext59 0AAC                          __size_of_set_out 0008  
                  __size_of_qsm_get_state 0004                         ??_TMR1_StartTimer 0078  
                              _T3GCONbits 000FB0                               _old_capture 002B  
                           __size_of_main 0012                 __size_of_qsm_queue_isfull 0042  
    __end_of_TMR0_DefaultInterruptHandler 0862     __size_of_TMR0_DefaultInterruptHandler 0024  
            _TMR0_DefaultInterruptHandler 083E                          _qsm_lookup_table FD83  
                                int$flags 0046                         ?i2_TMR0_StopTimer 0001  
                       ??_TMR2_StartTimer 0078                                 printf@val 008D  
    __end_of_TMR3_DefaultInterruptHandler 0AA8     __size_of_TMR3_DefaultInterruptHandler 0004  
            _TMR3_DefaultInterruptHandler 0AA4                       __CFG_INTOSCSEL$HIGH 000000  
                      ??i2_TMR0_StopTimer 0001      __end_of_INT1_DefaultInterruptHandler 0AB2  
   __size_of_INT1_DefaultInterruptHandler 0002              _INT1_DefaultInterruptHandler 0AB0  
                              _INTCONbits 000FF2                           ??_TMR0_CallBack 0014  
                  ??_INTERRUPT_Initialize 0078                           ??_TMR1_CallBack 0001  
                      _EXT_INT_Initialize 06FE                    __size_of_qsm_queue_put 008E  
                                intlevel2 0000                          ??_TMR0_StopTimer 0078  
                        ___lwmod@dividend 007F                   ?_PIN_MANAGER_Initialize 0001  
         __end_of_ADC_GetConversionResult 09E8                           ??_TMR3_CallBack 0001  
                     ?_EXT_INT_Initialize 0001                             _get_frequency 0A42  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 0078  
                  __size_of_INT0_CallBack 001E             ?_TMR0_DefaultInterruptHandler 0001  
                             _set_count_m 0A7E                               _TMR0_Reload 0A8E  
                             ??_motor_off 0078                                  printf@ap 008A  
                  __size_of_INT1_CallBack 001E                             _qsm_get_state 0AAC  
                      __CFG_WDTPS$1048576 000000                    __size_of_EUSART1_Write 000E  
                         _CCP5_CaptureISR 097E    __end_of_INTERRUPT_InterruptManagerHigh 00D0  
 __size_of_INTERRUPT_InterruptManagerHigh 00C8            _INTERRUPT_InterruptManagerHigh 0008  
                    ??_EXT_INT_Initialize 007A                     CCP5_CaptureISR@module 0005  
           ?_TMR3_DefaultInterruptHandler 0001             ?_INT1_DefaultInterruptHandler 0001  
                         ___lwmod@divisor 0081                           _TMR0_Initialize 072C  
                         ___lwmod@counter 0083                          ??_TMR3_StopTimer 0078  
        __end_of_INT1_SetInterruptHandler 0A74                               _weight_flag 002F  
          __end_of_PIN_MANAGER_Initialize 0698                       __CFG_BORPWR$ZPBORMV 000000  
                          ?_get_frequency 0078                           _TMR1_Initialize 058E  
                __end_of_EPWM1_Initialize 0914  
