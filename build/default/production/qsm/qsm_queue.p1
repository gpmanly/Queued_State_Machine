Version 3.2 HI-TECH Software Intermediate Code
"40 qsm/qsm_queue.c
[c E109 0 1 2 .. ]
[n E109 qsm_queue_resp_e QSM_QUEUE_OK QSM_QUEUE_EMPTY QSM_QUEUE_FULL  ]
"40 qsm/qsm_queue.h
[s S1 `uc 1 `uc 1 `uc -> 20 `i `uc 1 `E109 1 ]
[n S1 qsm_queue_s head tail buffer buffer_len status ]
"16 C:\Program Files (x86)\Microchip\xc8\v1.42\include\string.h
[v _memset `(*v ~T0 @X0 0 ef3`*v`i`ui ]
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 38: typedef signed long int int32_t;
[; ;stdint.h: 45: typedef unsigned char uint8_t;
[; ;stdint.h: 51: typedef unsigned int uint16_t;
[; ;stdint.h: 67: typedef unsigned long int uint32_t;
[; ;stdint.h: 75: typedef signed char int_least8_t;
[; ;stdint.h: 82: typedef signed int int_least16_t;
[; ;stdint.h: 104: typedef signed long int int_least32_t;
[; ;stdint.h: 111: typedef unsigned char uint_least8_t;
[; ;stdint.h: 117: typedef unsigned int uint_least16_t;
[; ;stdint.h: 136: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 145: typedef signed char int_fast8_t;
[; ;stdint.h: 152: typedef signed int int_fast16_t;
[; ;stdint.h: 174: typedef signed long int int_fast32_t;
[; ;stdint.h: 181: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 187: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 206: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 212: typedef int32_t intmax_t;
[; ;stdint.h: 217: typedef uint32_t uintmax_t;
[; ;stdint.h: 222: typedef int16_t intptr_t;
[; ;stdint.h: 227: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;qsm_queue.h: 32: typedef enum qsm_queue_resp_e
[; ;qsm_queue.h: 33: {
[; ;qsm_queue.h: 34: QSM_QUEUE_OK = 0,
[; ;qsm_queue.h: 35: QSM_QUEUE_EMPTY,
[; ;qsm_queue.h: 36: QSM_QUEUE_FULL,
[; ;qsm_queue.h: 37: } qsm_queue_resp_t;
[; ;qsm_queue.h: 40: typedef struct qsm_queue_s
[; ;qsm_queue.h: 41: {
[; ;qsm_queue.h: 42: uint8_t head;
[; ;qsm_queue.h: 43: uint8_t tail;
[; ;qsm_queue.h: 44: uint8_t buffer[20];
[; ;qsm_queue.h: 45: uint8_t buffer_len;
[; ;qsm_queue.h: 46: qsm_queue_resp_t status;
[; ;qsm_queue.h: 47: } qsm_queue_t;
[; ;qsm_queue.h: 49: void qsm_queue_init( qsm_queue_t* b);
[; ;qsm_queue.h: 50: void qsm_queue_reset( qsm_queue_t * b);
[; ;qsm_queue.h: 51: qsm_queue_resp_t qsm_queue_get( qsm_queue_t * b, uint8_t* byte_out);
[; ;qsm_queue.h: 52: qsm_queue_resp_t qsm_queue_put( qsm_queue_t * b, uint8_t data_byte);
"39 qsm/qsm_queue.c
[v _qsm_queue_count `(uc ~T0 @X0 1 sf1`*CS1 ]
"40
{
[; ;qsm_queue.c: 39: static uint8_t qsm_queue_count ( qsm_queue_t const *b)
[; ;qsm_queue.c: 40: {
[e :U _qsm_queue_count ]
"39
[v _b `*CS1 ~T0 @X0 1 r1 ]
"40
[f ]
[; ;qsm_queue.c: 41: return (b ? (b->head - b->tail) : 0);
"41
[e ) -> ? != _b -> -> 0 `i `*CS1 : - -> . *U _b 0 `i -> . *U _b 1 `i -> 0 `i `uc ]
[e $UE 2  ]
[; ;qsm_queue.c: 42: }
"42
[e :UE 2 ]
}
"48
[v _qsm_queue_isfull `(uc ~T0 @X0 1 sf1`*CS1 ]
"49
{
[; ;qsm_queue.c: 48: static bool qsm_queue_isfull ( qsm_queue_t const *b)
[; ;qsm_queue.c: 49: {
[e :U _qsm_queue_isfull ]
"48
[v _b `*CS1 ~T0 @X0 1 r1 ]
"49
[f ]
[; ;qsm_queue.c: 50: return (b ? (qsm_queue_count(b) == b->buffer_len) : 1);
"50
[e ) -> ? != _b -> -> 0 `i `*CS1 : -> == -> ( _qsm_queue_count (1 _b `i -> . *U _b 3 `i `i -> 1 `i `uc ]
[e $UE 3  ]
[; ;qsm_queue.c: 51: }
"51
[e :UE 3 ]
}
"57
[v _qsm_queue_isempty `(uc ~T0 @X0 1 sf1`*CS1 ]
"58
{
[; ;qsm_queue.c: 57: static bool qsm_queue_isempty( qsm_queue_t const *b)
[; ;qsm_queue.c: 58: {
[e :U _qsm_queue_isempty ]
"57
[v _b `*CS1 ~T0 @X0 1 r1 ]
"58
[f ]
[; ;qsm_queue.c: 59: return (b ? (qsm_queue_count(b) == 0) : 1);
"59
[e ) -> ? != _b -> -> 0 `i `*CS1 : -> == -> ( _qsm_queue_count (1 _b `i -> 0 `i `i -> 1 `i `uc ]
[e $UE 4  ]
[; ;qsm_queue.c: 60: }
"60
[e :UE 4 ]
}
"66
[v _qsm_queue_get `(E109 ~T0 @X0 1 ef2`*S1`*uc ]
"67
{
[; ;qsm_queue.c: 66: qsm_queue_resp_t qsm_queue_get( qsm_queue_t* b, uint8_t* byte_out)
[; ;qsm_queue.c: 67: {
[e :U _qsm_queue_get ]
"66
[v _b `*S1 ~T0 @X0 1 r1 ]
[v _byte_out `*uc ~T0 @X0 1 r2 ]
"67
[f ]
[; ;qsm_queue.c: 68: if (!qsm_queue_isempty(b))
"68
[e $ ! ! != -> ( _qsm_queue_isempty (1 -> _b `*CS1 `i -> -> -> 0 `i `uc `i 6  ]
[; ;qsm_queue.c: 69: {
"69
{
[; ;qsm_queue.c: 70: *byte_out = b->buffer[b->tail % b->buffer_len];
"70
[e = *U _byte_out *U + &U . *U _b 2 * -> -> % -> . *U _b 1 `i -> . *U _b 3 `i `ui `ux -> -> # *U &U . *U _b 2 `ui `ux ]
[; ;qsm_queue.c: 71: b->tail++;
"71
[e ++ . *U _b 1 -> -> 1 `i `uc ]
[; ;qsm_queue.c: 72: b->status = QSM_QUEUE_OK;
"72
[e = . *U _b 4 . `E109 0 ]
"73
}
[; ;qsm_queue.c: 73: }
[e $U 7  ]
"74
[e :U 6 ]
[; ;qsm_queue.c: 74: else
[; ;qsm_queue.c: 75: {
"75
{
[; ;qsm_queue.c: 76: b->status = QSM_QUEUE_EMPTY;
"76
[e = . *U _b 4 . `E109 1 ]
"77
}
[e :U 7 ]
[; ;qsm_queue.c: 77: }
[; ;qsm_queue.c: 78: return b->status;
"78
[e ) . *U _b 4 ]
[e $UE 5  ]
[; ;qsm_queue.c: 79: }
"79
[e :UE 5 ]
}
"85
[v _qsm_queue_put `(E109 ~T0 @X0 1 ef2`*S1`uc ]
"86
{
[; ;qsm_queue.c: 85: qsm_queue_resp_t qsm_queue_put( qsm_queue_t* b, uint8_t data_byte)
[; ;qsm_queue.c: 86: {
[e :U _qsm_queue_put ]
"85
[v _b `*S1 ~T0 @X0 1 r1 ]
[v _data_byte `uc ~T0 @X0 1 r2 ]
"86
[f ]
[; ;qsm_queue.c: 87: if (b)
"87
[e $ ! != _b -> -> 0 `i `*S1 9  ]
[; ;qsm_queue.c: 88: {
"88
{
[; ;qsm_queue.c: 89: if (!qsm_queue_isfull(b))
"89
[e $ ! ! != -> ( _qsm_queue_isfull (1 -> _b `*CS1 `i -> -> -> 0 `i `uc `i 10  ]
[; ;qsm_queue.c: 90: {
"90
{
[; ;qsm_queue.c: 91: b->buffer[b->head % b->buffer_len] = data_byte;
"91
[e = *U + &U . *U _b 2 * -> -> % -> . *U _b 0 `i -> . *U _b 3 `i `ui `ux -> -> # *U &U . *U _b 2 `ui `ux _data_byte ]
[; ;qsm_queue.c: 92: b->head++;
"92
[e ++ . *U _b 0 -> -> 1 `i `uc ]
[; ;qsm_queue.c: 93: b->status = QSM_QUEUE_OK;
"93
[e = . *U _b 4 . `E109 0 ]
"94
}
[; ;qsm_queue.c: 94: } else
[e $U 11  ]
[e :U 10 ]
[; ;qsm_queue.c: 95: {
"95
{
[; ;qsm_queue.c: 96: b->status = QSM_QUEUE_FULL;
"96
[e = . *U _b 4 . `E109 2 ]
"97
}
[e :U 11 ]
"98
}
[e :U 9 ]
[; ;qsm_queue.c: 97: }
[; ;qsm_queue.c: 98: }
[; ;qsm_queue.c: 99: return b->status;
"99
[e ) . *U _b 4 ]
[e $UE 8  ]
[; ;qsm_queue.c: 100: }
"100
[e :UE 8 ]
}
"106
[v _qsm_queue_reset `(v ~T0 @X0 1 ef1`*S1 ]
"107
{
[; ;qsm_queue.c: 106: void qsm_queue_reset( qsm_queue_t * b)
[; ;qsm_queue.c: 107: {
[e :U _qsm_queue_reset ]
"106
[v _b `*S1 ~T0 @X0 1 r1 ]
"107
[f ]
[; ;qsm_queue.c: 108: if (b)
"108
[e $ ! != _b -> -> 0 `i `*S1 13  ]
[; ;qsm_queue.c: 109: {
"109
{
[; ;qsm_queue.c: 110: b->head = 0;
"110
[e = . *U _b 0 -> -> 0 `i `uc ]
[; ;qsm_queue.c: 111: b->tail = 0;
"111
[e = . *U _b 1 -> -> 0 `i `uc ]
[; ;qsm_queue.c: 112: b->status = QSM_QUEUE_OK;
"112
[e = . *U _b 4 . `E109 0 ]
"113
}
[e :U 13 ]
[; ;qsm_queue.c: 113: }
[; ;qsm_queue.c: 114: return;
"114
[e $UE 12  ]
[; ;qsm_queue.c: 115: }
"115
[e :UE 12 ]
}
"121
[v _qsm_queue_init `(v ~T0 @X0 1 ef1`*S1 ]
"122
{
[; ;qsm_queue.c: 121: void qsm_queue_init( qsm_queue_t* b )
[; ;qsm_queue.c: 122: {
[e :U _qsm_queue_init ]
"121
[v _b `*S1 ~T0 @X0 1 r1 ]
"122
[f ]
[; ;qsm_queue.c: 123: if (b)
"123
[e $ ! != _b -> -> 0 `i `*S1 15  ]
[; ;qsm_queue.c: 124: {
"124
{
[; ;qsm_queue.c: 125: b->head = 0;
"125
[e = . *U _b 0 -> -> 0 `i `uc ]
[; ;qsm_queue.c: 126: b->tail = 0;
"126
[e = . *U _b 1 -> -> 0 `i `uc ]
[; ;qsm_queue.c: 127: b->buffer_len = 20;
"127
[e = . *U _b 3 -> -> 20 `i `uc ]
[; ;qsm_queue.c: 128: b->status = QSM_QUEUE_OK;
"128
[e = . *U _b 4 . `E109 0 ]
[; ;qsm_queue.c: 129: memset((void*) b->buffer, 0x00, 20);
"129
[e ( _memset (3 , , -> &U . *U _b 2 `*v -> 0 `i -> -> 20 `i `ui ]
"130
}
[e :U 15 ]
[; ;qsm_queue.c: 130: }
[; ;qsm_queue.c: 131: return;
"131
[e $UE 14  ]
[; ;qsm_queue.c: 132: }
"132
[e :UE 14 ]
}
"137
[v _qsm_queue_get_status `(E109 ~T0 @X0 1 sf1`*CS1 ]
"138
{
[; ;qsm_queue.c: 137: static qsm_queue_resp_t qsm_queue_get_status( qsm_queue_t const *b )
[; ;qsm_queue.c: 138: {
[e :U _qsm_queue_get_status ]
"137
[v _b `*CS1 ~T0 @X0 1 r1 ]
"138
[f ]
[; ;qsm_queue.c: 139: return b->status;
"139
[e ) . *U _b 4 ]
[e $UE 16  ]
[; ;qsm_queue.c: 140: }
"140
[e :UE 16 ]
}
